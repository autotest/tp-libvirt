- nwfilter_vm_start:
    type = nwfilter_vm_start
    start_vm = "no"
    kill_vm = "yes"
    exist_filter = "no-mac-spoofing"
    status_error = "no"
    verify_host_dmesg = "no"
    variants:
        - possitive_test:
            filter_name = "testcase"
            variants:
                - new_filter:
                    variants:
                        - variable_notation:
                            filter_chain = "root"
                            check_cmd = "iptables -L FO-DEVNAME"
                            expect_match = "ACCEPT\s*sctp\s*--\s*anywhere\s*10.0.99.3\s*DSCP\smatch\s0x03\s?sctp\sspt:35\sdpt:90\sc?t?state\sESTABLISHED\sctdir"
                            parameter_name_0 = 'A'
                            parameter_value_0 = '10.0.99.1'
                            parameter_name_1 = 'A'
                            parameter_value_1 = '10.0.99.2'
                            parameter_name_2 = 'A'
                            parameter_value_2 = '10.0.99.3'
                            parameter_name_3 = 'B'
                            parameter_value_3 = '88'
                            parameter_name_4 = 'B'
                            parameter_value_4 = '89'
                            parameter_name_5 = 'B'
                            parameter_value_5 = '90'
                            parameter_name_6 = 'C'
                            parameter_value_6 = '33'
                            parameter_name_7 = 'C'
                            parameter_value_7 = '34'
                            parameter_name_8 = 'C'
                            parameter_value_8 = '35'
                            rule = "rule_action=accept rule_direction=out rule_priority=500 protocol=tcp srcipaddr=$A[0] dscp=1 srcportstart=$B[0] EOL rule_action=accept rule_direction=out protocol=udp srcipaddr=$A[1] dscp=2 srcportstart=$B[1] EOL rule_action=accept rule_direction=out rule_priority=500 protocol=sctp srcipaddr=$A[2] dscp=3 srcportstart=$B[2] dstportstart=$C[2]"
                        - ip_learning:
                            filter_chain = "root"
                            filter_name = "clean-traffic"
                            exist_filter = "${filter_name}"
                            filterref_name_0 = "no-mac-spoofing"
                            filterref_name_1 = "no-ip-spoofing"
                            filterref_name_2 = "allow-incoming-ipv4"
                            filterref_name_3 = "no-arp-spoofing"
                            filterref_name_4 = "no-other-l2-traffic"
                            filterref_name_4 = "qemu-announce-self"
                            rule = "rule_action=accept rule_direction=out rule_priority=-650 protocol=mac protocolid=ipv4 EOL rule_action=accept rule_direction=inout rule_priority=-500 protocol=mac protocolid=arp"
                            parameter_name_0 = 'CTRL_IP_LEARNING'
                            parameter_value_0 = 'dhcp'
                            variants:
                                - default:
                                - kill_libvirtd:
                                    kill_libvirtd = "yes"
                                    bug_url = "https://bugzilla.redhat.com/show_bug.cgi?id=1075543"
                        - chain_priority_greater_than_rule:
                            filter_chain = "arp-new"
                            filter_priority = "-500"
                            rule = "rule_action=accept rule_direction=inout rule_priority=-501 EOL"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-${filter_chain}"
                            expect_match = "-j ACCEPT"
                        - dhcpserver_variable:
                            filter_name = "disallow-dhcp-server"
                            filter_chain = "ipv4"
                            filter_priority = "-700"
                            rule = "rule_action=drop rule_direction=out rule_priority=100 protocol=ip srcipaddr=0.0.0.0 dstipaddr=255.255.255.255 ip_protocol=udp srcportstart=68 dstportstart=67 EOL rule_action=drop rule_direction=in rule_priority=100 protocol=ip srcipaddr=$DHCPSERVER ip_protocol=udp srcportstart=67 dstportstart=68"
                            parameter_name_0 = 'DHCPSERVER'
                            parameter_value_0 = '192.168.122.1'
                            check_cmd = "ebtables -t nat -L O-DEVNAME-${filter_chain}"
                            expect_match = "-p IPv4 --ip-src 192.168.122.1 --ip-proto udp --ip-sport 67 --ip-dport 68 -j DROP"
                        - disallow_ipv6:
                            filter_name = "disallow-ipv6"
                            filter_chain = "ipv6"
                            rule = "rule_action=drop rule_direction=inout rule_priority=500 EOL"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-${filter_chain}"
                            expect_match = "-j DROP"
                        - disallow_dhcp:
                            filter_name = "disallow-dhcp"
                            filter_chain = "ipv4"
                            rule = "rule_action=drop rule_direction=out rule_priority=100 EOL"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-${filter_chain}"
                            expect_match = "-j DROP"
                        - disallow_arp:
                            filter_name = "disallow-arp"
                            filter_chain = "arp"
                            rule = "rule_action=drop rule_direction=inout rule_priority=500 EOL"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-${filter_chain}"
                            expect_match = "-j DROP"
                        - clean_traffic:
                            filter_chain = "root"
                            filter_name = "clean-traffic"
                            exist_filter = "${filter_name}"
                            filterref_name_0 = "no-mac-spoofing"
                            filterref_name_1 = "no-ip-spoofing"
                            filterref_name_2 = "allow-incoming-ipv4"
                            filterref_name_3 = "no-arp-spoofing"
                            filterref_name_4 = "no-other-l2-traffic"
                            filterref_name_5 = "qemu-announce-self"
                            rule = "rule_action=accept rule_direction=out rule_priority=-650 protocol=mac protocolid=ipv4 EOL rule_action=accept rule_direction=inout rule_priority=-500 protocol=mac protocolid=arp"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-ipv4-ip"
                            expect_match = "-p IPv4 --ip-src 192.168\S+ -j RETURN"
                        - allow_ipv6:
                            filter_name = "allow-ipv6"
                            filter_chain = "ipv6"
                            rule = "rule_action=accept rule_direction=inout rule_priority=500 EOL"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-${filter_chain}"
                            expect_match = "-j ACCEPT"
                        - noexec_tmp_dir:
                            mount_noexec_tmp = "yes"
                            filter_name = "disallow-arp"
                            filter_chain = "arp"
                            rule = "rule_action=drop rule_direction=inout rule_priority=500 EOL"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-${filter_chain}"
                            expect_match = "-j DROP"
                        - ipset_test:
                            ipset_command = "ipset -N blacklist iphash;ipset -A blacklist 192.168.123.236"
                            filter_name = "ipset-test"
                            rule = "rule_action=drop rule_direction=in rule_priority=500 protocol=all ipset=blacklist ipsetflags=src,src EOL"
                            check_cmd = "iptables -L FO-DEVNAME"
                            expect_match = "DROP\s*all\s*--\s*anywhere\s*anywhere\s*match-set\sblacklist\ssrc,src"
                - default_filter:
                    variants:
                        - no_other_l2_traffic:
                            filter_name = "no-other-l2-traffic"
                            exist_filter = "${filter_name}"
                            filterref_name_0 = "${filter_name}"
                            check_cmd = "ebtables -t nat -L libvirt-I-DEVNAME"
                            expect_match = "-j DROP"
                        - no_mac_spoofing:
                            filter_name = "no-mac-spoofing"
                            exist_filter = "${filter_name}"
                            filterref_name_0 = "${filter_name}"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-mac"
                            expect_match = "-j DROP"
                        - no_mac_broadcast:
                            filter_name = "no-mac-broadcast"
                            exist_filter = "${filter_name}"
                            filterref_name = "${filter_name}"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-ipv4"
                            expect_match = "-d Broadcast -j DROP"
                        - no_ip_spoofing:
                            filter_name = "no-ip-spoofing"
                            exist_filter = "${filter_name}"
                            filterref_name_0 = "${filter_name}"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-ipv4-ip"
                            expect_match = "-j DROP"
                        - no_arp_spoofing:
                            filter_name = "no-arp-spoofing"
                            exist_filter = "${filter_name}"
                            filterref_name_0 = "${filter_name}"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-arp-mac"
                            expect_match = "-j DROP"
                        - allow_dhcp:
                            filter_name = "allow-dhcp"
                            exist_filter = "${filter_name}"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-ipv4"
                            expect_match = "-p IPv4 --ip-src 0.0.0.0 --ip-dst 255.255.255.255 --ip-proto udp --ip-sport 68 --ip-dport 67 -j ACCEPT"
                        - allow_ipv4:
                            filter_name = "allow-ipv4"
                            exist_filter = "${filter_name}"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-ipv4"
                            expect_match = "-j ACCEPT"
                        - allow_incoming_ipv4:
                            filter_name = "allow-incoming-ipv4"
                            exist_filter = "${filter_name}"
                            check_cmd = "ebtables -t nat -L O-DEVNAME-ipv4"
                            expect_match = "-j ACCEPT"
                        - allow_arp:
                            filter_name = "allow-arp"
                            exist_filter = "${filter_name}"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-arp"
                            expect_match = "-j ACCEPT"
                        - clean_traffic_gateway:
                            filter_name = "clean-traffic-gateway"
                            exist_filter = "${filter_name}"
                            check_cmd = ""
                            expect_match = ""
                            need_vm2 = "yes"
                            add_vm_name = "vm2"
                            parameter_name_0 = "GATEWAY_MAC"
                            parameter_value_0 = "ff:ff:ff:ff:ff:ff"
                            parameter_name_1 = "GATEWAY_MAC"
                            parameter_value_1 = "MAC_of_virbr0"
                            dst_outside = "www.google.com"
                            ping_timeout = "5"
                        - clean_traffic_with_params:
                            filter_name = "clean-traffic"
                            exist_filter = "${filter_name}"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-mac, ebtables -t nat -L I-DEVNAME-mac, ebtables -t nat -L I-DEVNAME-ipv4-ip, ebtables -t nat -L I-DEVNAME-ipv4-ip, ebtables -t nat -L I-DEVNAME-arp-mac, ebtables -t nat -L I-DEVNAME-arp-mac, ebtables -t nat -L I-DEVNAME-arp-ip, ebtables -t nat -L I-DEVNAME-arp-ip"
                            expect_match = "-s 52:54:00:7b:35:94 -j RETURN, -s 52:54:00:7b:35:96 -j RETURN, -p IPv4 --ip-src 104.207.129.11 -j RETURN, -p IPv4 --ip-src 104.207.129.12 -j RETURN, -p ARP --arp-mac-src 52:54:00:7b:35:94 -j RETURN, -p ARP --arp-mac-src 52:54:00:7b:35:96 -j RETURN, -p ARP --arp-ip-src 104.207.129.11 -j RETURN, -p ARP --arp-ip-src 104.207.129.12 -j RETURN"
                            parameter_name_0 = 'IP'
                            parameter_value_0 = '104.207.129.11'
                            parameter_name_1 = 'IP'
                            parameter_value_1 = '104.207.129.12'
                            parameter_name_2 = 'MAC'
                            parameter_value_2 = '52:54:00:7b:35:94'
                            parameter_name_3 = 'MAC'
                            parameter_value_3 = '52:54:00:7b:35:96'
                        - clean_traffic_without_params:
                            filter_name = "clean-traffic"
                            exist_filter = "${filter_name}"
                            check_cmd = "ebtables -t nat -L I-DEVNAME-mac, ebtables -t nat -L I-DEVNAME-arp-mac"
                            expect_match = "-s VMMAC -j RETURN, -p ARP --arp-mac-src VMMAC -j RETURN"
        - negative_test:
            status_error = "yes"
            variants:
                - ip_learning_err:
                    filter_uuid = "11111111-b071-6127-b4ec-111111111111"
                    filter_chain = "root"
                    filter_name = "clean-traffic"
                    exist_filter = "${filter_name}"
                    filterref_name_0 = "no-mac-spoofing"
                    filterref_name_1 = "no-ip-spoofing"
                    filterref_name_2 = "allow-incoming-ipv4"
                    filterref_name_3 = "no-arp-spoofing"
                    filterref_name_4 = "no-other-l2-traffic"
                    filterref_name_5 = "qemu-announce-self"
                    rule = "rule_action=accept rule_direction=out rule_priority=-650 protocol=mac protocolid=ipv4 EOL rule_action=accept rule_direction=inout rule_priority=-500 protocol=mac protocolid=arp"
                    parameter_name_0 = 'CTRL_IP_LEARNING'
                    parameter_value_0 = 'invalid'
                - dhcpserver_variable:
                    filter_name = "disallow-dhcp-server"
                    filter_uuid = "11111111-b071-6127-b4ec-111111111111"
                    filter_chain = "ipv4"
                    filter_priority = "-700"
                    rule = "rule_action=drop rule_direction=out rule_priority=100 protocol=ip srcipaddr=0.0.0.0 dstipaddr=255.255.255.255 ip_protocol=udp srcportstart=68 dstportstart=67 EOL rule_action=drop rule_direction=in rule_priority=100 protocol=ip srcipaddr=$DHCPSERVER ip_protocol=udp srcportstart=67 dstportstart=68"
