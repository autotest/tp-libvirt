- virtual_network.qemu_test.netperf_stress_test: image_copy
    create_vm_libvirt = yes
    master_images_clone = img1
    main_vm = avocado-vt-vm1
    kill_vm_libvirt = yes
    type = netperf_stress_test
    #netperf server is main vm, the netperf client is the host or another vm
    #Set the netperf client via dsthost
    netperf_link = netperf-2.7.1.tar.bz2
    server_path = /var/tmp/
    client_path = /var/tmp/
    netperf_test_duration = 120
    netperf_para_sessions = 1
    test_protocols = TCP_STREAM
    netperf_local_cpu = yes
    netperf_remote_cpu = yes
    disable_firewall = "service iptables stop; systemctl stop firewalld.service"
    deviation_time = 20
    Windows:
        netperf_server_link_win = "netserver-2.6.0.exe"
        netperf_client_link_win = "netperf.exe"
        server_path_win = "c:\\"
        client_path_win = "c:\\"
        disable_firewall = "netsh firewall set opmode mode=disable"
        Win10.i386:
            netperf_server_link_win = "netserver_32bit.exe"
            netperf_client_link_win = "netperf_32bit.exe"
    RHEL.4:
        netperf_link = netperf-2.4.5.tar.bz2
    variants:
        - guest2guest:
            vms += " vm2"
            netperf_client = ${main_vm}
            netperf_server = vm2
            Windows:
                start_vm_vm2 = no
        - host2guest:
            netperf_client = ${vms}
            netperf_server = localhost
    variants:
        - TCP_STREAM:
            test_protocols = TCP_STREAM
        - TCP_RR:
            test_protocols = TCP_RR
        - TCP_CRR:
            test_protocols = TCP_CRR
        - TCP_MAERTS:
            test_protocols = TCP_MAERTS
        - TCP_SENDFILE:
            test_protocols = TCP_SENDFILE
            no Windows
        - UDP_STREAM:
            test_protocols = UDP_STREAM
        - UDP_RR:
            test_protocols = UDP_RR
