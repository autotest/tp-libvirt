- virtual_network.iface_options:
    type = iface_options
    take_regular_screendumps = "no"
    start_vm = "no"
    status_error = "no"
    start_error = "no"
    variants:
        - iface_source_default:
            test_iface_option_cmd = "yes"
            change_iface_options = "yes"
            iface_type = "network"
            iface_source = "{'network':'default'}"
        - iface_driver:
            test_iface_option_cmd = "yes"
            change_iface_options = "yes"
            iface_model = "virtio"
            iface_source = "{'network':'default'}"
            variants:
                - driver_txmode_iothread:
                    iface_driver = "{'txmode':'iothread'}"
                - driver_txmode_timer:
                    iface_driver = "{'txmode':'timer'}"
                - driver_queues_positive:
                    iface_driver =  "{'name':'vhost','txmode':'iothread','ioeventfd':'on','event_idx':'off','queues':'5'}"
                    variants:
                        - modify_iface:
                        - attach_iface:
                            change_iface_options = "no"
                            test_iface_option_cmd = "no"
                            test_iface_option_xml = "yes"
                            attach_iface_device = "live"
                - driver_queues_negative:
                    start_error = "yes"
                    iface_driver =  "{'name':'vhost','queues':'9'}"
                - driver_vhost:
                    test_vhost_net = "yes"
        - iface_offloads:
            iface_source = "{'network':'default'}"
            iface_model = "virtio"
            iface_driver_host = "{'csum':'off','gso':'off','tso4':'off','tso6':'off','ecn':'off','ufo':'off'}"
            iface_driver_guest = "{'csum':'off','tso4':'off','tso6':'off','ecn':'off','ufo':'off'}"
            variants:
                - attach_iface:
                    #test_iface_option_cmd = "yes"
                    test_option_offloads = "yes"
                    attach_iface_device = "live"
                - update_iface:
                    status_error = "yes"
                    update_iface_device = "yes"
        - iface_type:
            variants:
                - type_user:
                    iface_type = "user"
                    iface_model = "virtio"
                    change_iface_options = "yes"
                    attach_iface_device = "live"
                    test_iface_user = "yes"
                    serial_login = "yes"
                - type_mcast:
                    iface_type = "mcast"
                    iface_model = "rtl8139"
                    iface_source = "{'address':'230.144.17.1','port':'5558'}"
                    attach_iface_device = "config"
                    additional_guest = "yes"
                    test_iface_mcast = "yes"
                    serial_login = "yes"
        - iface_unprivileged_user:
            unprivileged_user = "autotest"
            change_iface_options = "yes"
            serial_login = "yes"
            iface_type = "bridge"
            iface_model = "virtio"
            iface_source = "{'bridge':'virbr0'}"
        - iface_macvtap:
            change_iface_options = "yes"
            serial_login = "yes"
            iface_type = "direct"
            iface_model = "virtio"
            iface_target = "macvtap"
            test_iface_option_xml = "yes"
            test_guest_ip = "yes"
            variants:
                - mode_bridge:
                    iface_source = "{'dev':'eno1','mode':'bridge'}"
                    test_libvirtd = "yes"
                - mode_vepa:
                    iface_source = "{'dev':'eno1','mode':'vepa'}"
                - mode_private:
                    iface_source = "{'dev':'eno1','mode':'private'}"
                - mode_passthrough:
                    iface_source = "{'dev':'eno1','mode':'passthrough'}"
            variants:
                - driver_vhost:
                - driver_qemu:
                    iface_driver = "{'name':'qemu'}"
        - iface_backend:
            change_iface_options = "yes"
            test_iface_option_cmd = "yes"
            test_backend = "yes"
            iface_source = "{'network':'default'}"
            iface_model = "virtio"
            variants:
                - default_test:
                - specific_backend:
                    iface_backend = "{'tap':'/dev/net/mytap','vhost':'/dev/myvhost-net'}"
                - error_test:
                    start_error = "yes"
                    iface_backend = "{'tap':'/dev/net/mytap','vhost':'/dev/myvhost-net'}"
