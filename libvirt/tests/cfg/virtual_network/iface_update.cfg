- virtual_network.iface_update:
    type = iface_update
    take_regular_screendumps = "no"
    start_vm = "no"
    start_error = "no"
    variants:
        - positive_test:
            status_error = "no"
            variants:
                - update_bandwidth:
                    new_iface_inbound = "{'average':'1000','peak':'5000','burst':'1024'}"
                    new_iface_outbound = "{'average':'128','peak':'256','burst':'256'}"
                - update_link:
                    new_iface_link = "down"
                - update_link_with_rom:
                    iface_rom = "{'enabled':'yes','bar':'on','file':'/usr/share/qemu-kvm/%s-virtio.rom'}"
                    new_iface_link = "up"
                - update_link_without_addr:
                    iface_rom = "{'enabled':'yes','bar':'on','file':'/usr/share/qemu-kvm/%s-virtio.rom'}"
                    new_iface_link = "up"
                    del_address = "yes"
                - update_link_diff_type:
                    direct_net = "yes"
                    net_name = "direct_net"
                    direct_mode = "bridge"
                    new_iface_link = "down"
                    create_new_net = "yes"
                    iface_source = "{'network': 'direct_net'}"
                    new_iface_source = "{'network': 'direct_net'}"
                    new_iface_type = "network"
                - update_source:
                    create_new_net = "yes"
                    new_iface_type = "network"
                    new_iface_source = "{'network':'net7'}"
                    net_name = "net7"
                - add_filter:
                    new_iface_filter = "clean-traffic"
                - add_filter_with_paramters:
                    new_iface_filter = "clean-traffic"
                    new_iface_filter_parameters = "[{'name': 'IP', 'value': '1.2.3.4'}, {'name': 'MAC', 'value': '52:54:00:7b:35:93'}]"
                    rules = ["-s 52:54:00:7b:35:93 -j RETURN", "-p IPv4 --ip-src 1.2.3.4 -j RETURN", "-p ARP --arp-mac-src 52:54:00:7b:35:93 -j RETURN", "-p ARP --arp-ip-src 1.2.3.4 -j RETURN"]
                - update_filter:
                    iface_filter = "no-mac-spoofing"
                    new_iface_filter = "clean-traffic"
                - update_filter_parameter:
                    iface_filter = "no-mac-spoofing"
                    new_iface_filter = "clean-traffic"
                    new_iface_filter_parameters = "[{'name': 'IP', 'value': '1.2.3.4'}, {'name': 'IP', 'value': '1.2.3.5'}]"
                    rules =  ["-p IPv4 --ip-src 1.2.3.4 -j RETURN", "-p IPv4 --ip-src 1.2.3.5 -j RETURN", "-p ARP --arp-ip-src 1.2.3.4 -j RETURN", "-p ARP --arp-ip-src 1.2.3.5 -j RETURN"]
                - update_ignore_unsupported_features:
                    iface_driver = "{'name':'vhost','txmode':'iothread','ioeventfd':'on','event_idx':'off','queues':'5','rx_queue_size':'256'}"
                    iface_driver_host = "{'csum':'off','gso':'off','tso4':'off','tso6':'off','ecn':'off','ufo':'off','mrg_rxbuf':'off'}"
                    iface_driver_guest = "{'csum':'off','tso4':'off','tso6':'off','ecn':'off','ufo':'off'}"
                    iface_mtu = '{"size": 1500}'
                    disk_boot = 1
                    iface_boot = 2
                    iface_rom = "{'enabled':'yes','bar':'on','file':'/usr/share/qemu-kvm/%s-virtio.rom'}"
                    iface_filter = "no-mac-spoofing"
                    new_iface_filter = "clean-traffic"
                - del_filter:
                    iface_filter = "clean-traffic"
                    del_filter = "yes"
                    check_libvirtd = "yes"
                - cold_update_alias:
                    cold_update = "yes"
                    new_iface_alias = "{'name': 'ua-alias1'}"
                - add_coalesce:
                    new_iface_coalesce = {'max': 32}
                - del_coalesce:
                    iface_coalesce = {'max': 32}
                    del_coalesce = 'yes'
                - update_coalesce:
                    iface_coalesce = {'max': 64}
                    new_iface_coalesce = {'max': 32}
        - negative_test:
            status_error = "yes"
            variants:
                - update_alias:
                    new_iface_alias = "{'name': 'ua-82c8ae17-a501-466d-b14c-d002e324ee89'}"
                    expect_err_msg = "Operation not supported: cannot modify network device alias|operation forbidden: changing device alias is not allowed"
                - update_alias_match_pci:
                    new_iface_alias = "{'name': 'ua-3e5d2629-8b0c-4320-9592-d67b0c343d27'}"
                    expect_err_msg = "Operation not supported: cannot modify network device alias|operation forbidden: changing device alias is not allowed"
                    del_mac = "yes"
                - update_alias_match_mac:
                    new_iface_alias = "{'name': 'ua-dd8ae3d4-3297-45b0-8366-d765aaef36c4'}"
                    expect_err_msg = "Operation not supported: cannot modify network device alias|operation forbidden: changing device alias is not allowed"
                    del_address = "yes"
                - update_queues:
                    iface_driver = "{'name':'vhost','queues':'2'}"
                    new_iface_driver = "{'name':'vhost','queues':'4'}"
                    expect_err_msg = "Operation not supported: cannot modify.* network device driver attributes"
                - update_driver:
                    new_iface_driver = "{'name':'vhost','txmode':'iothread','ioeventfd':'on','event_idx':'off','queues':'5','rx_queue_size':'256'}"
                    new_iface_driver_host = "{'csum':'off','gso':'off','tso4':'off','tso6':'off','ecn':'off','ufo':'off','mrg_rxbuf':'off'}"
                    new_iface_driver_guest = "{'csum':'off','tso4':'off','tso6':'off','ecn':'off','ufo':'off'}"
                    expect_err_msg = "Operation not supported: cannot modify.* network device driver attributes"
                - update_model:
                    iface_model = "virtio"
                    new_iface_model = "rtl8139"
                    expect_err_msg = "Operation not supported: cannot modify network device model from virtio to rtl8139"
                - update_rom:
                    new_iface_rom = "{'bar':'on','file':'/etc/fake/boot.bin'}"
                    expect_err_msg = "Operation not supported: cannot modify network device rom bar setting"
                - add_rom_enable:
                    new_iface_rom = "{'enabled':'yes'}"
                    expect_err_msg = "Operation not supported: cannot modify network device rom enabled setting"
                - update_rom_enable:
                    iface_rom = "{'enabled':'yes'}"
                    new_iface_rom = "{'enabled':'no'}"
                    expect_err_msg = "Operation not supported: cannot modify network device rom enabled setting"
                - update_rom_and_address:
                    iface_rom = "{'enabled':'yes','bar':'on','file':'/usr/share/qemu-kvm/%s-virtio.rom'}"
                    new_iface_rom = "{'enabled':'no'}"
                    del_address = "yes"
                    del_rom = "yes"
                    expect_err_msg = "Operation not supported: cannot modify network device rom enabled setting"
                - del_rom_enable:
                    iface_rom = "{'enabled':'yes'}"
                    del_rom = "yes"
                    expect_err_msg = "Operation not supported: cannot modify network device rom enabled setting"
                - update_bandwidth:
                    new_iface_type = "network"
                    new_iface_source = "{'network':'default'}"
                    new_iface_inbound = "{'average':'1000','peak':'5000','floor':'200','burst':'1024'}"
                    new_iface_outbound = "{'average':'128','peak':'256','burst':'256'}"
                    expect_err_msg = "Operation not supported: Invalid use of 'floor' on interface with MAC address.* - network.* has no inbound QoS set"
                - update_target:
                    new_iface_target = "{'dev':'test'}"
                    expect_err_msg = "Operation not supported: cannot modify network device tap name"
                - update_mtu:
                    iface_mtu = "{'size':'9000'}"
                    variants:
                        - not_support:
                            new_iface_mtu = "{'size':'5000'}"
                            expect_err_msg = "Operation not supported: cannot modify MTU"
                        - invalid_number:
                            new_iface_mtu = "{'size':'-4'}"
                            expect_err_msg = "XML error: malformed mtu size"
                        - invalid_character:
                            new_iface_mtu = "{'size':'s'}"
                            expect_err_msg = "XML error: malformed mtu size"
                - update_qos:
                    variants:
                        - average:
                            variants:
                                - negative_val:
                                    new_iface_inbound = "{'average':'-1','peak':'5000','floor':'200','burst':'1024'}"
                                    new_iface_outbound = "{'average':'128','peak':'256','burst':'256'}"
                                    expect_err_msg = "could not convert bandwidth average value"
                                - huge_val:
                                    new_iface_inbound = "{'average':'10000000000000000','peak':'5000','burst':'1024'}"
                                    new_iface_outbound = "{'average':'128','peak':'256','burst':'256'}"
                                    expect_err_msg = 'Illegal "quantum"'
                                - missing:
                                    new_iface_inbound = "{'peak':'5000','burst':'1024'}"
                                    new_iface_outbound = "{'peak':'256','burst':'256'}"
                                    expect_err_msg = "Missing mandatory average or floor attributes"
                        - network_qos:
                            variants:
                                - missing:
                                    del_net_bandwidth = 'yes'
                                    new_iface_inbound = "{'average':'1000','peak':'5000','floor':'200','burst':'1024'}"
                                    new_iface_outbound = "{'average':'128','peak':'256','burst':'256'}"
                                    expect_err_msg = "has no inbound QoS set"
