- virtual_network.passt.lifecycle:
    type = passt_lifecycle
    func_supported_since_libvirt_ver = (9, 0, 0)
    host_iface =
    outside_ip = 'www.redhat.com'
    start_vm = no
    mtu = 65520
    variants operation:
        - save_restore:
            operation_a = save
            operation_b = restore
            options_a = {'name': vm_name, 'path': save_path}
            options_b = {'path': save_path}
            passt_running = no
        - managedsave_start:
            operation_a = managedsave
            operation_b = start
            passt_running = no
        - suspend_resume:
            operation_a = suspend
            operation_b = resume
            passt_running = yes
    variants:
        - default:
        - vhostuser:
            vhostuser = yes
            func_supported_since_libvirt_ver = (10, 10, 0)
    variants user_type:
        - non_root_user:
            test_user = USER.EXAMPLE
            test_passwd = PASSWORD.EXAMPLE
            user_id = 
            unpr_vm_name = UNPRIVILEGED_VM.EXAMPLE
            socket_dir = f'/run/user/{user_id}/libvirt/qemu/run/passt/'
        - root_user:
            test_user = root
            user_id = 107
            log_dir = /run/user/${user_id}
            socket_dir = f'/run/libvirt/qemu/passt/'
    variants scenario:
        - ip_portfw:
            ipv6_prefix = 128
            alias = {'name': 'ua-c87b89ff-b769-4abc-921f-30d42d7aec5b'}
            backend = {'type': 'passt'}
            ips = [{'address': '172.17.2.4', 'family': 'ipv4', 'prefix': '24'}, {'address': '2001:db8:ac10:fd01::20', 'family': 'ipv6'}]
            vm_iface = eno1
            vm_ping_outside = pass
            vm_ping_host_public = pass
            portForward_0 = {'attrs': {'proto': 'tcp'}, 'ranges': [{'start': '31339', 'to': '41339'}]}
            portForward_1 = {'attrs': {'proto': 'udp'}, 'ranges': [{'start': '2025'}]}
            portForward_2 = {'attrs': {'proto': 'tcp', 'address': host_ip}, 'ranges': [{'start': '4025', 'end': '4035', 'to': '5025'},{'start': '9000'}, {'start': '4030', 'end': '4034', 'exclude': 'yes'}]}
            portForwards = [${portForward_0}, ${portForward_1}, ${portForward_2}]
            proc_checks = ['--tcp-ports 31339:41339', '--udp-ports 2025', f'--tcp-ports {host_ip}/4025-4035:5025-5035,9000,~4030-4034']
            tcp_port_list = [4025, 4026, 4027, 4028, 4029, 4035, 9000, '*:31339']
            udp_port_list = ['*:2025']
            conn_check_args_0 = ('TCP4', host_ip, 31339, 41339, True, None)
            conn_check_args_1 = ('TCP4', host_ip, 4025, 5025, True, None)
            conn_check_args_2 = ('TCP4', 'localhost', 4025, 5025, False, 'Connection refused')
            conn_check_args_3 = ('TCP4', 'localhost', 31339, 41339, True, None)
            conn_check_args_4 = ('TCP4', host_ip, 4030, 4030, False, 'Connection refused')
            conn_check_args_5 = ('TCP6', 'localhost', 31339, 41339, True, None)
            conn_check_args_6 = ('TCP6', '::1', 31339, 41339, True, None)
            conn_check_args_7 = ('UDP4', 'localhost', 2025, 2025, True, None)
            iface_attrs = {'model': 'virtio', 'acpi': {'index': '1'}, 'ips': ${ips}, 'backend': ${backend}, 'source': {'dev': host_iface}, 'alias': ${alias}, 'type_name': 'user', 'portForwards': ${portForwards}}
            s390-virtio:
                vm_iface = enc1
                iface_attrs = {'model': 'virtio', 'ips': ${ips}, 'backend': ${backend}, 'source': {'dev': host_iface}, 'alias': ${alias}, 'type_name': 'user', 'portForwards': ${portForwards}}
