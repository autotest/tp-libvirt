- guest_os_booting.smbios_mode:
    type = smbios_mode
    start_vm = no
    no s390-virtio
    variants:
        - positive_test:
            variants smbios_mode:
                - emulate:
                    os_dict = {'smbios_mode': 'emulate'}
                    expected_system_info = {'Manufacturer': 'Red Hat', 'Product Name': 'KVM', 'UUID': '%s', 'Family': 'Red Hat Enterprise Linux'}
                - host:
                    os_dict = {'smbios_mode': 'host'}
                    expected_system_info = {'Manufacturer': '%s', 'Product Name': '%s', 'SKU Number': '%s', 'Family': '%s'}
                - sysinfo:
                    with_sysinfo = "yes"
                    os_dict = {'smbios_mode': 'sysinfo'}
                    sysinfo_type = {'type': 'smbios'}
                    sysinfo_bios = {'bios_entry': [{'entry': 'LENOVO', 'entry_name': 'vendor'}, {'entry': '6FET82WW (3.12 )', 'entry_name': 'version'}, {'entry': '02/08/2012', 'entry_name': 'date'}]}
                    sysinfo_system = {'system_entry': [{'entry': 'Fedora', 'entry_name': 'manufacturer'}, {'entry': 'Virt-Manager', 'entry_name': 'product'}, {'entry': '0.8.2-3.fc14', 'entry_name': 'version'}, {'entry': '32,dfcb37-5af1-552b-357c-be8c3aa38310', 'entry_name': 'serial'}, {'entry': '%s', 'entry_name': 'uuid'}, {'entry': '1234567890', 'entry_name': 'sku'}, {'entry': 'Red Hat', 'entry_name': 'family'}]}
                    sysinfo_baseBoard = {'baseBoard_entry': [{'entry': 'SUN', 'entry_name': 'manufacturer'}, {'entry': '20BE0061MC', 'entry_name': 'product'}, {'entry': '0B98401 Pro', 'entry_name': 'version'}, {'entry': 'W1KS427111E', 'entry_name': 'serial'}, {'entry': 'abcde', 'entry_name': 'asset'}, {'entry': 'edcba', 'entry_name': 'location'}]}
                    sysinfo_chassis = {'chassis_entry': [{'entry': 'Dell Inc.', 'entry_name': 'manufacturer'}, {'entry': '2.12', 'entry_name': 'version'}, {'entry': '65X0XF2', 'entry_name': 'serial'}, {'entry': '40000101', 'entry_name': 'asset'}, {'entry': 'Type3Sku1', 'entry_name': 'sku'}]}
                    sysinfo_oemStrings = {'oemStrings_entry': [{'entry': 'myappname:some arbitrary data'}, {'entry': 'otherappname:more arbitrary data'}]}
        - negative_test:
            variants:
                - invalid_mode:
                    os_dict = {'smbios_mode': 'abc'}
                    error_msg = "unknown smbios mode 'abc'"
                - without_sysinfo_snippet:
                    os_dict = {'smbios_mode': 'sysinfo'}
                    error_msg = "Domain .* sysinfo are not available"
                - with_mismatch_uuid:
                    with_sysinfo = "yes"
                    os_dict = {'smbios_mode': 'sysinfo'}
                    sysinfo_type = {'type': 'smbios'}
                    sysinfo_system = {'system_entry': [{'entry': '11111111-1111-1111-1111-111111111111', 'entry_name': 'uuid'}]}
                    error_msg = "UUID mismatch between <uuid> and <sysinfo>"
