- virtual_disks.ceph:
    type = virtual_disks_ceph
    take_regular_screendumps = "no"
    start_vm = "no"
    disk_source_protocol = "rbd"
    disk_source_pool= "autotest"
    disk_source_host = "EXAMPLE_HOSTS"
    disk_source_port = "EXAMPLE_PORTS"
    disk_source_name = "EXAMPLE_SOURCE_NAME"
    disk_format = "raw"
    mon_host = "EXAMPLE_MON_HOST"
    disk_target = "vda"
    disk_target_bus = "virtio"
    disk_type = "network"
    driver_name = "qemu"
    driver_type = "raw"
    driver_cache = "none"
    test_vm_parts = "yes"
    image_convert = "no"
    variants:
        - network_type:
            pre_vm_state = "shut off"
            convert_image = "yes"
            test_qemu_cmd = "yes"
            test_vm_parts = "no"
            variants:
                - default:
                - conf_file:
                    disk_source_config = "/etc/ceph.conf"
                - iothread:
                    dom_iothreads = 4
                    driver_iothread = 4
                    start_error_msg = "unsupported configuration: IOThreads not supported for this QEMU"
        - domain_operation:
            pre_vm_state = "shut off"
            convert_image = "yes"
            test_qemu_cmd = "yes"
            test_vm_parts = "no"
            variants:
                - save_restore:
                    test_save_restore = "yes"
                - snapshot:
                    test_snapshot = "yes"
                    variants:
                        - disk_mem:
                            error_msg = "Operation not supported: live disk snapshot not supported with this QEMU binary"
                            snapshot_option = "disk-mem"
                        - disk_only:
                            error_msg = "Operation not supported: live disk snapshot not supported with this QEMU binary"
                            snapshot_option = "disk-only"
                        - internal:
                            error_msg = "internal snapshot for disk .* unsupported"
                - blockcopy:
                    pre_vm_state = "transient"
                    blockjob_timeout = 1200
                    test_blockcopy = "yes"
                    error_msg = "unsupported configuration: block copy is not supported with this QEMU binary"
        - disk_attach:
            pre_vm_state = "running"
            disk_target = "vdb"
            disk_source_name = "EXAMPLE_ATTACH_NAME"
            convert_image = "no"
            variants:
                - attach_device:
                    attach_device = "yes"
                - attach_disk:
                    attach_disk = "yes"
                - disk_shareable:
                    attach_device = "yes"
                    shareable = "yes"
                    additional_guest = "yes"
                - attach_with_snapshot:
                    create_snapshot = "yes"
                    disk_snap_name = "s1"
        - disk_pool:
            pre_vm_state = "shut off"
            test_vm_parts = "no"
            pool_name = "rbd_pool"
            pool_type = "rbd"
            vol_name = "rbd_vol.img"
            vol_alloc = "0"
            vol_cap_unit = "G"
            vol_cap = "1"
            create_volume = "yes"
            disk_target = "vdb"
            disk_device = "disk"
            source_pool = "rbd_pool"
            source_volume = "rbd_vol.img"
            attach_device = "yes"
            attach_option = "--config"
            start_error_msg = "unsupported configuration: using 'rbd' pools for backing 'volume' disks isn't yet supported"
            attach_error_msg = "unsupported configuration: using 'rbd' pools for backing 'volume' disks isn't yet supported"
            unsupported_msg = "this function is not supported by the connection driver: storage pool does( not)?(n't)? support volume"
            variants:
                - create_as:
                - create_xml:
                    create_by_xml = "yes" 
    variants:
        - with_auth:
            client_name = "EXAMPLE_CLIENT_NAME"
            client_key = "EXAMPLE_CLIENT_KEY"
            auth_key = "EXAMPLE_AUTH_KEY" 
            auth_type = "ceph"
            secret_type = "ceph"
            secret_usage = "EXAMPLE_SECRET_USAGE"
            auth_user = "EXAMPLE_AUTH_USER"
        - without_auth:
