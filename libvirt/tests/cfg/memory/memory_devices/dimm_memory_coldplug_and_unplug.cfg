- memory.devices.dimm.coldplug_and_unplug:
    no s390-virtio
    type = dimm_memory_coldplug_and_unplug
    start_vm = no
    mem_value = 4194304
    current_mem = 4194304
    init_size = 524288
    init_size_in_kb = ${init_size}
    init_unit = "KiB"
    plug_unit = "KiB"
    with_plug_dimm = yes
    with_unplug_dimm = no
    init_node = 0
    plug_node = 1
    init_source_dict = {}
    init_address_dict = {}
    plug_source_dict = {}
    plug_address_dict = {}
    init_source_xpath = []
    plug_source_xpath = []
    init_address_xpath = []
    plug_address_xpath = []
    numa_mem = 2097152
    max_mem = 6291456
    max_mem_slots = 16
    max_dict = '"max_mem_rt": ${max_mem}, "max_mem_rt_slots": ${max_mem_slots}, "max_mem_rt_unit": "KiB"'
    numa_dict = "'vcpu': 4,'cpu':{'numa_cell': [{'id': '0', 'cpus': '0-1', 'memory': '${numa_mem}'}, {'id': '1', 'cpus': '2-3', 'memory': '${numa_mem}'}]}"
    vm_attrs = {${numa_dict},${max_dict},'memory_unit':'KiB','memory':${mem_value},'current_mem':${current_mem},'current_mem_unit':'KiB'}
    plug_option = " --config"
    variants test_case:
        - with_target_address:
            with_unplug_dimm = yes
            init_slot = 0
            init_address_dict = "{'attrs':{'type':'dimm', 'slot':'${init_slot}'}}"
            init_address_xpath = [{'element_attrs':[".//address[@slot='${init_slot}']"]}]
            plug_size = 1048576
            plug_size_in_kb = ${plug_size}
            plug_slot = 1
            plug_address_dict = "{'attrs':{'type':'dimm', 'slot':'${plug_slot}'}}"
            plug_address_xpath = [{'element_attrs':[".//address[@slot='${plug_slot}']"]}]
        - with_target_source:
            with_unplug_dimm = yes
            init_size = 1024
            init_size_in_kb = 1048576
            init_unit = "MiB"
            init_node= 1
            init_source_dict = {'pagesize': %d, 'pagesize_unit':'KiB'}
            init_source_xpath = [{'element_attrs':[".//source/pagesize[@unit='KiB']"],'text':'%d'}]
            plug_size = 512
            plug_size_in_kb = 524288
            plug_unit = "MiB"
            plug_source_dict = {'pagesize': %d, 'pagesize_unit':'KiB'}
            plug_source_xpath = [{'element_attrs':[".//source/pagesize[@unit='KiB']"],'text':'%d'}]
        - unplug_nonexistence:
            with_unplug_dimm = yes
            with_plug_dimm = no
            unplug_node = 1
            unplug_dimm_dict = {'mem_model':'dimm','target': {'size':${init_size}, 'size_unit':'${init_unit}', 'node':${unplug_node}}}
            unplug_error = "matching memory device was not found"
        - exceed_max_memory:
            plug_size = 2
            plug_unit = "GiB"
            plug_node = 0
            plug_error = "would exceed domain's maxMemory config size"
        - duplicate_addr:
            init_slot = 0
            init_address = "0x100000000"
            init_address_dict = "{'attrs':{'type':'dimm', 'slot':'${init_slot}', 'base':'${init_address}'}}"
            plug_size = 524288
            plug_node = 0
            init_slot = 1
            plug_address_dict = "{'attrs':{'type':'dimm', 'slot':'${plug_slot}', 'base':'${init_address}'}}"
            plug_error = ["overlaps with other memory device", "already contains a device with the same address"]
        - duplicate_slot:
            init_slot = 0
            init_address_dict = "{'attrs':{'type':'dimm', 'slot':'${init_slot}'}}"
            plug_size = 524288
            plug_node = 0
            plug_address_dict = "{'attrs':{'type':'dimm', 'slot':'${init_slot}'}}"
            plug_error = "is already being used by another memory device"
    init_target_dict = "{'size':${init_size}, 'size_unit':'${init_unit}', 'node':${init_node}}"
    plug_target_dict = "{'size':${plug_size}, 'size_unit':'${plug_unit}', 'node':${plug_node}}"
    init_dimm_dict = {'mem_model':'dimm','source': ${init_source_dict},'target': ${init_target_dict}, 'address': ${init_address_dict}}
    plug_dimm_dict = {'mem_model':'dimm','source': ${plug_source_dict},'target': ${plug_target_dict}, 'address': ${plug_address_dict}}
    init_target_xpath = [{'element_attrs':[".//target/size[@unit='KiB']"],'text':'${init_size_in_kb}'}, {'element_attrs':[".//target/node"],'text':'${init_node}'}]
    plug_target_xpath = [{'element_attrs':[".//target/size[@unit='KiB']"],'text':'${plug_size_in_kb}'}, {'element_attrs':[".//target/node"],'text':'${plug_node}'}]
    init_xpath_list = [${init_source_xpath}, ${init_target_xpath}, ${init_address_xpath}]
    plug_xpath_list = [${plug_source_xpath}, ${plug_target_xpath}, ${plug_address_xpath}]

