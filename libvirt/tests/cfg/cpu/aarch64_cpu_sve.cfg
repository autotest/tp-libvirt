- aarch64_cpu_sve:
    type = aarch64_cpu_sve
    start_vm = "no"
    check_cmd_lscpu = "which lscpu"
    check_sve = "lscpu  | grep sve"
    check_sve_config = "grep CONFIG_ARM64_SVE=y /boot/config-%s"
    get_maxium_sve_length = "dmesg | grep 'SVE: maximum available vector length'"
    cpu_xml_policy = "require"
    cpu_xml_mode = "host-passthrough"
    only aarch64
    variants:
        - boot_test:
            variants:
                - enable_sve:
                    expect_sve = "yes"
                - disable_sve:
                    cpu_xml_policy = "disable"
                    expect_sve = "no"
        - vector_length_test:
            variants:
                - valid_length:
                    expect_sve = "yes"
                    variants:
                        - single_vector:
                            variants:
                                - sve128:
                                    vector_length = "sve128"
                                - sve256:
                                    vector_length = "sve256"
                                - sve512:
                                    vector_length = "sve512"
                        - mutiple_vector:
                            vector_lenth_list = '[{"sve128":"require"}, {"sve256":"require"}, {"sve384":"disable"}, {"sve512":"require"}]'
                - invalid_length:
                    only negative_test
                    expect_sve = "no"
                    vector_length = "sve1234"
                    expect_msg = "unsupported configuration: unknown CPU feature: sve1234"
                - conflict_length:
                    only negative_test
                    vector_lenth_list = '[{"sve":"disable"}, {"sve128":"require"}]'
                    define_error = "yes"
                    expect_msg = "SVE disabled, but SVE vector lengths provided"
    variants:
        - positive_test:
            status_error = "no"
        - negative_test:
            only invalid_length, conflict_length
            status_error = "yes"
