- svirt_start_destroy:
    type = svirt_start_destroy
    start_vm = no
    kill_vm = yes
    kill_vm_gracefully = yes
    kill_vm_on_error = yes
    # Label for VM.
    svirt_start_destroy_vm_sec_label = "system_u:system_r:svirt_t:s0:c87,c520"
    svirt_start_destroy_host_selinux = "enforcing"
    variants:
        - with_qemu_conf:
            variants:
                - security_driver_none:
                    security_driver = 'none'
                - unconfined:
                    security_default_confined = 0
                - required_confined:
                    security_require_confined = 1
        - without_qemu_conf:
    variants:
        - no_model:
            no_sec_model = 'yes'
        - multi_model:
            svirt_start_destroy_vm_sec_model = "selinux,dac"
        - default_model:
    variants:
        - st_dynamic:
            svirt_start_destroy_vm_sec_type = "dynamic"
        - st_static:
            no no_model
            svirt_start_destroy_vm_sec_type = "static"
        - st_none:
            no no_model
            svirt_start_destroy_vm_sec_type = "none"
    variants:
        - relabel_no:
            svirt_start_destroy_vm_sec_relabel = no
        - relabel_yes:
            no st_none, multi_model
            svirt_start_destroy_vm_sec_relabel = yes
    variants:
        - d_virt_content:
            no no_model, st_none
            svirt_start_destroy_disk_label = "system_u:object_r:virt_content_t:s0"
        - d_svirt_img_s0:
            svirt_start_destroy_disk_label = "system_u:object_r:svirt_image_t:s0"
            variants:
                - no_baselabel:
                - with_baselabel:
                    only default_model..st_dynamic
                    variants:
                        - legit:
                            svirt_start_destroy_vm_sec_baselabel = "system_u:system_r:svirt_t:s0"
                        - mess_MCS:
                            svirt_start_destroy_vm_sec_baselabel = "system_u:system_r:svirt_t:xxxxxx"
                        - mess_t:
                            svirt_start_destroy_vm_sec_baselabel = "system_u:system_r:xxxxxx:s0"
                        - mess_u_r:
                            svirt_start_destroy_vm_sec_baselabel = "xxxxxx:xxxxxx:svirt_t:s0"
                        - invalid_str:
                            svirt_start_destroy_vm_sec_baselabel = "xxxxxx"
        - d_svirt_img_MCS:
            no no_model, st_none
            svirt_start_destroy_disk_label = "system_u:object_r:svirt_image_t:s0:c87,c520"
    variants:
        - off_destroy:
            svirt_start_destroy_vm_poweroff = "destroy"
            d_svirt_img_s0.no_baselabel.relabel_yes.st_dynamic.default_model.without_qemu_conf:
                xattr_check = "yes"
        - off_shutdown:
            no no_model, st_none, with_qemu_conf, with_baselabel
            svirt_start_destroy_vm_poweroff = "shutdown"
    variants:
        - positive_test:
            status_error = no
            no default_model..st_dynamic..relabel_no, multi_model..st_dynamic..relabel_no, multi_model..st_static..relabel_no, relabel_no..st_dynamic..no_model
            no relabel_no..d_virt_content, security_driver_none..default_model, security_driver_none..multi_model..st_none, unconfined..relabel_yes, st_dynamic..multi_model..unconfined, st_static..multi_model..unconfined, required_confined, mess_t, invalid_str
            aarch64:
                no multi_model.with_qemu_conf.unconfined, multi_model.without_qemu_conf
        - negative_test:
            # only when seclabel of VM is not relabeled and
            # img is labelled with "system_u:object_r:virt_content_t:s0",
            # VM will not be able to access image.
            status_error = yes
            no relabel_no..st_dynamic, legit, mess_MCS, mess_u_r
            no off_shutdown..d_virt_content, relabel_yes..st_static..unconfined, relabel_yes..st_dynamic..unconfined, relabel_yes..st_static..without_qemu_conf, d_virt_content..required_confined
            no d_virt_content.relabel_yes.st_dynamic.default_model.without_qemu_conf, with_baselabel.mess_t.relabel_yes.st_dynamic.default_model.with_qemu_conf.security_driver_none, with_baselabel.invalid_str.relabel_yes.st_dynamic.default_model.with_qemu_conf.security_driver_none
            only mess_t..without_qemu_conf, invalid_str..without_qemu_conf, default_model..d_virt_content, default_model..security_driver_none, security_driver_none..multi_model..st_none, st_none..required_confined
