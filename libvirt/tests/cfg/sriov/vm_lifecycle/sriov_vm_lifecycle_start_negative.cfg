- sriov.vm_lifecycle.start.negative:
    type = sriov_vm_lifecycle_start_negative
    start_vm = "no"
    status_error = "yes"
    only x86_64,aarch64
    variants dev_type:
        - hostdev_interface:
            variants test_scenario:
                - vlan_trunk:
                    iface_dict = {'managed': 'yes', 'type_name': 'hostdev', 'hostdev_address': {'type_name': 'pci', 'attrs': vf_pci_addr}, 'vlan': {'tags': [{'id': '42'}, {'id': '47'}], 'trunk': 'yes'}}
                    err_msg = "vlan trunking is not supported"
                - inactive_pf:
                    iface_dict = {'managed': 'yes', 'type_name': 'hostdev', 'hostdev_address': {'type_name': 'pci', 'attrs': vf_pci_addr}}
                    err_msg = "PF is not online"
                - inactive_network:
                    iface_dict = {'mac_address': mac_addr, 'type_name': 'network', 'source': {'network': 'hostdev_net'}}
                    network_dict = {'forward': {'mode': 'hostdev'}, 'name': 'hostdev_net', 'vf_list': [{'type_name': 'pci', 'attrs': vf_pci_addr}]}
                    err_msg = "network.*is not active"
                - pf_address:
                    iface_dict = {'managed': 'yes', 'type_name': 'hostdev', 'hostdev_address': {'type_name': 'pci', 'attrs': pf_pci_addr}}
                    err_msg = "supported on SR-IOV Virtual Functions only"
                - unsupported_virtualport:
                    iface_dict = {'managed': 'yes', 'type_name': 'hostdev', 'hostdev_address': {'type_name': 'pci', 'attrs': vf_pci_addr}, 'virtualport': {'parameters': {'profileid': 'finance'}, 'type': '802.1Qbh'}}
                    err_msg = "PortProfileRequest"
                - unassigned_address:
                    iface_dict = {'managed': 'yes', 'type_name': 'hostdev', 'hostdev_address': {'attrs': vf_pci_addr}, 'address': {'attrs':{'type': 'unassigned'}}}
                    err_msg = "is supported only for hostdev"
                    define_err = "yes"
                - iommu_without_caching:
                    no aarch64
                    iommu_dict = {'driver': {'intremap': 'on'}, 'model': 'intel'}
                    iface_dict = {'managed': 'yes', 'type_name': 'hostdev', 'hostdev_address': {'type_name': 'pci', 'attrs': vf_pci_addr}}
                    err_msg = "iommu to enable"
        - hostdev_device:
            variants test_scenario:
                - iommu_without_caching:
                    no aarch64
                    iommu_dict = {'driver': {'intremap': 'on'}, 'model': 'intel'}
                    hostdev_dict = {'mode': 'subsystem', 'type': 'pci', 'source': {'untyped_address': vf_pci_addr}, 'managed': 'yes'}
                    err_msg = "iommu to enable"
