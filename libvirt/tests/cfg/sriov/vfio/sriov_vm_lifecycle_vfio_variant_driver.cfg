- sriov.vm_lifecyle.vfio_variant_driver:
    type = sriov_vm_lifecycle_vfio_variant_driver
    start_vm = "no"

    only x86_64, aarch64
    variants:
        - managed_yes:
            managed = "yes"
            variants:
                - @default:
                    func_supported_since_libvirt_ver = (10, 0, 0)
                - mlx5_vfio:
                    driver_dict = {'driver': {'driver_attr': {'name': 'vfio', 'model': 'mlx5_vfio_pci'}}}
                    func_supported_since_libvirt_ver = (10, 0, 0)
        - managed_no:
            managed = "no"
    variants dev_type:
        - hostdev_interface:
            iface_dict = {'type_name': 'hostdev', 'hostdev_address': {'type_name': 'pci', 'attrs': vf_pci_addr}, 'mac_address': mac_addr, 'managed': '${managed}'}
        - hostdev_device:
            hostdev_dict = {'mode': 'subsystem', 'type': 'pci', 'source': {'untyped_address': vf_pci_addr}, 'managed': '${managed}'}
    variants:
        - single_iface:
            iface_number = 1
        - multiple_ifaces:
            iface_number = 4
    variants:
        - start_vm:
            variants:
                - with_iommu:
                    err_msg = "not supported with vIOMMU enabled"
                    variants:
                        - virtio:
                            only q35, aarch64
                            iommu_dict = {'model': 'virtio'}
                        - intel:
                            only q35
                            start_vm = "yes"
                            enable_guest_iommu = "yes"
                            iommu_dict = {'model': 'intel', 'driver': {'intremap': 'on', 'caching_mode': 'on'}}
                - without_iommu:
        - hotplug:
            hotplug = "yes"
