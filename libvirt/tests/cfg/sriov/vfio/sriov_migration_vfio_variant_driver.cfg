- sriov.migration.vfio_variant_driver:
    type = sriov_migration_vfio_variant_driver
    # Migrating non-started VM causes undefined behavior
    start_vm = yes
    # Console output can only be monitored via virsh console output
    only_pty = True
    take_regular_screendumps = no
    # Options to pass to virsh migrate command before <domain> <desturi>
    virsh_migrate_options = ""
    # Extra options to pass after <domain> <desturi>
    virsh_migrate_extra = ""
    # SSH connection time out
    ssh_timeout = 60
    migration_setup = "yes"
    storage_type = 'nfs'
    setup_local_nfs = 'yes'
    disk_type = "file"
    disk_source_protocol = "netfs"
    mnt_path_name = ${nfs_mount_dir}
    image_convert = 'no'
    virsh_migrate_dest_state = "running"
    virsh_migrate_src_state = "shut off"
    virsh_migrate_options = "--p2p --live --verbose  --persistent"
    virsh_migrate_desturi = "qemu+ssh://${migrate_dest_host}/system"
    virsh_migrate_connect_uri = "qemu:///system"
    check_cont_ping = "no"
    migrate_vm_back = "yes"

    only x86_64, aarch64
    variants:
        - managed_yes:
            managed = "yes"
            variants:
                - @default:
                    func_supported_since_libvirt_ver = (10, 0, 0)
                - mlx5_vfio:
                    driver_dict = {'driver': {'driver_attr': {'name': 'vfio', 'model': 'mlx5_vfio_pci'}}}
                    func_supported_since_libvirt_ver = (10, 0, 0)
        - managed_no:
            managed = "no"
    variants dev_type:
        - hostdev_interface:
            iface_dict = {'type_name': 'hostdev', 'hostdev_address': {'type_name': 'pci', 'attrs': vf_pci_addr}, 'mac_address': mac_addr, 'managed': '${managed}'}
        - hostdev_device:
            hostdev_dict = {'mode': 'subsystem', 'type': 'pci', 'source': {'untyped_address': vf_pci_addr}, 'managed': '${managed}'}
    variants:
        - single_iface:
            iface_number = 1
        - multiple_ifaces:
            iface_number = 4
    variants:
        - with_postcopy:
            only single_iface..mlx5_vfio
            status_error = "yes"
            postcopy_options = "--postcopy --timeout 10 --timeout-postcopy"
            err_msg = "VFIO migration is not supported with postcopy migration"
        - without_postcopy:
            postcopy_options = ""
            variants:
                - with_iommu:
                    only single_iface..mlx5_vfio
                    status_error = "yes"
                    err_msg = "not supported with vIOMMU enabled"
                    variants:
                        - virtio:
                            only q35, aarch64
                            iommu_dict = {'model': 'virtio'}
                        - intel:
                            only q35
                            start_vm = "yes"
                            enable_guest_iommu = "yes"
                            iommu_dict = {'model': 'intel', 'driver': {'intremap': 'on', 'caching_mode': 'on'}}
                - without_iommu:
                    migrate_vm_back = "yes"
    variants:
        - p2p_live:
            virsh_migrate_options = "--live --p2p --persistent --verbose"
        - non_p2p_live:
            virsh_migrate_options = "--live --verbose"
