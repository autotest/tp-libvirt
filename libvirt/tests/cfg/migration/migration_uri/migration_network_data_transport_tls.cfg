- migration.migration_uri.network_data_transport.tls:
    type = migration_network_data_transport_tls
    migration_setup = 'yes'
    storage_type = 'nfs'
    setup_local_nfs = 'yes'
    disk_type = "file"
    disk_source_protocol = "netfs"
    mnt_path_name = ${nfs_mount_dir}
    # Console output can only be monitored via virsh console output
    only_pty = True
    take_regular_screendumps = no
    # Extra options to pass after <domain> <desturi>
    virsh_migrate_extra = ''
    # SSH connection time out
    ssh_timeout = 60
    # Local URI
    virsh_migrate_connect_uri = 'qemu:///system'
    virsh_migrate_dest_state = "running"
    virsh_migrate_src_state = "shut off"
    image_convert = 'no'
    server_ip = "${migrate_dest_host}"
    server_user = "root"
    server_pwd = "${migrate_dest_pwd}"
    status_error = "no"
    check_network_accessibility_after_mig = "yes"
    migrate_desturi_port = "16509"
    migrate_desturi_type = "tcp"
    virsh_migrate_desturi = "qemu+tcp://${migrate_dest_host}/system"
    transport_type = "tls"
    migrate_speed = "10"
    stress_package = "stress"
    stress_args = "--cpu 8 --io 4 --vm 2 --vm-bytes 128M --timeout 20s"
    variants:
        - p2p:
            virsh_migrate_options = '--live --p2p --verbose'
        - non_p2p:
            virsh_migrate_options = '--live --verbose'
    variants:
        - with_precopy:
        - with_postcopy:
            postcopy_options = '--postcopy --timeout 10 --timeout-postcopy'
    variants test_case:
        - default:
            virsh_migrate_extra = "--tls"
            custom_pki_path = "/etc/pki/qemu"
            qemu_tls = "yes"
            server_cn = "ENTER.YOUR.EXAMPLE.SERVER_CN"
            client_cn = "ENTER.YOUR.EXAMPLE.CLIENT_CN"
            set_remote_libvirtd_log = "yes"
            libvirtd_file_type = "virtqemud"
            remote_file_type = "virtqemud"
            libvirtd_debug_level = "1"
            libvirtd_debug_filters = "1:*"
            check_str_local_log = '['"dir":"/etc/pki/qemu","endpoint":"client","verify-peer":true']'
            check_str_remote_log = '['"dir":"/etc/pki/qemu","endpoint":"server","verify-peer":true']'
            action_during_mig = '[{"func": "libvirt_network.check_established", "after_event": "iteration: \'1\'", "func_param": "params"}, {"func": "set_migrate_speed_to_high", "func_param": "params"}]'
        - tls_destination:
            no with_postcopy
            custom_pki_path = "/etc/pki/qemu"
            qemu_tls = "yes"
            server_cn = "test.com.cn"
            client_cn = "ENTER.YOUR.EXAMPLE.CLIENT_CN"
            virsh_migrate_extra = "--tls"
            err_msg = "error: internal error: qemu unexpectedly closed the monitor|Domain not found|Certificate does not match the hostname|QEMU unexpectedly closed the monitor"
            status_error = "yes"
            migrate_again = "yes"
            migrate_speed = "8796093022207"
            variants:
                - correct_value:
                    virsh_migrate_extra_mig_again = "--tls --tls-destination ${server_cn}"
                - empty_value:
                    virsh_migrate_extra_mig_again = "--tls --tls-destination ''"
                    migrate_again_status_error = "yes"
                    err_msg_again = "error: Failed to get option 'tls-destination': Option argument is empty"
                - wrong_value:
                    migrate_again_status_error = "yes"
                    virsh_migrate_extra_mig_again = "--tls --tls-destination fake${server_cn}"
                    err_msg_again = "error: internal error: qemu unexpectedly closed the monitor|Domain not found|Certificate does not match the hostname|QEMU unexpectedly closed the monitor"
