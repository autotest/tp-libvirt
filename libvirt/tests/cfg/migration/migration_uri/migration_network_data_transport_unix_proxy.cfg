- migration.migration_uri.network_data_transport.unix_proxy:
    type = migration_network_data_transport
    migration_setup = 'yes'
    storage_type = 'nfs'
    setup_local_nfs = 'yes'
    disk_type = "file"
    disk_source_protocol = "netfs"
    mnt_path_name = ${nfs_mount_dir}
    # Console output can only be monitored via virsh console output
    only_pty = True
    take_regular_screendumps = no
    # SSH connection time out
    ssh_timeout = 60
    # Local URI
    virsh_migrate_connect_uri = 'qemu:///system'
    virsh_migrate_dest_state = "running"
    virsh_migrate_src_state = "shut off"
    image_convert = 'no'
    server_ip = "${migrate_dest_host}"
    server_user = "root"
    server_pwd = "${migrate_dest_pwd}"
    status_error = "no"
    check_network_accessibility_after_mig = "yes"
    migrate_speed = "10"
    stress_package = "stress"
    stress_args = "--cpu 8 --io 4 --vm 2 --vm-bytes 128M --timeout 20s"
    variants:
        - p2p:
            virsh_migrate_options = '--live --p2p --verbose'
        - non_p2p:
            virsh_migrate_options = '--live --verbose'
    variants:
        - with_precopy:
        - with_postcopy:
            postcopy_options = '--postcopy --timeout 10 --timeout-postcopy'
    variants test_case:
        - default:
            func_supported_since_libvirt_ver = (6, 6, 0)
            transport_type = "unix_proxy"
            desturi_socket_path = "/tmp/desturi-socket"
            migrateuri_socket_path = "/var/lib/libvirt/qemu/migrateuri-socket"
            disks_uri_socket_path = "/var/lib/libvirt/qemu/disks-uri-socket"
            migrate_desturi_type = "unix_proxy"
            virsh_migrate_desturi = "qemu+unix:///system?socket=${desturi_socket_path}"
            virsh_migrate_migrateuri = "unix://${migrateuri_socket_path}"
            virsh_migrate_disks_uri = "unix://${disks_uri_socket_path}"
            virsh_migrate_extra = "--migrateuri ${virsh_migrate_migrateuri}"
            check_socket_num = "yes"
            expected_socket_num = "2"
            check_port_or_network_conn_num = "no"
            action_during_mig = '[{"func": "libvirt_network.check_established", "after_event": "iteration: \'1\'", "func_param": 'params'}, {"func": "set_migrate_speed_to_high", "func_param": "params"}]'
