- migration_with_vtpm.migration_with_shared_tpm:
    type = migration_with_shared_tpm
    migration_setup = 'yes'
    # Console output can only be monitored via virsh console output
    only_pty = True
    take_regular_screendumps = no
    # Extra options to pass after <domain> <desturi>
    virsh_migrate_extra = ""
    # SSH connection time out
    ssh_timeout = 60
    start_vm = "no"
    # Local URI
    virsh_migrate_connect_uri = "qemu:///system"
    server_ip = "${migrate_dest_host}"
    server_user = "root"
    server_pwd = "${migrate_dest_pwd}"
    client_ip = "${migrate_source_host}"
    client_user = "root"
    client_pwd = "${migrate_source_pwd}"
    status_error = "no"
    transport_type = "ssh"
    virsh_migrate_desturi = "qemu+ssh://${migrate_dest_host}/system"
    tpm_cmd = "tpm2_getrandom --hex 16"
    auth_sec_dict = {"sec_ephemeral": "no", "sec_private": "yes", "sec_desc": "sample vTPM secret", "sec_usage": "vtpm", "sec_name": "VTPM_example"}
    secret_value = "sec value test"
    check_str_remote_log = "migration release-lock-outgoing,incoming"
    set_remote_libvirtd_log = "yes"
    libvirtd_file_type = "virtqemud"
    libvirtd_debug_level = "1"
    libvirtd_debug_filters = "1:*"
    libvirtd_debug_file = '/var/log/libvirt/virtqemud.log'
    func_supported_since_libvirt_ver = (9, 0, 0)
    tpm_model = "tpm-crb"
    enable_backward_migration = 'yes'
    aarch64:
        tpm_model = "tpm-tis"

    variants:
        - persistent_and_p2p:
            virsh_migrate_options = "--live --p2p --verbose --undefinesource --persistent"
            tpm_dict = {'tpm_model': '${tpm_model}', 'backend': {'backend_type': 'emulator', 'backend_version': '2.0', 'encryption_secret': '0051c505-1ad0-4d77-9b3e-360c8f5e3b86', 'active_pcr_banks': {'sha256': 'True'}}}
        - persistent_and_non_p2p:
            virsh_migrate_options = "--live --verbose"
            tpm_dict = {'tpm_model': '${tpm_model}', 'backend': {'backend_type': 'emulator', 'backend_version': '2.0', 'encryption_secret': '0051c505-1ad0-4d77-9b3e-360c8f5e3b86', 'active_pcr_banks': {'sha256': 'True'}}}
        - transient_and_non_p2p:
            virsh_migrate_options = "--live --verbose"
            tpm_dict = {'tpm_model': '${tpm_model}', 'backend': {'backend_type': 'emulator', 'backend_version': '2.0', 'persistent_state': 'yes', 'encryption_secret': '0051c505-1ad0-4d77-9b3e-360c8f5e3b86', 'active_pcr_banks': {'sha256': 'True'}}}
            transient_vm = "yes"
    variants shared_storage_type:
        - nfs:
            image_convert = "no"
            storage_type = 'nfs'
            setup_local_nfs = 'yes'
            disk_type = "file"
            disk_source_protocol = "netfs"
            nfs_mount_dir = "/var/lib/libvirt/swtpm"
            mnt_path_name = ${nfs_mount_dir}
            tpm_security_contexts = "nfs_t"
            tpm_security_contexts_restore = "${tpm_security_contexts}"
        - ceph:
            disk_type = "network"
            nfs_mount_dir =
            mnt_path_name =
            setup_local_nfs = 'no'
            disk_source_protocol = "rbd"
            disk_source_port = "6789"
            disk_source_name = "migration-with-vtpm-pool"
            tpm_security_contexts = "svirt_image_t"
            tpm_security_contexts_restore = "virt_var_lib_t"
            disk_dict = {"device": "disk", "type_name": "network", "driver": {"name": "qemu", "type": "raw", "cache": "none"}, "target": {"dev": "vda", "bus": "virtio"}}
            seclabel_dict = {"type": "static", "model": "selinux", "relabel": "yes", "label": "system_u:system_r:svirt_t:s0:c392,c662"}
            cleanup_disks = "yes"
            image_convert = "yes"
            variants:
                - non_auth:
                    mon_host = "EXAMPLE_MON_HOST"
                    disk_source_host = "EXAMPLE_HOSTS"
                    host_dict = {"name": "${disk_source_host}", "port": "${disk_source_port}"}
