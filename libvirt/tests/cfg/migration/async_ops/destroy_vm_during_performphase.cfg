- migration.async_ops.destroy_vm_during_performphase:
    type = destroy_vm_during_performphase
    migration_setup = 'yes'
    storage_type = 'nfs'
    setup_local_nfs = 'yes'
    disk_type = "file"
    disk_source_protocol = "netfs"
    mnt_path_name = ${nfs_mount_dir}
    # Console output can only be monitored via virsh console output
    only_pty = True
    take_regular_screendumps = no
    # Extra options to pass after <domain> <desturi>
    virsh_migrate_extra = ''
    # SSH connection time out
    ssh_timeout = 60
    # Local URI
    virsh_migrate_connect_uri = 'qemu:///system'
    virsh_migrate_dest_state = "running"
    virsh_migrate_src_state = "shut off"
    image_convert = 'no'
    server_ip = "${migrate_dest_host}"
    server_user = "root"
    server_pwd = "${migrate_dest_pwd}"
    check_network_accessibility_after_mig = "yes"
    migrate_desturi_port = "16509"
    migrate_desturi_type = "tcp"
    virsh_migrate_desturi = "qemu+tcp://${migrate_dest_host}/system"
    status_error = "yes"
    migrate_again = "yes"
    migrate_again_status_error = "no"
    variants:
        - p2p:
            virsh_migrate_options = '--live --p2p --verbose'
        - non_p2p:
            virsh_migrate_options = '--live --verbose'
    variants:
        - with_precopy:
    variants:
        - destroy_dst_vm_before_vm_paused:
            virsh_migrate_extra = "--bandwidth 1"
            expected_event_src = ["migration-iteration"]
            expected_event_target = ["lifecycle.*Stopped Destroyed"]
            expected_dest_state = "nonexist"
            expected_src_state = "running"
            action_during_mig = [{"func": "virsh.destroy", "after_event": "iteration: '1'", "func_param": {"name": "${main_vm}", "uri": "${virsh_migrate_desturi}"}, "need_sleep_time": "1"}]
            err_msg = "domain is not running|Unable to read from socket: Connection reset by peer|domain.* is not processing incoming migration"
            virsh_migrate_extra_mig_again = " "
        - destroy_dst_vm_after_vm_paused:
            migrate_speed = "10"
            action_during_mig = [{"func": "virsh.destroy", "after_event": "Suspended Migrated", "func_param": {"name": "${main_vm}", "uri": "${virsh_migrate_desturi}"}}]
            virsh_migrate_extra = "--timeout 2 --timeout-suspend"
            expected_event_src = ["lifecycle.*Suspended Migrated", "lifecycle.*Resumed Migrated"]
            expected_event_target = ["lifecycle.*Stopped Destroyed"]
            expected_dest_state = "nonexist"
            expected_src_state = "running"
            err_msg = "domain is no longer running|Unable to read from socket: Connection reset by peer|domain.* is not processing incoming migration"
        - destroy_src_vm:
            migrate_speed = "10"
            virsh_migrate_extra = "--timeout 2 --timeout-suspend"
            expected_event_src = ["lifecycle.*Stopped Destroyed"]
            expected_event_target = ["lifecycle.*Started Migrated", "lifecycle.*Stopped Failed"]
            expected_dest_state = "nonexist"
            expected_src_state = "shut off"
            action_during_mig = [{"func": "virsh.destroy", "after_event": "iteration: '1'", "func_param": {"name": "${main_vm}"}}]
            err_msg = "domain is not running|internal error: QEMU unexpectedly closed the monitor"
