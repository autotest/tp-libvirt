- virsh.sriov_migrate:
    type = sriov_migrate
    # Migrating non-started VM causes undefined behavior
    start_vm = yes
    # Console output can only be monitored via virsh console output
    only_pty = True
    take_regular_screendumps = no
    # Options to pass to virsh migrate command before <domain> <desturi>
    virsh_migrate_options = ""
    # Extra options to pass after <domain> <desturi>
    virsh_migrate_extra = ""
    # SSH connection time out
    ssh_timeout = 60
    migration_setup = "yes"
    storage_type = 'nfs'
    setup_local_nfs = 'yes'
    virsh_migrate_dest_state = running
    virsh_migrate_src_state = running
    virsh_migrate_options = "--p2p --live --verbose --bandwidth 10"
    # Local URI
    virsh_migrate_connect_uri = "qemu:///system"
    only x86_64

    variants:
        - with_postcopy:
            virsh_migrate_extra = "--postcopy"
        - without_postcopy:
            virsh_migrate_extra = ""
    variants:
        - net_failover:
            net_failover_test = "yes"
            iface_type = "network"
            bridge_name = "br0"
            vm_tmp_file = "/tmp/test.txt"
            cmd_during_mig =  "> ${vm_tmp_file} ;ping www.baidu.com > ${vm_tmp_file} 2>&1 &"
            variants:
                - normal_test:
                    without_postcopy:
                        migrate_vm_back = "yes"
                - cancel_migration:
                    only without_postcopy
                    status_error = 'yes'
                    cancel_migration = 'yes'
                    action_during_mig_params = "'%s' % params.get('migrate_main_vm')"
                    action_during_mig_params_exists = "yes"
            variants:
                - hostdev_iface:
                    enable_hostdev_iface = "yes"
                    func_supported_since_libvirt_ver = (6, 0, 0)
                    unsupported_err_msg = "This libvirt version doesn't support migration with net failover devices."
                - hostdev_device_with_teaming:
                    cmd_during_mig = ""
                    enable_hostdev_device = "yes"
                    func_supported_since_libvirt_ver = (7, 0, 0)
                    unsupported_err_msg = "This libvirt version doesn't support teaming element in plain hostdev element."
                    hostdev_device_teaming_dict = {'type': 'transient', 'persistent': 'ua-backup0'}
