- migration.migration_misc.vm_io_error:
    type = vm_io_error
    migration_setup = 'yes'
    storage_type = 'nfs'
    setup_local_nfs = 'yes'
    disk_type = "file"
    disk_source_protocol = "netfs"
    mnt_path_name = ${nfs_mount_dir}
    # Console output can only be monitored via virsh console output
    only_pty = True
    take_regular_screendumps = no
    # SSH connection time out
    ssh_timeout = 60
    # Local URI
    virsh_migrate_connect_uri = 'qemu:///system'
    virsh_migrate_dest_state = "running"
    virsh_migrate_src_state = "shut off"
    image_convert = 'no'
    server_ip = "${migrate_dest_host}"
    server_user = "root"
    server_pwd = "${migrate_dest_pwd}"
    client_ip = "${migrate_source_host}"
    client_user = "root"
    client_pwd = "${migrate_source_pwd}"
    status_error = "no"
    virsh_migrate_extra = "--undefinesource --persistent --bandwidth 20"
    migrate_desturi_port = "16509"
    migrate_desturi_type = "tcp"
    virsh_migrate_desturi = "qemu+tcp://${migrate_dest_host}/system"
    start_vm = "no"
    loop_disk = "/var/tmp/vm_io_error_loop_disk.img"
    loop_export_dir = "/var/tmp/vm_io_error_loop_export"
    loop_mnt_dir = "/var/tmp/vm_io_error_loop_mnt"
    second_disk = "${loop_mnt_dir}/vm_io_error_second_disk.qcow2"
    action_during_mig = '[{"func": "dd_vm_disk", "after_event": "iteration: '1'", "func_param": "params"}]'
    dev_name = "vdb"
    check_network_accessibility_after_mig = "no"
    simple_disk_check_after_mig = "no"
    variants:
        - p2p:
            virsh_migrate_options = '--live --p2p --verbose'
        - non_p2p:
            virsh_migrate_options = '--live --verbose'
    variants:
        - with_percopy:
    variants:
        - no_space:
    variants:
        - error_policy_stop_and_cache_mode_none:
            error_policy = "stop"
            cache_mode = "none"
            variants:
                - with_abort_on_error:
                    virsh_migrate_extra = "--undefinesource --persistent --bandwidth 20 --abort-on-error"
                    status_error = "yes"
                    err_msg = "job 'migration out' failed due to I/O error"
                    virsh_migrate_dest_state = "nonexist"
                    virsh_migrate_src_state = "paused"
                    expected_event_src = ["io-error", "lifecycle.*Suspended I/O Error"]
                    expected_event_target = ["lifecycle.*Started Migrated", "lifecycle.*Stopped Failed"]
                - without_abort_on_error:
                    virsh_migrate_src_state = "nonexist"
                    virsh_migrate_dest_state = "paused"
                    expected_event_src = ["migration-iteration", "io-error.*pause", "lifecycle.*Suspended I/O Error", "lifecycle.*Stopped Migrated", "job-completed"]
                    expected_event_target = ["lifecycle.*Started Migrated", "lifecycle.*Resumed Migrated", "io-error", "lifecycle.*Suspended I/O Error"]
        - error_policy_stop_and_cache_mode_writeback:
            error_policy = "stop"
            cache_mode = "writeback"
            status_error = "yes"
            virsh_migrate_dest_state = "nonexist"
            virsh_migrate_src_state = "paused"
            expected_event_src = ["io-error", "lifecycle.*Suspended I/O Error"]
            expected_event_target = ["lifecycle.*Started Migrated", "lifecycle.*Stopped Failed"]
            variants:
                - with_abort_on_error:
                    virsh_migrate_extra = "--undefinesource --persistent --bandwidth 20 --abort-on-error"
                    err_msg = "job 'migration out' failed due to I/O error"
                - without_abort_on_error:
                    err_msg = "Error in migration completion: No space left on device"
        - error_policy_report_and_cache_mode_none:
            error_policy = "report"
            cache_mode = "none"
            virsh_migrate_src_state = "nonexist"
            virsh_migrate_dest_state = "running"
            expected_event_src = ["migration-iteration", "io-error.*report", "lifecycle.*Suspended Migrated", "lifecycle.*Stopped Migrated", "job-completed"]
            expected_event_target = ["lifecycle.*Started Migrated", "lifecycle.*Resumed Migrated"]
            variants:
                - with_abort_on_error:
                    virsh_migrate_extra = "--undefinesource --persistent --bandwidth 20 --abort-on-error"
                - without_abort_on_error:
    disk_dict = {"type_name": "file", "driver": {"name": "qemu", "type": "qcow2", "cache": "${cache_mode}", "error_policy": "${error_policy}"}, "device": "disk", "target": {"dev": "${dev_name}", "bus": "virtio"}, "source": {"attrs": {"file": "${second_disk}"}}}
