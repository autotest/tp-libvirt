- virsh.migrate_event:
    type = migrate_event
    migration_setup = "yes"
    storage_type = 'nfs'
    status_error = "no"
    setup_local_nfs = 'yes'
    disk_type = "file"
    disk_source_protocol = "netfs"
    mnt_path_name = ${nfs_mount_dir}
    # Console output can only be monitored via virsh console output
    only_pty = True
    take_regular_screendumps = no
    # Extra options to pass after <domain> <desturi>
    virsh_migrate_extra = ""
    # SSH connection time out
    ssh_timeout = 60
    # Local URI
    virsh_migrate_connect_uri = "qemu:///system"
    image_convert = 'no'
    variants:
        - without_postcopy:
            postcopy_options = ""
    variants:
        - p2p_live:
            virsh_migrate_options = "--live --p2p --verbose"
    variants:
        - negative_test:
            status_error = 'yes'
            variants:
                - cancel_in_performphase:
                    err_msg = 'operation aborted: migration out job: canceled by client'
                    variants:
                        - after_src_paused:
                            virsh_migrate_extra = "--timeout 5 --timeout-suspend --bandwidth 5"
                            migrate_speed = 5
                            action_during_mig = '[{"func": "virsh.domjobabort", "after_event": "Suspended Migrated", "func_param": "'%s' % params.get('migrate_main_vm')"}]'
                            expected_event_src = ["event 'migration-iteration'", "event 'lifecycle' for domain.*: Suspended Migrated", "event 'lifecycle' for domain .*: Resumed Migrated"]
                            expected_event_target = ["event 'lifecycle' for domain.*Started Migrated", "event 'lifecycle' for domain.*: Stopped Failed"]
                        - before_src_paused:
                            migrate_speed = 5
                            action_during_mig = '[{"func": "virsh.domjobabort", "after_event": "migration-iteration", "before_event": "Suspended Migrated", "func_param": "'%s' % params.get('migrate_main_vm')"}]'
                            expected_event_target = ["event 'lifecycle' for domain.*Started Migrated", "event 'lifecycle' for domain.*: Stopped Failed"]
