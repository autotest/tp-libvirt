- migration.memory_copy_mode.postcopy:
    type = memory_copy_mode 
    migration_setup = 'yes'
    storage_type = 'nfs'
    setup_local_nfs = 'yes'
    disk_type = "file"
    disk_source_protocol = "netfs"
    mnt_path_name = ${nfs_mount_dir}
    # Console output can only be monitored via virsh console output
    only_pty = True
    take_regular_screendumps = no
    # Extra options to pass after <domain> <desturi>
    virsh_migrate_extra = ''
    # SSH connection time out
    ssh_timeout = 60
    # Local URI
    virsh_migrate_connect_uri = 'qemu:///system'
    virsh_migrate_dest_state = "running"
    virsh_migrate_src_state = "shut off"
    image_convert = 'no'
    server_ip = "${migrate_dest_host}"
    server_user = "root"
    server_pwd = "${migrate_dest_pwd}"
    status_error = "no"
    check_network_accessibility_after_mig = "yes"
    migrate_desturi_port = "16509"
    migrate_desturi_type = "tcp"
    virsh_migrate_desturi = "qemu+tcp://${migrate_dest_host}/system"
    stress_package = "stress"
    stress_args = "--cpu 8 --io 4 --vm 2 --vm-bytes 128M --timeout 20s"
    test_case = "postcopy"
    libvirtd_file_type = "virtqemud"
    libvirtd_debug_level = "1"
    libvirtd_debug_filters = "1:*"
    libvirtd_debug_file = '/var/log/libvirt/virtqemud.log'
    check_str_local_log = '['{"capability":"postcopy-preempt","state":true}']'
    expected_event_src = ["lifecycle.*Suspended Migrated", "lifecycle.*Suspended Post-copy", "lifecycle.*Stopped Migrated", "job-completed"]
    expected_event_target = ["event 'lifecycle'.*: Started Migrated", "event 'lifecycle'.*: Resumed Post-copy", "event 'lifecycle'.*: Resumed Migrated"]
    variants:
        - p2p:
            virsh_migrate_options = '--live --p2p --verbose'
        - non_p2p:
            virsh_migrate_options = '--live --verbose'
    variants:
        - default_postcopy:
            postcopy_options = '--postcopy'
            expected_event_src = ["lifecycle.*Suspended Migrated", "lifecycle.*Stopped Migrated", "job-completed"]
            expected_event_target = ["event 'lifecycle'.*: Started Migrated", "event 'lifecycle'.*: Resumed Migrated"]
        - migrate_postcopy:
            postcopy_options = '--postcopy'
            action_during_mig = '[{"func": "virsh.migrate_postcopy", "after_event": "iteration: '1'", "func_param": "'%s' % params.get('migrate_main_vm')"}]'
        - postcopy_after_precopy:
            postcopy_options = '--postcopy --postcopy-after-precopy'
        - timeout_postcopy:
            postcopy_options = '--postcopy --timeout 10 --timeout-postcopy'
        - timeout_with_short_value:
            postcopy_options = '--postcopy --timeout 2 --timeout-postcopy --postcopy-after-precopy'
            check_no_str_local_log = '["unable to execute QEMU command 'migrate-start-postcopy': Enable postcopy with migrate_set_capability before the start of migration"]'
