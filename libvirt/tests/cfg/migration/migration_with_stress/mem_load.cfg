- migration.migration_with_stress.mem_load:
    type = mem_load
    migration_setup = 'yes'
    storage_type = 'nfs'
    setup_local_nfs = 'yes'
    disk_type = "file"
    disk_source_protocol = "netfs"
    mnt_path_name = ${nfs_mount_dir}
    # Console output can only be monitored via virsh console output
    only_pty = True
    take_regular_screendumps = no
    # Extra options to pass after <domain> <desturi>
    virsh_migrate_extra = ''
    # SSH connection time out
    ssh_timeout = 60
    # Local URI
    virsh_migrate_connect_uri = 'qemu:///system'
    image_convert = 'no'
    server_ip = "${migrate_dest_host}"
    server_user = "root"
    server_pwd = "${migrate_dest_pwd}"
    status_error = "no"
    migrate_desturi_port = "16509"
    migrate_desturi_type = "tcp"
    virsh_migrate_desturi = "qemu+tcp://${migrate_dest_host}/system"
    start_vm = "yes"
    virsh_migrate_options = '--live --p2p --verbose --undefinesource --persistent --postcopy'
    stress_package = "stress"
    stress_args = "--vm 12 --vm-bytes 100M"
    variants:
        - cancel_migration:
              action_during_mig = '[{"func": "virsh.domjobabort", "after_event": "iteration: \'50\'", "func_param": "'%s' % params.get('migrate_main_vm')", "wait_for_after_event_timeout": "500"}]'
              virsh_migrate_dest_state = "nonexist"
              virsh_migrate_src_state = "running"
              check_disk_on_dest = "no"
              status_error = "yes"
              err_msg = "job 'migration out' canceled by client"
        - switch_to_postcopy:
              action_during_mig = '[{"func": "virsh.migrate_postcopy", "after_event": "iteration: \'50\'", "func_param": "'%s' % params.get('migrate_main_vm')", "wait_for_after_event_timeout": "500"}]'
              virsh_migrate_dest_state = "running"
              virsh_migrate_src_state = "nonexist"
