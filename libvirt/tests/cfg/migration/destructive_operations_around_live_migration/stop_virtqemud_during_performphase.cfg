- migration.destructive_operations_around_live_migration.stop_virtqemud_during_performphase:
    type = stop_virtqemud_during_performphase
    migration_setup = 'yes'
    storage_type = 'nfs'
    setup_local_nfs = 'yes'
    disk_type = "file"
    disk_source_protocol = "netfs"
    mnt_path_name = ${nfs_mount_dir}
    # Console output can only be monitored via virsh console output
    only_pty = True
    take_regular_screendumps = no
    # Extra options to pass after <domain> <desturi>
    virsh_migrate_extra = ''
    # SSH connection time out
    ssh_timeout = 60
    # Local URI
    virsh_migrate_connect_uri = 'qemu:///system'
    virsh_migrate_dest_state = "running"
    virsh_migrate_src_state = "shut off"
    image_convert = 'no'
    server_ip = "${migrate_dest_host}"
    server_user = "root"
    server_pwd = "${migrate_dest_pwd}"
    check_network_accessibility_after_mig = "yes"
    migrate_desturi_port = "16509"
    migrate_desturi_type = "tcp"
    virsh_migrate_desturi = "qemu+tcp://${migrate_dest_host}/system"
    status_error = "yes"
    service_name = "virtqemud"
    migrate_again_status_error = "no"
    migrate_speed = "5"
    simple_disk_check_after_mig = "yes"
    service_operations = "stop"
    action_during_mig = '[{"func": "libvirt_service.control_service", "func_param": "params", "after_event": "migration-iteration"}]'
    expected_dest_state = "nonexist"
    expected_src_state = "running"
    variants:
        - p2p:
            virsh_migrate_options = '--live --p2p --verbose'
        - non_p2p:
            virsh_migrate_options = '--live --verbose'
    variants:
        - with_precopy:
    variants test_case:
        - stop_src_virtqemud:
            err_msg = "Disconnected from qemu:///system due to end of file"
        - stop_dst_virtqemud:
            service_on_dst = "yes"
            err_msg = "Unable to read from socket: Connection reset by peer"
