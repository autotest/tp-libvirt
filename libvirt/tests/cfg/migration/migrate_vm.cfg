- virsh.migrate_vm:
    type = migrate_vm
    take_regular_screendumps = no
    ssh_timeout = 60
    # please replace your configuration
    server_ip = "${migrate_dest_host}"
    server_user = "root"
    server_pwd = "${migrate_dest_pwd}"
    client_ip = "${migrate_source_host}"
    client_user = "root"
    client_pwd = "${migrate_source_pwd}"
    start_vm = "no"
    transport = "ssh"
    port = "22"
    client = "ssh"
    start_vm = "no"
    ssh_port = "${port}"
    virt_image_dir = /var/lib/libvirt/images
    # setup NFS test environment
    nfs_client_ip = "${server_ip}"
    nfs_server_ip = "${client_ip}"
    # in order to avoid selinux issue, it had better to mount
    # source directory to /tmp or /var/lib/libvirt/images
    nfs_mount_dir = "/var/lib/libvirt/migrate"
    nfs_mount_options = "rw"
    # default to /var/lib/virt_test/images
    nfs_mount_src = "${nfs_mount_src}"
    export_ip = "*"
    export_options = "rw,no_root_squash"
    setup_local_nfs = "yes"
    # enable virt_use_nfs SELinux boolean
    local_boolean_varible = "virt_use_nfs"
    local_boolean_value = "on"
    remote_boolean_varible = "virt_use_nfs"
    remote_boolean_value = "on"
    set_sebool_local = "yes"
    set_sebool_remote = "yes"
    migration_timeout = 300
    variants:
        - positive_testing:
            status_error = "no"
            variants:
                - live_migration:
                    variants:
                        - pause_vm:
                            pause_vm = "yes"
                        - reboot_vm:
                            reboot_vm = "yes"
                        - listen_address:
                            virsh_options = "--live --verbose --unsafe --listen-address ${server_ip}"
                        - diff_cpu_vendor:
                            diff_cpu_vendor = "yes"
                        - cpuset:
                            cpu_set = "yes"
                            vcpu_num = '2'
                        - timeout:
                            set_migration_speed = 1
                            migration_cmd_timeout = 30
                            run_migrate_cmd_in_front = "no"
                            run_migrate_cmd_in_back = "yes"
                            check_job_info = "yes"
                            check_complete_job = "no"
                            virsh_options = "--live --verbose --unsafe --timeout ${migration_cmd_timeout}"
                        - track_statistics:
                            run_migrate_cmd_in_front = "no"
                            run_migrate_cmd_in_back = "yes"
                            set_migration_speed = 15
                            virsh_options = "--live --verbose --unsafe"
                            check_job_info = "yes"
                            check_complete_job = "yes"
                        - default_cache_size:
                            get_migrate_compcache = "yes"
                            run_migrate_cmd_in_front = "no"
                            run_migrate_cmd_in_back = "yes"
                            set_migration_speed = 10
                            check_job_info = "yes"
                            virsh_options = "--live --verbose --unsafe --compressed"
                        - set_cache_size:
                            set_migrate_compcache_size = 640000000
                            set_migration_speed = 15
                            run_migrate_cmd_in_front = "no"
                            run_migrate_cmd_in_back = "yes"
                            check_job_info = "yes"
                            check_complete_job = "yes"
                            config_libvirtd = "yes"
                            grep_str_from_local_libvirt_log = "virDomainMigrateSetCompressionCache.*cacheSize=${set_migrate_compcache_size}"
                            virsh_options = "--live --verbose --unsafe --compressed"
                        - with_hugepages:
                            setup_hugepages = "yes"
                            target_hugepages = 600
                            mb_enable = "yes"
                            config_remote_hugepages = "yes"
                            remote_target_hugepages = ${target_hugepages}
                            remote_hugetlbfs_path = "/dev/hugepages"
                            restart_libvirtd_remotely = "yes"
                        - bi_directional:
                            virsh_options = "--live --verbose --unsafe"
                            migrate_vm_back = "yes"
                            migration_source_uri = "qemu+ssh://${client_ip}/system"
                        - iscsi:
                            setup_nfs = "no"
                            enable_virt_use_nfs = "no"
                            nfs_mount_dir =
                            disk_source_protocol = "iscsi"
                            virsh_options = "--live --verbose --unsafe"
                            iscsi_setup = "yes"
                            disk_format = "raw"
                            variants:
                                - ipv4:
                                - ipv6:
                                    config_ipv6 = "yes"
                                    ip_addr_suffix = 64
                                    # e.g. ipv6_addr_src = "3fef::101", ipv6_addr_des = "3fef::102"
                                    ipv6_addr_src = "3cde::101"
                                    ipv6_addr_des = "3cde::102"
                                    # change your network interface name, e.g. eth0, switch
                                    client_ifname = "ENTER.YOUR.CLIENT_NETWORK_INTERFACE_NAME"
                                    client_ipv6_addr = "${ipv6_addr_src}/${ip_addr_suffix}"
                                    server_ifname = "ENTER.YOUR.SERVER_NETWORK_INTERFACE_NAME"
                                    server_ipv6_addr = "${ipv6_addr_des}/${ip_addr_suffix}"
                                    portal_ip = "${ipv6_addr_src}"
                        - stress:
                            variants:
                                - vm:
                                    variants:
                                        - iozone_with_set_max_downtime:
                                            stress_type = "iozone_in_vms"
                                            stress_args = "-a"
                                            max_down_time = 1.000
                                            set_migration_speed = 5
                                            check_job_info_time = 60
                                            run_migrate_cmd_in_front = "no"
                                            run_migrate_cmd_in_back = "yes"
                                            check_job_info = "yes"
                                            config_libvirtd = "yes"
                                            grep_str_from_local_libvirt_log = "migrate_set_downtime.*${max_down_time}"
                                            virsh_options = "--live --verbose --unsafe"
                                        - memhog_memory_without_swap:
                                            no_swap = "yes"
                                            memhog_install_pkg = "yum install -y numactl"
                                            virsh_options = "--live --verbose --unsafe"
                                - host:
                                    variants:
                                        - stress_cpu:
                                            stress_type = "stress_on_host"
                                            stress_args = "--cpu 8 --timeout 1000s"
                                            load_timeout = 300
                                            migration_timeout = 600
                                            virsh_options = "--live --verbose --unsafe"
                                        - stress_memory:
                                            stress_type = "stress_on_host"
                                            stress_args = "--vm 6 --vm-bytes 256M --vm-keep --timeout 1000s"
                                            load_timeout = 300
                                            migration_timeout = 600
                                            virsh_options = "--live --verbose --unsafe"
                                        - netperf_network:
                                            netperf_version = "netperf-2.6.0"
                                            netperf_source = "shared/deps/netperf/${netperf_version}.tar.bz2"
                                            client_path = "/var/tmp/"
                                            server_path = "/var/tmp/"
                                            netperf_test_duration = 300
                                            netperf_para_sessions = 1
                                            migration_timeout = 600
                                            virsh_options = "--live --verbose --unsafe"
                - p2p_migration:
                    variants:
                        - basic:
                            virsh_options = "--live --p2p --verbose --unsafe"
                            variants:
                                - with_ssh:
                                    uri_port = ":22"
                                    transport = "ssh"
                                - with_tcp:
                                    transport = "tcp"
                                    uri_port = ":16509"
                                - with_tls:
                                    transport = "tls"
                                    uri_port = ":16514"
                                    # please change these with your hostname
                                    server_cn = "ENTER.YOUR.SERVER_CN"
                                    client_cn = "ENTER.YOUR.CLIENT_CN"
                        - bi_directional:
                            virsh_options = "--live --p2p --verbose --unsafe"
                            migrate_vm_back = "yes"
                            migration_source_uri = "qemu+ssh://${client_ip}/system"
                        - listen_address:
                            listen_address = "${server_ip}"
                            virsh_options = "--live --p2p --verbose --unsafe --listen-address ${server_ip}"
                            variants:
                                - with_ssh:
                                    uri_port = ":22"
                                    transport = "ssh"
                                - with_tcp:
                                    transport = "tcp"
                                    uri_port = ":16509"
                                - with_tls:
                                    transport = "tls"
                                    uri_port = ":16514"
                                    # please change these with your hostname
                                    server_cn = "ENTER.YOUR.SERVER_CN"
                                    client_cn = "ENTER.YOUR.CLIENT_CN"
                        - with_keepalive_protocol:
                            set_migration_speed = 1
                            run_migrate_cmd_in_front = "no"
                            run_migrate_cmd_in_back = "yes"
                            virsh_options = "--live --p2p --verbose --unsafe"
                            variants:
                                - default_conf_less_than_keepalive_time:
                                    # the format looks like 'N ${time}', and N >=1, the ${time}
                                    # is [hours|minutes|seconds],etc. e.g. '1 seconds', '2 minutes'
                                    # at present, it only works well when the block_time < 30s
                                    block_time = "29 seconds"
                                    block_ip_addr = "${server_ip}"
                                    transport = "tcp"
                                    uri_port = ":16509"
                                    set_migration_speed = 2
                                    check_job_info = "no"
                - tunnelled_migration:
                    variants:
                        - basic:
                            virsh_options = "--live --p2p --tunnelled --verbose --unsafe"
                            variants:
                                - with_ssh:
                                    uri_port = ":22"
                                    transport = "ssh"
                                - with_tcp:
                                    transport = "tcp"
                                    uri_port = ":16509"
                                - with_tls:
                                    transport = "tls"
                                    uri_port = ":16514"
                                    # please change these with your hostname
                                    server_cn = "ENTER.YOUR.SERVER_CN"
                                    client_cn = "ENTER.YOUR.CLIENT_CN"
                        - bi_directional:
                            virsh_options = "--live --p2p --tunnelled --verbose --unsafe"
                            migrate_vm_back = "yes"
                            migration_source_uri = "qemu+ssh://${client_ip}/system"
                - migration_with_nbd:
                    setup_nfs = "no"
                    enable_virt_use_nfs = "no"
                    target_pool_name = "precreation_pool"
                    target_pool_type = "dir"
                    nfs_mount_dir =
                    variants:
                        - nbd_port:
                            virsh_options = "--live --verbose --unsafe --copy-storage-all"
                            migration_timeout = 1800
                            nbd_port = "49153"
                            create_target_image = "yes"
                            config_libvirtd = "yes"
                            grep_str_from_remote_libvirt_log = "port=${nbd_port}"
                - migration_with_gluster:
                    replace_vm_disk = "yes"
                    disk_type = "network"
                    disk_target = "vda"
                    disk_target_bus = "virtio"
                    disk_format = "qcow2"
                    image_size = "10G"
                    setup_nfs = "no"
                    enable_virt_use_nfs = "no"
                    create_target_image = "no"
                    nfs_mount_dir =
                    variants:
                        - gluster:
                            virsh_options = "--live --verbose --unsafe"
                            migration_timeout = 300
                            gluster_disk = "yes"
                            disk_source_protocol = "gluster"
                            vol_name = "gluster-vol1"
                            pool_name = "glusterfs"
                            migrate_vm_back = "yes"
                            migration_source_uri = "qemu+ssh://${client_ip}/system"
                        - rdma:
                            virsh_options = "--live --verbose --unsafe"
                            gluster_transport = "rdma"
                            migration_timeout = 300
                            gluster_disk = "yes"
                            disk_source_protocol = "gluster"
                            vol_name = "gluster-vol1"
                            pool_name = "glusterfs"
                            open_remote_listening_port = "49152"
                - migration_with_ipv6:
                    # no problem, the test codes will automatically
                    # clean up created static IPv6 configuration
                    config_ipv6 = "yes"
                    ip_addr_suffix = 64
                    # e.g. ipv6_addr_src = "3fef::101", ipv6_addr_des = "3fef::102"
                    ipv6_addr_src = "3def::101"
                    ipv6_addr_des = "3def::102"
                    # change your network interface name, e.g. eth0, switch
                    client_ifname = "ENTER.YOUR.CLIENT_NETWORK_INTERFACE_NAME"
                    client_ipv6_addr = "${ipv6_addr_src}/${ip_addr_suffix}"
                    server_ifname = "ENTER.YOUR.SERVER_NETWORK_INTERFACE_NAME"
                    server_ipv6_addr = "${ipv6_addr_des}/${ip_addr_suffix}"
                    variants:
                        - with_ssh:
                            uri_port = ":22"
                            transport = "ssh"
                        - with_tcp:
                            listen_addr = "${ipv6_addr_des}"
                            transport = "tcp"
                            uri_port = ":16509"
                        - with_tls:
                            transport = "tls"
                            uri_port = ":16514"
                            listen_addr = "${ipv6_addr_des}"
                            server_cn = "${ipv6_addr_des}"
                            client_cn = "${ipv6_addr_src}"
                - migration_with_devices:
                    variants:
                        - eject_cdrom_in_guest:
                            virsh_options = "--live --verbose --unsafe"
                            guest_cmd = "eject -v /dev/cdrom"
                            local_disk_image = "${nfs_mount_dir}/virt_iso.img"
                            local_image_format = "raw"
                            local_disk_size = "10M"
                            target_dev = "hdc"
                            attach_disk_args = "--config --driver qemu --subdriver ${local_image_format} --cache none --type cdrom --mode readonly"
                        - startup_policy:
                            variants:
                                - attach_cdrom:
                                    cdrom_device_type = "cdrom"
                                    cdrom_image_size = "10M"
                                    variants:
                                        - requisite_policy:
                                            startup_policy = "requisite"
                                        - optional_policy:
                                            startup_policy = "optional"
                                        - mandatory_policy:
                                            startup_policy = "mandatory"
                                - attach_floppy:
                                    floppy_device_type = "floppy"
                                    floppy_image_size = "1.44M"
                                    variants:
                                        - requisite_policy:
                                            startup_policy = "requisite"
                                        - optional_policy:
                                            startup_policy = "optional"
                                        - mandatory_policy:
                                            startup_policy = "mandatory"
                                - attach_cdrom_and_floppy:
                                    cdrom_image_size = "10M"
                                    cdrom_device_type = "cdrom"
                                    floppy_image_size = "1.44M"
                                    floppy_device_type = "floppy"
                                    variants:
                                        - requisite_policy:
                                            startup_policy = "requisite"
                                        - optional_policy:
                                            startup_policy = "optional"
                                        - mandatory_policy:
                                            startup_policy = "mandatory"
                        - attach_virtual_disk:
                            local_disk_image = "${nfs_mount_dir}/virt_attach_disk.img"
                            local_image_format = "raw"
                            local_disk_size = "1G"
                            target_dev = "vdb"
                            run_cmd_in_vm_after_migration = "dd if=/dev/zero of=/tmp/test count=1 bs=1 seek=10M"
                            attach_disk_args = "--config --driver qemu --subdriver ${local_image_format} --cache none"
                            virsh_options = "--live --verbose --unsafe"
                        - attach_virtual_nic:
                            attach_iface_times = 7
                            attach_iface_options = "--type bridge --source virbr0"
                            virsh_options = "--live --verbose --unsafe"
                - cross_rhel_platform_migration:
                    # only work well on RHEL platform
                    migration_timeout = 600
                    virsh_options = "--live --verbose --unsafe"
                    variants:
                        - vm_without_video:
                            del_vm_video_dev = "yes"
                            iface_address = "type=pci,domain=0x0000,bus=0x00,slot=0x02,function=0x0"
                        - with_io_throttling:
                            blkdevio_device = "vda"
                            variants:
                                - write_bytes_sec:
                                    blkdevio_val = 1048576
                                    blkdevio_write_bytes_sec = ${blkdevio_val}
                                    target_qemu_filter = "ps auxf | grep qemu-kvm | grep bps_wr=${blkdevio_val}"
                                - read_bytes_sec:
                                    blkdevio_val = 10485760
                                    blkdevio_read_bytes_sec = ${blkdevio_val}
                                    target_qemu_filter = "ps auxf | grep qemu-kvm | grep bps_rd=${blkdevio_val}"
                                - total_bytes_sec:
                                    blkdevio_val = 41943040
                                    blkdevio_total_bytes_sec = ${blkdevio_val}
                                    target_qemu_filter = "ps auxf | grep qemu-kvm | grep bps=${blkdevio_val}"
                                - total_iops_sec:
                                    blkdevio_val = 10
                                    blkdevio_total_iops_sec = ${blkdevio_val}
                                    target_qemu_filter = "ps auxf | grep qemu-kvm | grep iops=${blkdevio_val}"
                        - with_watchdog:
                            variants:
                                - ib700:
                                    watchdog_model = "ib700"
                                    watchdog_action = "pause"
                                - i6300esb:
                                    watchdog_model = "i6300esb"
                                    watchdog_action = "pause"
                                    watchdog_module_args = "heartbeat=60"
                        - with_smartcard:
                             variants:
                                - ccid:
                                    smartcard_mode = "passthrough"
                                    smartcard_type = "spicevmc"
                        - with_cpu_model:
                            cpu_mode = "custom"
                            cpu_match = "exact"
                            cpu_model_fallback = "allow"
                            start_filter_string = "not compatible"
                            variants:
                                - intel:
                                    cpu_vendor = "Intel"
                                    variants:
                                        - SandyBridge:
                                            cpu_model_name = "SandyBridge"
                                            cpu_feature_dict = "{'xsave': 'require'}"
                                        - Hasswell:
                                            cpu_model_name = "Hasswell"
                                            cpu_feature_dict = "{'xsave': 'require'}"
                                            start_filter_string = "Unknown CPU model"
                                        - Westmere_no_xsave:
                                            cpu_model_name = "Westmere"
                                        - Nehalem_no_xsave:
                                            cpu_model_name = "Nehalem"
                                        - Penryn_no_xsave:
                                            cpu_model_name = "Penryn"
                                        - Conroe_no_xsave:
                                            cpu_model_name = "Conroe"
                                - amd:
                                    cpu_vendor = "AuthenticAMD"
                                    variants:
                                        - Opteron_G5:
                                            cpu_model_name = "Opteron_G5"
                                            cpu_feature_dict = "{'xsave': 'require'}"
                                        - Opteron_G4:
                                            cpu_model_name = "Opteron_G4"
                                            cpu_feature_dict = "{'xsave': 'require'}"
                                        - Opteron_G3_no_xsave:
                                            cpu_model_name = "Opteron_G3"
                                        - Opteron_G2_no_xsave:
                                            cpu_model_name = "Opteron_G2"
                                        - Opteron_G1_no_xsave:
                                            cpu_model_name = "Opteron_G1"
                        - with_s3_s4:
                            pm_mem_enabled = yes
                            pm_disk_enabled = yes
                            config_vm_agent = yes
                            variants:
                                - between_source_and_remote:
                                    pm_suspend_target = "mem, disk"
                                    set_src_pm_suspend_target = ${pm_suspend_target}
                                    set_src_pm_wakeup = yes
                                    swap_path = "${nfs_mount_dir}/swap_image"
                                    set_tgt_pm_wakeup = yes
                                    set_tgt_pm_suspend_target = ${pm_suspend_target}
                                    state_delay = 30
                - live_storage_migration:
                    setup_nfs = "no"
                    enable_virt_use_nfs = "no"
                    migration_timeout = 1800
                    target_pool_name = "precreation_pool"
                    target_pool_type = "dir"
                    create_target_image = "yes"
                    variants:
                        - simple:
                            nfs_mount_dir =
                            no_create_pool = "yes"
                            virsh_options = "--live --verbose"
                        - basic:
                            nfs_mount_dir =
                            virsh_options = "--live --verbose --copy-storage-all"
                        - writethrough_driver_cache:
                            migration_timeout = 1800
                            nfs_mount_dir =
                            disk_driver_cache = "writethrough"
                            virsh_options = "--live --verbose --copy-storage-all"
                        - raw_to_qcow2_target_image_format:
                            nfs_mount_dir =
                            target_image_format = "qcow2"
                            local_image_format = "raw"
                            target_disk_image = ${virt_image_dir}/virt_disk_test.img
                            local_disk_size = 1G
                            target_dev = "vdb"
                            attach_disk_args = "--config --driver qemu --subdriver ${local_image_format} --cache none"
                            create_another_target_image_cmd = qemu-img create -f qcow2 ${target_disk_image} ${local_disk_size}
                            variants:
                                - copy_storage_all:
                                    virsh_options = "--live --verbose --copy-storage-all"
                                - copy_storage_inc:
                                    virsh_options = "--live --verbose --copy-storage-inc"
                        - backing_file_with_copy_storage_inc:
                            create_target_image = "no"
                            setup_nfs = "yes"
                            enable_virt_use_nfs = "yes"
                            target_image_format = "qcow2"
                            target_image_path = "/var/lib/libvirt/images"
                            target_image_name = "foo_bar_test.${target_image_format}"
                            new_disk_source = "${target_image_path}/${target_image_name}"
                            # create disk image based on ${nfs_mount_dir}/${image_name} both local and remote host
                            create_local_disk_backfile_cmd = "qemu-img create ${new_disk_source} -f qcow2 -b ${nfs_mount_dir}/"
                            create_remote_disk_backfile_cmd = "${create_local_disk_backfile_cmd}"
                            # create disk image in the VM
                            dd_image_count = 100000
                            dd_image_bs = 1024
                            dd_image_of = "/tmp/vr_test.raw"
                            run_cmd_in_vm = "dd if=/dev/zero of=${dd_image_of} count=${dd_image_count} bs=${dd_image_bs}"
                            check_image_size = "yes"
                            check_disk_size_cmd = "qemu-img info ${new_disk_source}"
                            local_image_source = "${new_disk_source}"
                            virsh_options = "--live --verbose --copy-storage-inc"
                        - with_migrate_disks:
                            setup_nfs = "yes"
                            enable_virt_use_nfs = "yes"
                            migrate_disks = "yes"
                            attach_A_disk_source = "${nfs_mount_src}/test1.qcow2"
                            attach_B_disk_source = "${nfs_mount_dir}/test2.qcow2"
                            config_libvirtd = "yes"
                            variants:
                                - no_migrate_disks:
                                    virsh_options = "--live --unsafe --verbose --copy-storage-all"
                                - all_non_shared_disks:
                                    virsh_options = "--live --unsafe --verbose --copy-storage-all --migrate-disks vda,vdb"
                                - part_non_shared_disks:
                                    status_error = "yes"
                                    virsh_options = "--live --unsafe --verbose --copy-storage-all --migrate-disks vda"
                        - disk_ports:
                            nfs_mount_dir =
                            disk_port = "56789"
                            run_migrate_cmd_in_front = "no"
                            create_target_image = "yes"
                            virsh_options = "--live --verbose --copy-storage-all --disks-port ${disk_port}"
        - negative_testing:
            status_error = "yes"
            stop_remote_guest = "no"
            variants:
                - live_migration:
                    variants:
                        - stop_libvirtd_remotely:
                            stop_libvirtd_remotely = "yes"
                            virsh_options = "--live --verbose --unsafe"
                        - disable_virt_use_nfs_remotely:
                            remote_boolean_value = "off"
                            virsh_options = "--live --verbose --unsafe"
                        - noexist_xml:
                            virsh_options = "--live --verbose --unsafe --xml no_exist.xml"
                        - unprivileged_user:
                            su_user = "bob"
                            adduser_cmd = "useradd ${su_user}"
                            deluser_cmd = "userdel -r ${su_user}"
                            uri_path = "/session"
                            virsh_options = "--live --verbose --unsafe --xml no_exist_xml"
                        - same_host_uuid:
                            config_libvirtd = "yes"
                            host_uuid = "'00000000-0000-0000-0000-000000000001'"
                            virsh_options = "--live --verbose --unsafe"
                        - invalid_listen_address:
                            listen_address = "01.2.3.4"
                            virsh_options = "--live --verbose --unsafe --listen-address ${listen_address}"
                        - abort_job:
                            abort_job = "yes"
                            set_migration_speed = 1
                            run_migrate_cmd_in_front = "no"
                            run_migrate_cmd_in_back = "yes"
                            virsh_options = "--live --verbose --unsafe"
                        - cancel_migration:
                            ctrl_c = "yes"
                            delay_time = 5
                            set_migration_speed = 1
                            run_migrate_cmd_in_front = "no"
                            run_migrate_cmd_in_back = "yes"
                            check_domain_state = "yes"
                            expected_domain_state = "running"
                            virsh_options = "--live --verbose --unsafe"
                        - restart_local_libvirtd:
                            set_migration_speed = 1
                            run_migrate_cmd_in_front = "no"
                            run_migrate_cmd_in_back = "yes"
                            restart_src_libvirtd = "yes"
                            restart_vm = "yes"
                            virsh_options = "--live --verbose --unsafe"
                        - with_hugepages:
                            variants:
                                - no_config_target:
                                    setup_hugepages = "yes"
                                    target_hugepages = 600
                                    mb_enable = "yes"
                                - source_hugemem_less_than_vm_mem:
                                    setup_hugepages = "yes"
                                    target_hugepages = 10
                                    mb_enable = "yes"
                                    config_remote_hugepages = "yes"
                                    remote_target_hugepages = ${target_hugepages}
                                    remote_hugetlbfs_path = "/dev/hugepages"
                                    restart_libvirtd_remotely = "yes"
                                - target_hugemem_less_than_vm_mem:
                                    setup_hugepages = "yes"
                                    target_hugepages = 600
                                    mb_enable = "yes"
                                    config_remote_hugepages = "yes"
                                    remote_target_hugepages = 10
                                    remote_hugetlbfs_path = "/dev/hugepages"
                                    restart_libvirtd_remotely = "yes"
                                - no_restart_target_libvirtd:
                                    setup_hugepages = "yes"
                                    target_hugepages = 600
                                    mb_enable = "yes"
                                    config_remote_hugepages = "yes"
                                    remote_target_hugepages = ${target_hugepages}
                                    remote_hugetlbfs_path = "/dev/hugepages"
                                    restart_libvirtd_remotely = "no"
                - p2p_migration:
                    variants:
                        - unreachable_destenation:
                            target_ip = "11.22.33.44"
                            setup_ssh = "no"
                            virsh_options = "--live --p2p --verbose --unsafe"
                            variants:
                                - with_ssh:
                                    uri_port = ":22"
                                    transport = "ssh"
                                - with_tcp:
                                    setup_tcp = "no"
                                    transport = "tcp"
                                    uri_port = ":16509"
                                - with_tls:
                                    setup_tls = "no"
                                    transport = "tls"
                                    tls_port = ":16514"
                                    # please change these with your hostname
                                    server_cn = "ENTER.YOUR.SERVER_CN"
                                    client_cn = "ENTER.YOUR.CLIENT_CN"
                        - invalid_listen_address:
                            listen_address = "1.2.3.4"
                            virsh_options = "--live --p2p --verbose --unsafe --listen-address ${listen_address}"
                            variants:
                                - with_ssh:
                                    uri_port = ":22"
                                    transport = "ssh"
                                - with_tcp:
                                    setup_tcp = "no"
                                    transport = "tcp"
                                    uri_port = ":16509"
                                - with_tls:
                                    setup_tls = "no"
                                    transport = "tls"
                                    uri_port = ":16514"
                                    # please change these with your hostname
                                    server_cn = "ENTER.YOUR.SERVER_CN"
                                    client_cn = "ENTER.YOUR.CLIENT_CN"
                - tunnelled_migration:
                    variants:
                        - restart_local_libvirtd:
                            virsh_options = "--persistent --undefinesource --live --p2p --tunnelled --verbose --unsafe"
                            set_migration_speed = 1
                            run_migrate_cmd_in_front = "no"
                            run_migrate_cmd_in_back = "yes"
                            restart_src_libvirtd = "yes"
                - live_storage_migration:
                    setup_nfs = "no"
                    enable_virt_use_nfs = "no"
                    nfs_mount_dir =
                    migration_timeout = 1800
                    target_pool_name = "precreation_pool"
                    target_pool_type = "dir"
                    variants:
                        - no_create_target_image:
                            create_target_image = "no"
                            variants:
                                - simple:
                                    virsh_options = "--live --verbose"
                                - basic:
                                    virsh_options = "--live --verbose --copy-storage-all"
                        - qcow2_to_raw_target_image_format:
                            create_target_image = "yes"
                            no_create_pool = "yes"
                            target_image_format = "raw"
                            variants:
                                - copy_storage_all:
                                    virsh_options = "--live --verbose --copy-storage-all"
                                - copy_storage_inc:
                                    virsh_options = "--live --verbose --copy-storage-inc"
                        - mutually_exclusive_options:
                            create_target_image = "yes"
                            virsh_options = "--live --persistent --verbose --copy-storage-all --copy-storage-inc"
                        - cancel_migration:
                            status_error = "no"
                            ctrl_c = "yes"
                            delay_time = 5
                            create_target_image = "yes"
                            check_job_info = "no"
                            run_migrate_cmd_in_back = "yes"
                            run_migrate_cmd_in_front = "yes"
                            variants:
                                - copy_storage_all:
                                    virsh_options = "--live --verbose --persistent --copy-storage-all"
                                - copy_storage_inc:
                                    virsh_options = "--live --verbose --persistent --copy-storage-inc"
                - rdma_migration:
                    setup_nfs = "no"
                    enable_virt_use_nfs = "no"
                    nfs_mount_dir =
                    virsh_options = "--live --verbose --unsafe --migrateuri rdma://${server_ip} --listen-address 0.0.0.0"
                    variants:
                        - no_memory_hard_limit:
                            status_error = "no"
                            patterns_virsh_cmd = ".*error.*no memory hard limit.*"
                        - no_rdma_env:
                            hard_limit_value = "1048576"
                            swap_hard_limit_value = "2097152"
                            memtune_options = "--hard-limit ${hard_limit_value} --swap-hard-limit ${swap_hard_limit_value} --config"
                        - no_rdma_env_rdma_pin_all:
                            hard_limit_value = "2097152"
                            swap_hard_limit_value = "2097152"
                            memtune_options = "--hard-limit ${hard_limit_value} --swap-hard-limit ${swap_hard_limit_value} --config"
                            virsh_options = "--live --verbose --unsafe --rdma-pin-all --migrateuri rdma://${server_ip} --listen-address 0.0.0.0"
                        - no_rdma_env_turn_off_rdma_pin_all:
                            hard_limit_value = "1048576"
                            swap_hard_limit_value = "1048576"
                            memtune_options = "--hard-limit ${hard_limit_value} --swap-hard-limit ${swap_hard_limit_value} --config"
                            virsh_options = "--live --verbose --unsafe --rdma-pin-all --migrateuri rdma://${server_ip}"
                - cross_rhel_platform_migration:
                    # only work well on RHEL platform
                    migration_timeout = 600
                    virsh_options = "--live --verbose --unsafe"
                    os_ver_from = "release 6"
                    os_ver_to = "release 7"
                    variants:
                        - with_disabled_device:
                            variants:
                                - sound_device:
                                    sound_model = "es1370"
                                - with_host_cdrom:
                                    pass_through_cdrom = "yes"
                                    cdrom_device_type = "cdrom"
                                    disk_source_file = "/dev/sr0"
                                    cdrom_disk_type = "block"
