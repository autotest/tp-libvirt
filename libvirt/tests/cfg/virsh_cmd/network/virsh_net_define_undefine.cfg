- virsh.net_define_undefine:
    type = virsh_net_define_undefine
    vms = ""
    main_vm = ""
    start_vm = no
    # net_(un)define_options_ref is for special handling of option:
    # "correct_arg": a file for net-define or a name for net-undefine
    # "no_option": nothing passed to command
    # "not_exist_option": a not exist file or network
    net_define_undefine_options_ref = "correct_arg"
    # test type is a transaction or just for net-(un)define
    net_define_undefine_trans_ref = "trans"
    net_define_undefine_remove_existing = "yes"
    variants:
        - normal_test:
            status_error = "no"
            variants:
                - new_network:
                    net_define_undefine_net_name = "foobar"
                    variants:
                        - non_acl:
                        - multi_ip:
                            multi_ip = "yes"
                            test_range = "no"
                            address_v4 = "192.168.100.1"
                            netmask = "255.255.255.0"
                            address_v6_1 = "2001:db8:ca2:6::1"
                            address_v6_2 = "2001:db8:ca3:6::1"
                            dhcp_ranges_v6_start_1 = "2001:db8:ca2:6::100"
                            dhcp_ranges_v6_end_1 = "2001:db8:ca2:6::1ff"
                            prefix_v6 = "64"
                        - acl_test:
                            setup_libvirt_polkit = "yes"
                            action_id = "org.libvirt.api.network.write org.libvirt.api.network.save org.libvirt.api.network.start org.libvirt.api.network.stop org.libvirt.api.network.delete"
                            action_lookup = "connect_driver:QEMU network_name:foobar"
                            unprivileged_user = "EXAMPLE"
                            virsh_uri = "qemu:///system"
                        - state_persistent_active:
                            check_states = "yes"
                            net_persistent = "yes"
                            net_active = "yes"
                        - state_transient_active:
                            check_states = "yes"
                            net_persistent = "no"
                            net_active = "yes"
                        - state_persistent_inactive:
                            check_states = "yes"
                            net_persistent = "yes"
                            net_active = "no"
                - default_network:
                    net_define_undefine_net_name = "default"
                    net_define_undefine_net_uuid = ""
                    variants:
                        - non_acl:
                        - acl_test:
                            setup_libvirt_polkit = "yes"
                            action_id = "org.libvirt.api.network.write org.libvirt.api.network.save org.libvirt.api.network.start org.libvirt.api.network.stop org.libvirt.api.network.delete"
                            action_lookup = "connect_driver:QEMU network_name:default"
                            unprivileged_user = "EXAMPLE"
                            virsh_uri = "qemu:///system"
                - net_name_with_dot:
                    net_define_undefine_net_name = ".b"
                #TODO: Support Route network
        - error_test:
            status_error = "yes"
            variants:
                - invalid_network:
                    net_define_undefine_trans_ref = "define"
                    # For net-define test only
                    variants:
                        - invalid_uuid:
                            net_define_undefine_net_uuid = "1-2-3-4-5-6"
                        - invalid_netname:
                            net_define_undefine_net_name = "!@#$%^&*()[]{}:;'',.?/\\|`~-=_+"
                        - invalid_name_with_slash:
                            net_define_undefine_net_name = "b/r2"
                            net_define_undefine_err_msg = "invalid char in name: /"
                        - invalid_setting:
                            edit_xml = "yes"
                            address_v4 = "192.168.100.1"
                            netmask = "255.255.255.0"
                            dhcp_ranges_start = "192.168.100.30"
                            dhcp_ranges_end = "192.168.100.100"
                            variants:
                                - reverse_range:
                                    dhcp_ranges_start = "192.168.100.100"
                                    dhcp_ranges_end = "192.168.100.30"
                                    net_define_undefine_err_msg = "is reversed"
                                - reverse_port:
                                    test_port = "yes"
                                    nat_port_start = "65535"
                                    nat_port_end = "1024"
                                    net_define_undefine_err_msg = "Missing or invalid 'end' attribute"
                                - not_within_range:
                                    dhcp_ranges_start = "192.168.110.2"
                                    dhcp_ranges_end = "192.168.110.100"
                                    net_define_undefine_err_msg = "not entirely within"
                        - multi_dhcp:
                            multi_ip = "yes"
                            address_v4 = "192.168.100.1"
                            netmask = "255.255.255.0"
                            address_v6_1 = "2001:db8:ca2:7::1"
                            address_v6_2 = "2001:db8:ca3:7::1"
                            prefix_v6 = "64"
                            variants:
                                - v4:
                                    dhcp_ranges_start = "192.168.100.5"
                                    dhcp_ranges_end = "192.168.100.80"
                                    net_define_undefine_err_msg = "Multiple IPv4 dhcp sections found"
                                - v6:
                                    dhcp_ranges_v6_start_1 = "2001:db8:ca2:7::100"
                                    dhcp_ranges_v6_end_1 = "2001:db8:ca2:7::1ff"
                                    dhcp_ranges_v6_start_2 = "2001:db8:ca3:7::100"
                                    dhcp_ranges_v6_end_2 =   "2001:db8:ca3:7::1ff"
                                    net_define_undefine_err_msg = "Multiple IPv6 dhcp sections found"
                - acl_test:
                    variants:
                        - define_acl:
                            net_define_undefine_trans_ref = "define"
                            net_define_undefine_net_name = "default"
                            setup_libvirt_polkit = "yes"
                            unprivileged_user = "EXAMPLE"
                            virsh_uri = "qemu:///system"
                        - undefine_acl:
                            net_define_undefine_trans_ref = "undefine"
                            net_define_undefine_net_name = "default"
                            setup_libvirt_polkit = "yes"
                            action_id = "org.libvirt.api.network.write org.libvirt.api.network.save org.libvirt.api.network.start org.libvirt.api.network.stop"
                            action_lookup = "connect_driver:QEMU network_name:default"
                            unprivileged_user = "EXAMPLE"
                            virsh_uri = "qemu:///system"
                - invalid_options:
                    variants:
                        - none_option:
                            net_define_undefine_options_ref = "no_option"
                        - not_exist_option:
                            net_define_undefine_options_ref = "not_exist_option"
                        - additional_arg:
                            net_define_undefine_extra = "xyz"
                        - additional_option:
                            net_define_undefine_extra = "--xyz"
                    variants:
                        - net_define:
                            net_define_undefine_trans_ref = "define"
                        - net_undefine:
                            # define network ok for undefine test
                            net_define_undefine_trans_ref = "undefine"
                - net_define_readonly:
                    net_define_undefine_readonly = "yes"
                    net_define_undefine_trans_ref = "define"
                - net_undefine_readonly:
                    net_define_undefine_readonly = "yes"
                    net_define_undefine_trans_ref = "undefine"
