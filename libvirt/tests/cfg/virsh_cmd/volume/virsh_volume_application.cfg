- virsh.volume_application:
    type = virsh_volume_application
    take_regular_screendumps = no
    volume_count = 1
    volume_size = "1G"
    kill_vm = "yes"
    # If this parameter remains as following content,
    # test module will create one iscsi device instead
    block_device = "/DEV/EXAMPLE"
    variants:
        - dir:
            pool_type = "dir"
            pool_target = "dir-pool"
        - disk:
            pool_type = "disk"
            pool_target = "/dev"
            emulated_image = "disk-pool"
        - fs:
            pool_type = "fs"
            pool_target = "fs"
            emulated_image = "fs-pool"
        - logical:
            pool_type = "logical"
            pool_target = "/dev/vg_logical"
            emulated_image = "logical-pool"
        - netfs:
            pool_type = "netfs"
            pool_target = "nfs-mount"
            nfs_server_dir = "nfs-server"
            source_host = "localhost"
    variants:
        - unattended_install.cdrom:
            only Linux
            # Before test you need to create
            # $AUTOTEST_PATH/client/tests/virt/shared/data/isos/linux,
            # then copy iso into it, or create soft link for iso path
            # and the directory you created above:
            # ln -s /path/iso $AUTOTEST_PATH/client/tests/virt/shared/data/isos/linux
            application = "install"
            volume_size = 10G
            start_vm = no
            image_size_stg = ${volume_size}
            image_size = ${volume_size}
            install_timeout = 1800
            main_vm = ""
            vms = ""
        - disk_attach:
            application = "attach"
            disk_target = "vdb"
            test_message = "This is a test message"
            kill_vm_before_test = yes
            kill_vm_on_error = yes
