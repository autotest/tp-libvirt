- virsh.domblkthreshold:
    type = virsh_domblkthreshold
    take_regular_screendumps = "no"
    start_vm = "no"
    virt_disk_vm_ref = "name"
    virt_disk_device = "disk"
    storage_size = "1G"
    virt_disk_device_target = "vdb"
    virt_disk_device_format = "raw"
    virt_disk_device_bus = "virtio"
    block_threshold_timeout = "60"
    block_threshold_value = "100M"
    block_threshold_option = "--loop"
    event_type = "block-threshold"
    variants:
        - snapshot_test:
            backend_storage_type = "file"
            virt_disk_device_type = "file"
            image_filename = "disk.img"
            virt_disk_device_format = "qcow2"
            variants:
                - default:
                    default_snapshot_test = "yes"
                - mirror_mode_blockcommit:
                    mirror_mode_blockcommit = "yes"
                    block_threshold_value = "512M"
                    block_threshold_timeout = "120"
                - mirror_mode_blockcopy:
                    mirror_mode_blockcopy = "yes"
                    dest_path = "/var/lib/libvirt/images/new-clone1"
                    block_threshold_value = "1024M"
                    block_threshold_timeout = "120"
                - threshold_dev_index_event_twice:
                    func_supported_since_libvirt_ver = (7, 6, 0)
                    unsupported_err_msg = "Bug fix:1983429 is not available"
                    block_threshold_timeout = "240"
                    event_count = "2"
                - threshold_index_event_once:
                    func_supported_since_libvirt_ver = (7, 6, 0)
                    threshold_index_event_once = "yes"
                    unsupported_err_msg = "Bug fix:1983429 is not available"
                    block_threshold_timeout = "240"
                    event_count = "1"
                    dev_target_index = "vdb[1]"
        - luks_test:
            backend_storage_type = "luks"
            virt_disk_device_type = "file"
            image_filename = "disk.img"
            encryption_in_source = "yes"
            luks_encrypt_passwd = "password"            
        - block_test:
            backend_storage_type = "iscsi"        
            virt_disk_device_source = ""
            virt_disk_device_type = "block"
            virt_disk_check_partitions = "yes"
            emulated_image = "iscsi"
            iscsi_host = "127.0.0.1"
            iscsi_port = "3260"
        - iscsi_test:
            backend_storage_type = "iscsi"
            virt_disk_device_type = "network"
            emulated_image = "iscsi"
            iscsi_host = "127.0.0.1"
            iscsi_port = "3260"
            enable_auth = "yes"
            auth_sec_usage_target = "libvirtiscsi"
            auth_sec_usage_type = "iscsi"
            chap_user = "redhat"
            chap_passwd = "password"
            use_auth_usage = "yes"
            auth_in_source = "yes"
        - gluster_test:
            no pseries, s390-virtio
            # Gluster server host is set base.cfg under avocado-vt        
            backend_storage_type = "gluster"
            virt_disk_device_type = "network"
            gluster_vol_name = "vol_virtual_disks_luks"
            gluster_pool_name = "brick1"
            gluster_img_name = "gluster1.img"
        - ceph_test:
            no s390-virtio 
            backend_storage_type = "ceph"
            virt_disk_device_type = "network"
            ceph_host_port = "6789"
            ceph_disk_name = "domblkthreshold-ceph-pool/rbd-domblkthreshold.img"
            storage_size = "150M"
            enable_auth = "yes"
            ceph_host_ip = "EXAMPLE_HOSTS_AUTHX"
            ceph_mon_ip = "EXAMPLE_MON_HOST_AUTHX"
            ceph_client_name = "EXAMPLE_CLIENT_NAME"
            ceph_client_key = "EXAMPLE_CLIENT_KEY"
            ceph_auth_user = "EXAMPLE_AUTH_USER"
            ceph_auth_key = "EXAMPLE_AUTH_KEY"
            auth_sec_usage_type = "ceph"
            use_auth_uuid = "yes"
            auth_in_source = "yes"
        - nfs_test:
            backend_storage_type = "nfs" 
            pool_name = "nfs_pool"
            pool_target = "nfs_mount"
            nfs_server_dir = "nfs_server"
            virt_disk_device_type = "file"
            virt_disk_check_partitions = "yes"
            nfs_image_name = "nfs.img"
            virt_use_nfs = "on"
        - dir_pool_test:
            backend_storage_type = "dir"
            pool_name = "dir_pool"
            pool_target = "/var/lib/libvirt/images/luks"
            vol_name = "luks_1.img"
            vol_alloc = "0"
            vol_cap_unit = "G"
            vol_cap = "1"
            dir_image_name = "luks_1.img"
            target_format = "raw"
            target_label = "virt_image_t"
            target_encypt = "luks"
            virt_disk_device_type = "file"
            virt_disk_check_partitions = "yes"
            sec_volume = "/var/lib/libvirt/images/luks/luks_1.img"
        - nbd_test:
            backend_storage_type = "nbd"
            virt_disk_device_type = "network"
            emulated_image = "/var/lib/libvirt/images/nbd.qcow2"
            nbd_server_port = "10001"
    variants:
        - coldplug:
            hotplug_disk = "no"
    variants:
        -positive_test:
            status_error = "no"
            luks_secret_passwd = "password"
