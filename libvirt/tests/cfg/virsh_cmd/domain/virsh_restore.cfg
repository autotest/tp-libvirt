- virsh.restore:
    type = virsh_restore
    status_error = "yes"
    start_vm = "yes"
    kill_vm = "yes"
    kill_vm_before_test = "yes"
    take_regular_screendumps = "no"
    # Create a saved file of domain with virsh save by default
    restore_vm_ref = "saved_file"
    restore_extra_param = ""
    time_before_save = 0
    pseries:
        time_before_save = 30
    variants:
        - expected_option:
            status_error = "no"
            variants:
                - no_option:
                - paused_option:
                    restore_extra_param = "--paused"
                - running_option:
                    restore_extra_param = "--running"
                - xml_option:
                    restore_extra_param = "--xml"
                - xml_option_dac:
                    only non_acl
                    restore_extra_param = "--xml"
                    setup_nfs = "yes"
                    nfs_mount_dir = "/var/lib/libvirt/restore_nfs"
                    export_dir = "/var/lib/avocado/data/avocado-vt/images"
                    export_options = "rw,no_root_squash"
                    sec_model = "dac"
                    disk_source_protocol = 'netfs'
                    relabel = 'no'
                - iscsi_file:
                    only non_acl
                    setup_iscsi = "yes"
                    check_log = "/var/log/audit/audit.log"
                    check_str_not_in_log = "avc:.*denied"
                    variants:
                        - qemu_namespaces_mount:
                            qemu_conf_dict = '{"namespace": "[\"mount\"]"}'
                        - qemu_namespaces_none:
                            qemu_conf_dict = '{"namespace": "[]"}'
            variants:
                - non_acl:
                - acl_test:
                    setup_libvirt_polkit = "yes"
                    action_id = "org.libvirt.api.domain.start org.libvirt.api.domain.write"
                    action_lookup = "connect_driver:QEMU domain_name:${main_vm}"
                    action_matrix = "[{'action_id': 'org.libvirt.api.domain.start', 'action_lookup': '["connect_driver:QEMU", "domain_name:${main_vm}"]', 'lookup_oper': '&&'},{'action_id': 'org.libvirt.api.domain.write', 'action_lookup': '["connect_driver:QEMU", "domain_name:${main_vm}"]', 'lookup_oper': '&&'},{'action_id': 'org.libvirt.api.network.read', 'action_lookup': '["connect_driver:network"]'},{'action_id': 'org.libvirt.api.network-port.create', 'action_lookup': '["connect_driver:network"]'},{'action_id': 'org.libvirt.api.network-port.read', 'action_lookup': '["connect_driver:network"]'},{'action_id': 'org.libvirt.api.connect.getattr', 'action_lookup': '["connect_driver:QEMU", "connect_driver:network"]', 'lookup_oper': '||'},{'action_id': 'org.libvirt.api.network.getattr', 'action_lookup': '["connect_driver:network"]'}]"
                    unprivileged_user = "EXAMPLE"
                    virsh_uri = "qemu:///system"
        - no_option:
            restore_vm_ref = ""
        - unexpected_option:
            restore_vm_ref = "xyz"
        - new_file_option:
            restore_vm_ref = "empty_new_file"
        - start_option:
            restore_pre_status = "start"
        - extra_option:
            restore_extra_param = "xyz"
        - with_libvirt_stop:
            libvirtd = "off"
        - acl_test:
            setup_libvirt_polkit = "yes"
            unprivileged_user = "EXAMPLE"
            virsh_uri = "qemu:///system"
