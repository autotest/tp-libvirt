- virsh.migrate_stress:
    only Linux
    type = virsh_migrate_stress
    # Migration presetup, NFS, selinux, iptables etc.,
    migration_setup = "yes"

    # Guest import test case is not required as create_vm_libvirt
    # will take care of importing and cloning
    create_vm_libvirt = "yes"
    kill_vm_libvirt = "yes"
    kill_vm = "yes"

    # cache='none' is required for migration to work
    drive_cache = "none"
    # Just for example
    # Add migration vms if you want to test them
    migration_vms = "${vms}"
    # Default start migration_vms for live migration
    start_migration_vms = "yes"
    # Load vms are used for stress
    # Add load vms if you want to test it
    shell_prompt = "^.*@.*[\#\$]\s*$"
    thread_timeout = 5400
    # value for "virsh migrate --timeout %s"
    virsh_migrate_timeout = 3600
    virsh_migrated_vm_state = "running"
    virsh_migrate_there_and_back = "5"
    virsh_migrate_back = "yes"
    virsh_migrated_state = "running"
    variants:
        - set_vcpu_1:
            smp = 2
        - set_vcpu_2:
            smp = 4
        - set_memory_1:
            mem = 2048
        - set_memory_2:
            mem = 4096
    variants:
        - precopy:
            # In precopy it takes more time to converge, so let it suspend after 30min and
            # migrate and continue stress in destination without any issue
            virsh_migrate_timeout = 1800
            migrate_options = "--live --persistent --auto-converge"
        - postcopy:
            migrate_options = "--live --persistent --postcopy --postcopy-after-precopy"
    variants:
        - run_stress_app:
            stress_work_path = ''
            only stress_tool_in_vms,stress_tool_on_hosts
            variants:
                - stress:
                    stress_tool = "stress"
                    download_url_stress = "http://people.seas.harvard.edu/~apw/stress/stress-1.0.4.tar.gz"
                    make_cmds_stress = "./configure && make install"
                    variants:
                        - cpu_stress:
                            stress_args = "--cpu 4 --quiet --timeout 3600"
                        - memory_stress:
                            # Add timeout option to avoid infinite stress.
                            stress_args = "--vm 4 --vm-bytes %s --vm-keep --timeout 3600"
                            stress_vm_bytes = "128M"
                - stress_ng:
                    stress_tool = "stress-ng"
                    download_url_stress-ng = "http://kernel.ubuntu.com/~cking/tarballs/stress-ng/stress-ng-0.09.31.tar.xz"
                    make_cmds_stress-ng = "make && make install"
                    stress-ng_dependency_packages_list = ["@Development Tools"]
                    variants:
                        - cpu_stress:
                            stress-ng_args = "--cpu 4 --quiet --timeout 3600"
                        - memory_stress:
                            # Add timeout option to avoid infinite stress.
                            stress-ng_args = "--vm 4 --vm-bytes %s --vm-keep --timeout 3600"
                            stress_vm_bytes = "128M"
            variants:
                - stress_tool_in_vms:
                    migration_stress_vms = "yes"
                - stress_tool_on_hosts:
                    variants:
                        - with_host:
                        - with_host_and_vms:
                            migration_stress_vms = "yes"
                    variants:
                        - on_source:
                            migration_stress_host = "yes"
                        - on_target:
                            migration_stress_remote = "yes"
                        - on_source_and_on_target:
                            migration_stress_host = "yes"
                            migration_stress_remote = "yes"
                    variants:
                        - half_memory:
                            # Consume half of the memory on host
                            stress_vm_bytes = "half"
                        - short_of_memory:
                            # The memory on host will be less than vms_count*vm_memory
                            stress_vm_bytes = "shortage"
        - booting_load_vm:
            migration_stress_type = "load_vm_booting"
        - booting_load_vms:
            migration_stress_type = "load_vms_booting"
        - booting_migration_vms:
            # Only simultaneous operation support booting vms' migration
            only simultaneous_migration
            # Start should be right before migration
            start_migration_vms = "no"
            migration_stress_type = "vms_booting"
    variants:
        - orderly_migration:
            migration_type = "orderly"
        # When migrating one vm to remote,
        # migrating another vm from remote to local
        - cross_migration:
            migration_type = "cross"
        - simultaneous_migration:
            migration_type = "simultaneous"
        - compressed_migration:
            only booting_load_vms
            migration_type = "compressed"
