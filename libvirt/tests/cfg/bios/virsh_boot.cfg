- virsh.boot:
    type = virsh_boot
    start_vm = "no"
    readonly = "yes"
    boot_ref = "dev"
    boot_dev = "hd"
    boot_order = 1
    with_loader = "yes"
    with_boot = "yes"
    with_readonly = "yes"
    with_loader_type = "yes"
    test_cmd = "uname -r"
    status_error = "no"
    disk_format = "qcow2"
    driver_type = "qcow2"
    os_version = "EXAMPLE_OS_VERSION"
    variants:
        - by_ovmf:
            boot_type = "ovmf"
            loader = "/usr/share/OVMF/OVMF_CODE.secboot.fd"
            loader_type = "pflash"
            template = "/usr/share/OVMF/OVMF_VARS.fd"
            nvram = "/var/lib/libvirt/qemu/nvram/<VM_NAME>_VARS.fd"
            uefi_iso = "/usr/share/OVMF/UefiShell.iso"
            shell_prompt = "Shell>.*$"
            uefi_custom_codes = "\[\=3h"
            with_nvram = "yes"
            with_nvram_template = "yes"
            secure_boot_mode = "no"
            variants:
                - positive_test:
                    variants:
                        - options:
                            variants:
                                - os_loader:
                                    variants:
                                        - valid_readonly:
                                    variants:
                                        - valid_loader_type:
                            variants:
                                - os_nvram:
                                    variants:
                                        - valid_template:
                                        - no_template:
                                            with_nvram_template = "no"
                                - no_os_nvram:
                                    with_nvram = "no"
                            variants:
                                - boot:
                                    variants:
                                        - boot_dev:
                                        - boot_order:
                                            boot_ref = "order"
                                    variants:
                                        - hd:
                                            boot_dev = "hd"
                                            image_size = "3G"
                                            variants:
                                                - file_disk:
                                                    disk_type = "file"
                                                    device_bus = "sata"
                                                    target_dev = "sda"
                                                - block_disk:
                                                    disk_type = "block"
                                                    source_protocol = "iscsi"
                                                    device_bus = "scsi"
                                                    target_dev = "sda"
                                                    disk_img = "iscsi.qcow2"
                                                - network_disk:
                                                    disk_type = "network"
                                                    device_bus = "virtio"
                                                    target_dev = "vda"
                                                    variants:
                                                        - ceph:
                                                            # Ceph only support disk format="raw"
                                                            disk_format = "raw"
                                                            driver_type = "raw"
                                                            source_protocol = "rbd"
                                                            disk_source_host = "EXAMPLE_HOSTS"
                                                            disk_source_port = "EXAMPLE_PORTS"
                                                            disk_source_name = "EXAMPLE_SOURCE_NAME"
                                                            mon_host = "EXAMPLE_MON_HOST"
                                                            client_name = "EXAMPLE_CLIENT_NAME"
                                                            client_key = "EXAMPLE_CLIENT_KEY"
                                                        - glusterfs:
                                                            source_protocol = "gluster"
                                                            vol_name = "vol_virsh_boot"
                                                            disk_img = "gluster.qcow2"
                                        - cdrom:
                                            boot_dev = "cdrom"
                                            target_dev = "sda"
                                            device_bus = "sata"
                                            driver_type = "raw"
                                            boot_iso_url = "EXAMPLE_BOOT_ISO_URL"
                                            check_prompt = "Install Red Hat Enterprise Linux"
                                - no_boot:
                                    only valid_readonly
                                    only valid_loader_type
                                    only valid_template
                                    with_boot = "no"
                        - secure_boot_enabled:
                            secure_boot_mode = "yes"
                            test_cmd = "dmesg|grep -i secure"
                            uefi_device_bus = "sata"
                            uefi_target_dev = "sda"
                        - invalid_nvram:
                            nvram = "noexist"
                        - boot_order_big_integer:
                            boot_ref = "order"
                            boot_order = 1000000000
                        - two_same_boot_dev:
                            two_same_boot_dev = "yes"
                - negative_test:
                    status_error = "yes"
                    variants:
                        - invalid_loader:
                            loader = "noexist"
                            checkpoint = "No such file or directory"
                        - invalid_loader_type:
                            define_error = "yes"
                            loader_type = "noexist"
                            checkpoint = "error: unknown type value"
                        - invalid_nvram_template:
                            template = "noexist"
                            checkpoint = "error: Failed to open file.+: No such file or directory"
                        - invalid_boot_dev:
                            define_error = "yes"
                            boot_dev = "noexist"
                            checkpoint = "error: unsupported configuration: unknown boot device"
                        - special_boot_order:
                            boot_ref = "order"
                            define_error = "yes"
                            checkpoint = "error: internal error: incorrect boot order.+expecting positive integer"
                            variants:
                                - negative:
                                    boot_order = -1
                                - character:
                                    boot_order = "a"
                                - zero:
                                    boot_order = 0
                        - readonly_no:
                            readonly = "no"
                            checkpoint = "Could not open .+: Permission denied" || "error:.+Block node is read-only"
                        - no_readonly:
                            with_readonly = "no"
                            checkpoint = "Could not open .+: Permission denied" || "error:.+Block node is read-only"
                        - no_loader_type:
                            with_loader_type = "no"
                            checkpoint = "could not load PC BIOS"
                        - non_released_version:
                            non_release_os_url = "EXAMPLE_NON_RELEASED_OS_URL"
                            secure_boot_mode = "yes"
                            uefi_device_bus = "sata"
                            uefi_target_dev = "sda"
                            check_prompt = "error:.*has invalid signature"
        - by_seabios:
            boot_type = "seabios"
            loader = "/usr/share/seabios/bios.bin"
            loader_type = "rom"
            variants:
                - positive_test:
                    variants:
                        - options:
                            variants:
                                - os_loader:
                                    variants:
                                        - valid_readonly:
                                        - no_readonly:
                                            with_readonly = "no"
                                    variants:
                                        - valid_loader_type:
                                        - no_loader_type:
                                            with_loader_type = "no"
                            variants:
                                - boot:
                                    variants:
                                        - boot_dev:
                                        - boot_order:
                                            boot_ref = "order"
                                    variants:
                                        - hd:
                                            boot_dev = "hd"
                                            image_size = "3G"
                                            variants:
                                                - file_disk:
                                                    disk_type = "file"
                                                    device_bus = "ide"
                                                    target_dev = "hda"
                                                - block_disk:
                                                    disk_type = "block"
                                                    source_protocol = "iscsi"
                                                    device_bus = "scsi"
                                                    target_dev = "sda"
                                                - network_disk:
                                                    disk_type = "network"
                                                    device_bus = "virtio"
                                                    target_dev = "vda"
                                                    variants:
                                                        - ceph:
                                                            # Ceph only support disk format="raw"
                                                            disk_format = "raw"
                                                            driver_type = "raw"
                                                            source_protocol = "rbd"
                                                            disk_source_host = "EXAMPLE_HOSTS"
                                                            disk_source_port = "EXAMPLE_PORTS"
                                                            disk_source_name = "EXAMPLE_SOURCE_NAME"
                                                            mon_host = "EXAMPLE_MON_HOST"
                                                            client_name = "EXAMPLE_CLIENT_NAME"
                                                            client_key = "EXAMPLE_CLIENT_KEY"
                                                        - glusterfs:
                                                            source_protocol = "gluster"
                                                            vol_name = "vol_virsh_boot"
                                                            disk_img = "gluster.qcow2"
                                        - cdrom:
                                            boot_dev = "cdrom"
                                            target_dev = "sda"
                                            device_bus = "sata"
                                            driver_type = "raw"
                                            boot_iso_url = "EXAMPLE_BOOT_ISO_URL"
                                            check_prompt = "Booting from DVD/CD..."
                                - no_boot:
                                    only valid_readonly
                                    only valid_loader_type
                                    with_boot = "no"
                        - boot_order_big_integer:
                            boot_ref = "order"
                            boot_order = 1000000000
                        - two_same_boot_dev:
                            two_same_boot_dev = "yes"
                - negative_test:
                    status_error = "yes"
                    variants:
                        - not_existing_loader:
                            loader = "noexist"
                            checkpoint = "error:.+No such file or directory"
                        - not_existing_loader_type:
                            loader_type = "noexist"
                            define_error = "yes"
                            checkpoint = "error: unknown type value"
                        - not_existing_boot_dev:
                            boot_dev = "noexist"
                            define_error = "yes"
                            checkpoint = "error: unsupported configuration: unknown boot device"
                        - special_boot_order:
                            boot_ref = "order"
                            define_error = "yes"
                            checkpoint = "error: internal error: incorrect boot order.+expecting positive integer"
                            variants:
                                - negative:
                                    boot_order = -1
                                - character:
                                    boot_order = "a"
                                - zero:
                                    boot_order = 0
    variants:
        - ma_q35:
            only q35
            ma_type = "q35"
        - ma_i440fx:
            only i440fx
            no by_ovmf
            ma_type = "i440fx"
