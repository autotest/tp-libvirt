- multiple_controller_ppc:
    type = multiple_controller_ppc
    only pseries
    start_vm = no
    qemu_cmd_check = yes
    variants:
        - positive_tests:
            variants:
                - with_define:
                    with_define = "yes"
                    variants:
                        - controller_max:
                            controller_type = pci
                            controller_model = pci-root
                            controller_num = 31
                        - controller_scsi_max:
                            qemu_cmd_check = no
                            controller_type = scsi
                            controller_model = virtio-scsi
                            controller_num = 26
                            with_index = 'no'
                        - controller_without_index:
                            controller_type = pci
                            controller_model = pci-root
                            controller_num = 3
                            with_index = 'no'
                        - controller_with_gap:
                            controller_type = pci
                            controller_model = pci-root
                            special_num = 3
                        - controller_auto_generate:
                            controller_num = -1
                        - controller_device_max:
                            controller_type = usb
                            controller_model = qemu-xhci
                            # pci-root 0 already has 6 pci devices as default,
                            # so we can add 924 devices (31 * 30 - 6)(due to bug 1486997).
                            # Due to some error, decrease to 100
                            device_num = 100
                        - controller_device_with_non-zero_controller_bridge:
                            address = ["02:01.0"]
                            variants:
                                - disk:
                                    device_list = ['disk']
                                - usb:
                                    device_list = ['usb']
                                    controller_type = usb
                                    controller_model = qemu-xhci
                                    controller_num = 1
                                - pci_bridge:
                                    device_list = ['pci-bridge']
                                    controller_type = pci
                                    controller_model = pci-bridge
                                    controller_num = 1
                                - memballoon:
                                    device_list = ['memballoon']
                                # The second NIC could not get ip due to 2 NIC in the same zone
                                # - NIC:
                                #     device_list = ['interface']
                                - serial:
                                    device_list = ['serial']
                                    controller_type = virtio-serial
                                    controller_num = 1
                        - with_numa:
                            numa = "yes"
                            qemu_cmd_check = no
                            controller_type = pci
                            controller_model = pci-root
                            special_num = 1
                            controller_node = "1"
                            # device_list = ['interface']
                - with_coldplug_hotunplug:
                    coldplug = "yes"
                    hotunplug = "yes"
                    variants:
                        - with_same_bus:
                            address = ["02:02.0", "02:03.0", "02:04.0"]
                            device_list = ['disk', 'disk', 'disk']
                        - with_different_bus:
                            address = ["02:02.0", "03:03.0", "04:04.0"]
                            variants:
                                - disk:
                                    device_list = ['disk', 'disk', 'disk']
                                # - NIC:
                                #     device_list = ['interface', 'interface', 'interface']
                                - usb:
                                    prepare_controller = 'yes'
                                    device_list = ['usb', 'usb', 'usb']
                                - mix:
                                    prepare_controller = 'yes'
                                    device_list = ['usb', 'disk', 'disk']
                - with_hotplug_hotunplug:
                    hotplug = "yes"
                    hotunplug = "yes"
                    variants:
                        - mix:
                            prepare_controller = 'yes'
                            controller_type = usb
                            controller_model = qemu-xhci
                            special_num = 3
                            address = ["02:02.0", "03:03.0"]
                            device_list = ['usb', 'disk']
                        - max_slots:
                            prepare_controller = 'yes'
                            controller_type = pci
                            controller_model = pci-root
                            special_num = 2
                            address = ["02:01.0", "02:02.0", "02:03.0", "02:04.0", "02:05.0", "02:06.0", "02:07.0", "02:08.0", "02:09.0", "02:0a.0", "02:0b.0", "02:0c.0", "02:0d.0", "02:0e.0", "02:0f.0", "02:10.0", "02:11.0", "02:12.0", "02:13.0", "02:14.0", "02:15.0", "02:16.0", "02:17.0", "02:18.0", "02:19.0", "02:1a.0", "02:1b.0", "02:1c.0", "02:1d.0", "02:1e.0", "02:1f.0"]
                            device_list = ['disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk']
                        - max_bus:
                            prepare_controller = 'yes'
                            controller_type = pci
                            controller_model = pci-root
                            special_num = 30
                            address = ["01:01.0", "02:02.0", "03:03.0", "04:04.0", "05:05.0", "06:06.0", "07:07.0", "08:08.0", "09:09.0", "0a:0a.0", "0b:0b.0", "0c:0c.0", "0d:0d.0", "0e:0e.0", "0f:0f.0", "10:10.0", "11:11.0", "12:12.0", "13:13.0", "14:14.0", "15:15.0", "16:16.0", "17:17.0", "18:18.0", "19:19.0", "1a:1a.0", "1b:1b.0", "1c:1c.0", "1d:1d.0", "1e:1e.0"]
                            device_list = ['disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk', 'disk']
        - negative_tests:
            status_error = "yes"
            variants:
                - with_define:
                    with_define = "yes"
                    variants:
                        - controller_out_max:
                            controller_type = pci
                            controller_model = pci-root
                            controller_num = 32
                        - controller_with_invalid_target_index_1:
                            controller_type = pci
                            controller_model = pci-root
                            controller_num = 1
                            controller_index = 0
                            target_index = 1
                        - controller_with_invalid_target_index_2:
                            controller_type = pci
                            controller_model = pci-root
                            controller_num = 1
                            controller_index = 1
                            target_index = 0
                        - controller_with_invalid_slot_1:
                            device_list = ['serial']
                            controller_num = 1
                            controller_type = virtio-serial
                            address = ["02:00.0"]
                        - controller_with_invalid_slot_2:
                            device_list = ['serial']
                            controller_num = 1
                            controller_type = virtio-serial
                            address = ["02:32.0"]
