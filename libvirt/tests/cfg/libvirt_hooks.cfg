- libvirt_hooks:
    type = libvirt_hooks
    start_vm = no
    status_error = no
    hook_script = '#! /bin/bash;if [ $1 = "%s" ];then;echo "$0" "$@" >> %s;fi;'
    variants:
        - lxc:
            main_vm = "lxc_test_vm1"
            variants:
                - lxc_t:
                    test_lxc = "yes"
                    hook_file = "/etc/libvirt/hooks/lxc"
                    lxc_xml_file = "../tp-libvirt/libvirt/tests/cfg/lxc.xml"
                    hook_log = "/tmp/hook.log"
                    variants:
                        - exit_0:
                            hook_script = '#! /bin/bash; echo "$0" "$@" >> %s; exit 0;'
                        - exit_1:
                            hook_script = '#! /bin/bash; echo "$0" "$@" >> %s; exit 1;'
                            exit1 = "yes"
        - vm:
            hook_file = "/etc/libvirt/hooks/qemu"
            hook_log = "/tmp/qemu.log"
            variants:
                - start_stop:
                    test_start_stop = "yes"
                - libvirtd_t:
                    test_libvirtd = "yes"
                - save_restore:
                    test_saverestore = "yes"
                    variants:
                        -basic_test:
                        -domainxml_test:
                            basic_test = "no"
                            domainxml_test = "yes"
                            hook_script = "#! /usr/bin/python;import sys;if sys.argv[1] == '%s' and sys.argv[2] == 'restore':;    xml = sys.stdin.read();    xml = xml.replace('%s', '%s');    sys.stdout.write(xml);"
                - managedsave_t:
                    test_managedsave = "yes"
                    variants:
                        - basic_test:
                        - domainxml_test:
                            domainxml_test = "yes"
                            basic_test = "no"
                            hook_script = "#! /usr/bin/python;import sys;if sys.argv[1] == '%s' and sys.argv[2] == 'restore':;    xml = sys.stdin.read();    xml = xml.replace('%s', '%s');    sys.stdout.write(xml);"
                - virsh_attach:
                    test_attach = "yes"
                    qemu_bin = "/usr/libexec/qemu-kvm"
                - daemon_t:
                    test_daemon = "yes"
                    hook_file = "/etc/libvirt/hooks/daemon"
                    hook_log = "/tmp/daemon.log"
                    variants:
                        - exit_0:
                            hook_script = '#! /bin/bash;echo "$0" "$@" >> %s;exit 0;'
                        - exit_1:
                            hook_script = '#! /bin/bash;echo "$0" "$@" >> %s;exit 1;'
                - network_t:
                    test_network = "yes"
                    net_name = "default"
                    hook_file = "/etc/libvirt/hooks/network"
                    hook_log = "/tmp/network.log"
                    daemon_name = "virtnetworkd"
                - error_test:
                    variants:
                        - start_error:
                            start_error = "yes"
                            hook_script = '#! /bin/bash;if [ $1 = "%s" ];then;echo "$0" "$@" >> %s;exit 1;fi;'
                - scale_test:
                    hook_script = "#! /bin/bash; echo 'Hi' > /tmp/hook; sleep 2;"
                    scale_test = "yes"
                    loop_num = 30
                    loop_timeout = 600
