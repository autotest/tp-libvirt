- function_test_xen:
    type = 'function_test_xen'
    vm_type = 'libvirt'
    start_vm = 'no'
    take_regular_screendumps = no
    v2v_timeout = '3600'
    default_output_format = 'qcow2'

    # Xen host info
    only source_xen
    xen_host_user = 'root'
    xen_host_passwd = 'XEN_PASSWORD'
    remote_host = ${xen_hostname}

    # Guest info
    os_type = 'linux'
    main_vm = 'XEN_VM_NAME_V2V_EXAMPLE'
    username = 'root'
    password = 'redhat'
    os_version = 'XEN_VM_OS_VERSION_V2V_EXAMPLE'

    # Standard shell parameters
    remote_shell_client = 'ssh'
    remote_shell_port = 22
    remote_shell_prompt = '^\w:\\.*>\s*$|^\[.*\][\#\$]\s*$'
    status_test_command = 'echo $?'

    # Full types input disks
    variants:
        - output_mode:
            variants:
                - libvirt:
                    only dest_libvirt
                - rhev:
                    only dest_rhev.NFS
    variants:
        - xen_vm_default:
        - multiconsole:
            main_vm = 'MULTICONSOLE_VM_NAME_V2V_EXAMPLE'
        - console_xvc0:
            checkpoint = 'console_xvc0'
            main_vm = 'CONSOLE_XVC0_VM_NAME_V2V_EXAMPLE'
        - xvda_disk:
            checkpoint = 'xvda_disk'
            msg_content = 'virt-v2v: WARNING: /boot/grub.*?/device.map references unknown device /dev/vd.*?\n%virt-v2v: warning: /files/boot/grub/device.map/hd0 references unknown.*?after conversion'
            expect_msg = no
        - xvda_guest:
            msg_content = 'virt-v2v: WARNING: /boot/grub.*?/device.map references unknown device /dev/vd.*?\n%virt-v2v: warning: /files/boot/grub/device.map/hd0 references unknown.*?after conversion'
            expect_msg = no
        - guest_uuid:
            checkpoint = 'guest_uuid'
        - pool_uuid:
            checkpoint = 'pool_uuid'
        - display:
            main_vm = 'DISPLAY_VM_NAME_V2V_EXAMPLE'
            os_version = 'DISPLAY_OS_VERSION_V2V_EXAMPLE'
            variants:
                - vnc:
                    variants:
                        - autoport:
                            checkpoint = 'vnc_autoport'
                        - encrypt:
                            checkpoint = 'vnc_encrypt'
                            vnc_passwd = 'redhat'
                        - encrypt_warning:
                            checkpoint = 'vnc_encrypt_warning'
                            msg_content = 'This guest required a password for connection to its display, but this is not supported by RHV.  Therefore the converted guest.s display will not require a separate password to connect.'
                            expect_msg = yes
                - sdl:
                    os_version = 'rhel6'
                    main_vm = 'SDL_VM_NAME_V2V_EXAMPLE'
                    checkpoint = 'sdl'
        - scsi_disk:
            main_vm = 'SCSI_VM_NAME_V2V_EXAMPLE'
        - ide_disk:
            main_vm = 'IDE_VM_NAME_V2V_EXAMPLE'
            checkpoint = cdrom
        - ssh_banner:
            checkpoint = 'ssh_banner'
        - pv_with_regular_kernel:
            checkpoint = 'pv_with_regular_kernel'
            main_vm = 'VM_NAME_PV_WITH_REGULAR_KERNEL_V2V_EXAMPLE'
        - format_convert:
            checkpoint = 'format_convert'
        - sound:
            checkpoint = 'sound'
            variants:
                - es1370:
                    main_vm = 'VM_NAME_XEN_ES1370_V2V_EXAMPLE'
                - sb16:
                    main_vm = 'VM_NAME_XEN_SB16_V2V_EXAMPLE'
                - pcspk:
                    checkpoint = 'pcspk'
                    main_vm = 'VM_NAME_XEN_PCSPK_V2V_EXAMPLE'
        - with_vdsm:
            checkpoint = vdsm
            extra_pkg = openvswitch,vdsm
            bk_conf = /etc/libvirt/libvirtd.conf,/etc/libvirt/qemu.conf,/etc/sysconfig/libvirtd
            sasl_server_user = root
            sasl_server_passwd = SERVER_PASSWORD_V2V_EXAMPLE
            sasl_user = test
            sasl_pwd = redhat
            only libvirt
        - encryped:
            main_vm = VM_NAME_XEN_ENCRYPED_V2V_EXAMPLE
        - multidisk:
            main_vm = VM_NAME_XEN_MULTIDISK_V2V_EXAMPLE
            checkpoint = multidisk
        - rhel6_2:
            main_vm = VM_NAME_XEN_RHEL62_V2V_EXAMPLE
        - suse:
            variants:
                - sles11sp4:
                    main_vm = VM_NAME_XEN_SLES11SP4_V2V_EXAMPLE
                - sles12sp1:
                    main_vm = VM_NAME_XEN_SLES12SP1_V2V_EXAMPLE
        - windows:
            os_type = 'windows'
            shutdown_command = 'shutdown /s /f /t 0'
            reboot_command = 'shutdown /r /f /t 0'
            status_test_command = 'echo %errorlevel%'
            shell_prompt = '^\w:\\.*>\s*$'
            shell_linesep = '\r\n'
            shell_client = 'nc'
            shell_port = 10022
            file_transfer_client = 'rss'
            file_transfer_port = 10023
            redirs += ' file_transfer'
            guest_port_remote_shell = 10022
            guest_port_file_transfer = 10023
            rtc_base = 'localtime'
            network_query = 'ipconfig /all'
            restart_network = 'ipconfig /renew'
            vm_user = 'Administrator'
            vm_pwd = '123qweP'
            variants:
                - default_install:
                    windows_root = 'WINDOWS_ROOT_V2V_EXAMPLE'
                    os_version = 'WINDOWS_ROOT_OS_VERSION_V2V_EXAMPLE'
                    main_vm = 'WINDOWS_ROOT_VM_NAME_V2V_EXAMPLE'
                - rhev_file:
                    checkpoint = 'rhev_file'
                    os_version = 'OS_VERSION_RHEV_FILE_V2V_EXAMPLE'
                    main_vm = 'RHEV_FILE_VM_NAME_V2V_EXAMPLE'
                - virtio_win:
                    main_vm = 'XEN_VM_NAME_VIRTIO_WIN_V2V_EXAMPLE'
                    os_version = 'OS_VERSION_VIRTIO_WIN_V2V_EXAMPLE'
                    virtio_win_dir = '/usr/share/virtio-win/'
                    virtio_win_env = 'VIRTIO_WIN'
                    checkpoint = 'virtio_win_'
                    variants:
                        - unset:
                            checkpoint += 'unset'
                            missing = 'Red Hat VirtIO SCSI,Red Hat VirtIO Ethernet Adapte'
                        - custom:
                            checkpoint += 'custom'
                        - iso_mount:
                            checkpoint += 'iso_mount'
                        - iso_file:
                            checkpoint += 'iso_file'
                - rhsrvany_md5:
                    checkpoint = rhsrvany_md5
                    val_md5 = 460f8985213cc6ec45e7635aca81cd68
                    val_sha1 = 2bd96e478fc004cd323b5bd754c856641877dac6
                    cmd_sha1 = 'certutil -hashfile "C:\Program Files\Guestfs\Firstboot\rhsrvany.exe"'
                    main_vm = XEN_VM_NAME_RHSRVANYMD5_V2V_EXAMPLE
                    os_version = OS_VERSION_RHSRVANYMD5_V2V_EXAMPLE
    variants:
        - positive_test:
            status_error = 'no'
            no xen_vm_default
            variants:
                - libvirt:
                    only pool_uuid, windows.rhev_file, display, sound, virtio_win, with_vdsm
                    only output_mode.libvirt
                    no encrypt_warning
                - rhev:
                    no pool_uuid, windows.rhev_file, display.vnc.encrypt, sound, virtio_win
                    only output_mode.rhev
        - negative_test:
            status_error = 'yes'
            only xen_vm_default
            only output_mode.libvirt
            variants:
                - libguestfs_backend_empty:
                    checkpoint = 'libguestfs_backend_empty'
                    msg_content = 'libguestfs: error: invalid backend:'
                    expect_msg = no
                - libguestfs_backend_test:
                    checkpoint = 'libguestfs_backend_test'
                    msg_content = 'export LIBGUESTFS_BACKEND=direct%libguestfs: error: invalid backend: .*?'
                    expect_msg = yes
                - same_name_guest:
                    checkpoint = 'same_name'
                    new_vm_name = 'avocado-vt-vm1'
                    msg_content = "virt-v2v: error: a libvirt domain called .* already exists on the target"
                    expect_msg = yes
                - no_passwordless_SSH:
                    checkpoint = 'no_passwordless_SSH'
                    msg_content = 'virt-v2v: error: ssh-agent authentication has not been set up'
                    expect_msg = yes
                - xml_without_image:
                    checkpoint = 'xml_without_image'
                    msg_content = "Could not open '.*?': No such file or directory"
                    expect_msg = yes
                - pv_no_regular_kernel:
                    main_vm = 'VM_NAME_PV_NO_REGULAR_KERNEL_V2V_EXAMPLE'
                    msg_content = 'virt-v2v: error: only Xen kernels are installed in this guest'
                    expect_msg = yes
                - block_disk:
                    main_vm = VM_NAME_XEN_BLOCK_DISK_V2V_EXAMPLE
                    msg_content = 'virt-v2v: error: guest disk .*? appears to be zero bytes in size'
                    expect_msg = yes
