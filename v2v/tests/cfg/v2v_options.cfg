- v2v_options:
    type = "v2v_options"
    vm_type = "libvirt"
    start_vm = "no"
    take_regular_screendumps = no
    xen_hostname = XEN_HOSTNAME_V2V_EXAMPLE
    vpx60_hostname = VPX_60_HOSTNAME_V2V_EXAMPLE
    vpx60_dc = VPX_60_DC_V2V_EXAMPLE
    esx60_hostname = ESX_60_HOSTNAME_V2V_EXAMPLE
    ovirt_engine_url = "https://OVIRT_ENGINE_URL_V2V_EXAMPLE/api"
    ovirt_engine_user = "OVIRT_ENGINE_USER_V2V_EXAMPLE"
    ovirt_engine_password = "OVIRT_ENGINE_PASSWORD_V2V_EXAMPLE"
    remote_shell_client = "ssh"
    remote_shell_port = 22
    remote_shell_prompt = "^\w:\\.*>\s*$|^\[.*\][\#\$]\s*$"
    status_test_command = "echo $?"
    pool_type = "dir"
    pool_name = "v2v_dir"
    pool_target = "v2v_dir_pool"
    nfs_storage = NFS_EXPORT_STORAGE_V2V_EXAMPLE
    mount_point = "/mnt_v2v"
    output_storage = ${pool_name}
    output_network = "default"
    output_bridge = "virbr0"
    os_type = "linux"
    # Using NFS storage here
    export_name = "NFS_EXPORT_NAME_V2V_EXAMPLE"
    storage_name = "NFS_STORAGE_NAME_V2V_EXAMPLE"
    cluster_name = "NFS_CLUSTER_NAME_V2V_EXAMPLE"
    v2v_timeout = "1200"
    # Full types input disks
    variants:
        - output_mode:
            variants:
                - glance:
                    # No test yet
                    output_mode = "glance"
                - libvirt:
                    output_mode = "libvirt"
                    target = "libvirt"
                - local:
                    output_mode = "local"
                    output_storage = "/tmp"
                - null:
                    # No test yet
                    output_mode = "null"
                - qemu:
                    # No test yet
                    output_mode = "qemu"
                - rhev:
                    output_mode = "rhev"
                    output_network = "OVIRT_NODE_NETWORK_V2V_EXAMPLE"
                    output_bridge = "OVIRT_NODE_BRIDGE_V2V_EXAMPLE"
                    target = "ovirt"
                    output_storage = ${nfs_storage}
                    # Libvirt SASL authencation(under VDSM control)
                    sasl_user = "v2v_tester@ovirt"
                    sasl_pwd = "v2v_tester_pwd"
                    remote_ip = "NFS_OVIRT_NODE_ADDRESS_V2V_EXAMPLE"
                    remote_preprocess = "yes"
                    remote_node_address = ${remote_ip}
                    remote_node_user = "root"
                    remote_node_password = "redhat"
                    remote_user = ${remote_node_user}
                    remote_pwd = ${remote_node_password}
                - vdsm:
                    output_mode = "vdsm"
                - none:
    variants:
        - input_mode:
            variants:
                - disk:
                    input_mode = "disk"
                    variants:
                        # Explicit 'sparse' and 'preallocated' here for
                        # parameters replacement
                        # This will cover option '-if'
                        - raw_format:
                            input_format = "raw"
                            variants:
                                - sparse:
                                    input_allo_mode = "sparse"
                                    main_vm = "VM_NAME_RAW_SPARSE_V2V_EXAMPLE"
                                    input_disk_image = "/DISK_IMAGE_PATH_V2V_EXAMPLE/${main_vm}.img"
                                - preallocated:
                                    input_allo_mode = "preallocated"
                                    main_vm = "VM_NAME_RAW_PREALLOCATED_V2V_EXAMPLE"
                                    input_disk_image = "/DISK_IMAGE_PATH_V2V_EXAMPLE/${main_vm}.img"
                        - qcow2_format:
                            input_format = "qcow2"
                            variants:
                                - sparse:
                                    input_allo_mode = "sparse"
                                    main_vm = "VM_NAME_QCOW2_SPARSE_V2V_EXAMPLE"
                                    input_disk_image = "/DISK_IMAGE_PATH_V2V_EXAMPLE/${main_vm}.img"
                                - preallocated:
                                    input_allo_mode = "preallocated"
                                    main_vm = "VM_NAME_QCOW2_PREALLOCATED_V2V_EXAMPLE"
                                    input_disk_image = "/DISK_IMAGE_PATH_V2V_EXAMPLE/${main_vm}.img"
                - libvirt:
                    input_mode = "libvirt"
                    variants:
                        - kvm:
                            # All VM defined on the test machine
                            hypervisor = "kvm"
                            variants:
                                - default:
                        - xen:
                            hypervisor = "xen"
                            remote_host = ${xen_hostname}
                            xen_host_user = "root"
                            xen_host_passwd = "redhat"
                            main_vm = "VM_NAME_XEN_DEFAULT_V2V_EXAMPLE"
                            default_output_format = "qcow2"
                        - esx:
                            hypervisor = "esx"
                            variants:
                                - esx_60:
                                    remote_host = ${vpx60_hostname}
                                    vpx_dc = ${vpx60_dc}
                                    esx_ip = ${esx60_hostname}
                                    vpx_passwd = "VPX_PASSWORD_V2V_EXAMPLE"
                            variants:
                                - default:
                                    only esx_60
                                    main_vm = "VM_NAME_ESX_DEFAULT_V2V_EXAMPLE"
                - libvirtxml:
                    # No test yet
                    input_mode = "libvirtxml"
                - ova:
                    # No test yet
                    input_mode = "ova"
                - none:
    variants:
        - positive_test:
            status_error = "no"
            variants:
                - option_version:
                    only input_mode.none
                    only output_mode.none
                    v2v_options = "--version"
                - option_vmtype:
                    # Set vmtype (for RHEV)
                    only input_mode.libvirt.xen
                    only output_mode.rhev
                    variants:
                        - desktop:
                            vmtype = "desktop"
                            v2v_options = "--vmtype ${vmtype}"
                        - server:
                            vmtype = "server"
                            v2v_options = "--vmtype ${vmtype}"
                - option_oa:
                    # Set output allocation mode
                    only input_mode.libvirt.xen
                    only output_mode.libvirt
                    variants:
                        - sparse:
                            oa_mode = "sparse"
                            v2v_options = "-oa ${oa_mode}"
                        - preallocated:
                            oa_mode = "preallocated"
                            v2v_options = "-oa ${oa_mode}"
                - option_of:
                    only output_mode.libvirt
                    variants:
                        - from_disk:
                            # Set output format
                            only input_mode.disk
                            variants:
                                - raw_format:
                                    output_format = "raw"
                                - qcow2_format:
                                    output_format = "qcow2"
                            variants:
                                - sparse:
                                    output_allo_mode = "sparse"
                                - preallocated:
                                    output_allo_mode = "preallocated"
                        - from_guest:
                            only input_mode.libvirt.xen
                            variants:
                                - raw_format:
                                    default_output_format = "raw"
                                - qcow2_format:
                                    default_output_format = "qcow2"
                - option_on:
                    # Rename guest when converting
                    only input_mode.libvirt.xen
                    only output_mode.libvirt
                    new_vm_name = "${main_vm}-new"
                    v2v_options = "-on ${new_vm_name}"
                - option_no-copy:
                    # Don't copy the disk, just write the metadata
                    only input_mode.libvirt.xen
                    only output_mode.local
                    v2v_options = "--no-copy"
                - option_ic:
                    # input libvirt URI
                    only input_mode.libvirt.xen,input_mode.libvirt.esx
                    only output_mode.libvirt
                - option_oc:
                    # output libvirt URI
                    only input_mode.disk.qcow2_format.sparse
                    only output_mode.libvirt
                    variants:
                        - privileged:
                            oc_uri = "qemu:///system"
                            v2v_options = "-oc ${oc_uri}"
                        - unprivileged:
                            oc_uri = "qemu:///session"
                            v2v_options = "-oc ${oc_uri}"
                            unprivileged_user = "USER._V2V_EXAMPLE"
                - option_vdsm:
                    # Set the output method to vdsm
                    # And create a fake storage domain to test BZ#1176591
                    only input_mode.libvirt.kvm.default
                    only output_mode.vdsm
                    export_domain_uuid = "EXPORT_DOMAIN_UUDI_V2V_EXAMPLE"
                    fake_domain_uuid = "12345678-1234-1234-1234-123456789000"
                    vdsm_image_uuid = "12345678-1234-1234-1234-123456789001"
                    vdsm_vol_uuid = "12345678-1234-1234-1234-123456789002"
                    vdsm_vm_uuid = "12345678-1234-1234-1234-123456789003"
                    output_storage = ${mount_point}/${export_domain_uuid}
                    vdsm_ovf_output = "${output_storage}/master/vms/${vdsm_vm_uuid}"
                - quiet:
                    only input_mode.libvirt.xen
                    only output_mode.rhev, output_mode.libvirt
                    checkpoint = 'quiet'
                - rhev_snapshot_id:
                    only input_mode.libvirt.kvm.default
                    only output_mode.rhev
        - negative_test:
            status_error = "yes"
            variants:
                - conflict_options:
                    only input_mode.none
                    only output_mode.none
                    checkpoint = 'conflict_options'
                    variants:
                        - 2_i:
                            v2v_options = "-i libvirt -i disk"
                        - 2_o:
                            v2v_options = "-i disk -o local -o local"
                        - 2_of:
                            v2v_options = "-i libvirt -of abc -of abc"
                        - 2_ic:
                            v2v_options = "-i libvirt -ic abc -ic abc"
                        - 2_on:
                            v2v_options = "-i libvirt -on abc -on abc"
                        - 2_if:
                            v2v_options = "-i libvirt -if abc -if abc"
                        - 2_oc:
                            v2v_options = "-i libvirt -oc abc -oc abc"
                        - 2_os:
                            v2v_options = "-i libvirt -os abc -os abc"
                        - 2_password-file:
                            v2v_options = '-i libvirt --password-file abc --password-file abc'
                        - 2_vdsm-vm-uuid:
                            v2v_options = '-i libvirt --vdsm-vm-uuid abc --vdsm-vm-uuid abc'
                        - 2_vdsm-ovf-output:
                            v2v_options = '-i libvirt --vdsm-ovf-output abc --vdsm-ovf-output abc'
                        - 2_vmtype:
                            v2v_options = '-i libvirt --vmtype abc --vmtype abc'
                - xen_no_output_format:
                    only input_mode.libvirt.xen
                    only output_mode.libvirt
                    checkpoint = 'xen_no_output_format'
                - length_of_error:
                    only input_mode.none
                    only output_mode.none
                    checkpoint = 'length_of_error'
                    variants:
                        - with_domain:
                            v2v_options = '-ic sdll://sdfl test'
                        - without_domain:
                            v2v_options = '-ic sdll://sdfl'
