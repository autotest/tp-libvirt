- convert_from_file:
    type = 'convert_from_file'
    vm_type = 'libvirt'
    start_vm = 'no'
    take_regular_screendumps = no
    v2v_timeout = '1200'

    # Regular kvm guest parameters
    os_type = 'linux'
    input_mode = 'libvirt'
    hypervisor = 'kvm'
    username = 'root'
    password = 'redhat'

    # RHEVM parameters
    ovirt_engine_url = 'https://OVIRT_ENGINE_URL_V2V_EXAMPLE/api'
    ovirt_engine_user = 'OVIRT_ENGINE_USER_V2V_EXAMPLE'
    ovirt_engine_password = 'OVIRT_ENGINE_PASSWORD_V2V_EXAMPLE'

    # Using NFS storage here
    export_name = 'NFS_EXPORT_NAME_V2V_EXAMPLE'
    storage_name = 'NFS_STORAGE_NAME_V2V_EXAMPLE'
    cluster_name = 'NFS_CLUSTER_NAME_V2V_EXAMPLE'
    nfs_storage = 'NFS_EXPORT_STORAGE_V2V_EXAMPLE'

    # Shell paramters
    remote_shell_client = 'ssh'
    remote_shell_port = 22
    remote_shell_prompt = '^\w:\\.*>\s*$|^\[.*\][\#\$]\s*$'
    status_test_command = 'echo $?'

    variants:
        - output_mode:
            variants:
                - libvirt:
                    output_mode = 'libvirt'
                    target = 'libvirt'
                    network = 'default'
                    bridge = 'virbr0'
                    pool_type = 'dir'
                    pool_name = 'v2v_dir'
                    pool_target = 'v2v_dir_pool'
                    output_storage = ${pool_name}
                - rhev:
                    output_mode = 'rhev'
                    network = 'OVIRT_NODE_NETWORK_V2V_EXAMPLE'
                    bridge = 'OVIRT_NODE_BRIDGE_V2V_EXAMPLE'
                    target = 'ovirt'
                    output_storage = ${nfs_storage}
                    # Libvirt SASL authencation(under VDSM control)
                    sasl_user = 'v2v_tester@ovirt'
                    sasl_pwd = 'v2v_tester_pwd'
                    remote_ip = 'NFS_OVIRT_NODE_ADDRESS_V2V_EXAMPLE'
                    remote_preprocess = 'yes'
                    remote_node_address = ${remote_ip}
                    remote_node_user = 'root'
                    remote_node_password = 'redhat'
                    remote_user = ${remote_node_user}
                    remote_pwd = ${remote_node_password}
    variants:
        - input_mode:
            variants:
                - disk:
                    input_mode = "disk"
                - libvirtxml:
                    input_mode = "libvirtxml"
                - ova:
                    input_mode = "ova"
                    ova_dir = 'OVA_DIR_V2V_EXAMPLE'
                    variants:
                        - normal:
                            new_name = 'OVA_VM_NAME_V2V_EXAMPLE'
                            only output_mode.libvirt,output_mode.rhev
                            variants:
                                - ova_tar:
                                    input_file = '${ova_dir}/OVA_TAR_FILE_V2V_EXAMPLE'
                                - ova_zip:
                                    input_file = '${ova_dir}/OVA_ZIP_FILE_V2V_EXAMPLE'
                                - ova_relative_path:
                                    input_file = 'OVA_RELATIVE_PATH_V2V_EXAMPLE'
                                    checkpoint = 'ova_relative_path'
                                - ova_abs_path:
                                    input_file = '${ova_dir}/OVA_RELATIVE_PATH_V2V_EXAMPLE'
                                - ova_vmdk_gz:
                                    input_file = '${ova_dir}/OVA_VMDKGZ_ZIP_FILE_V2V_EXAMPLE'
                                - ova_vmdk_gz_tar:
                                    input_file = '${ova_dir}/OVA_VMDKGZ_TAR_FILE_V2V_EXAMPLE'
                        - special:
                            only output_mode.libvirt
                            variants:
                                - ova_default:
                                    checkpoint = "ova_default"
                                    input_file = "${ova_dir}/OVA_FILE_BUG_1164853_V2V_EXAMPLE"
                                    new_name = "VM_NAME_BUG_1164853_V2V_EXAMPLE"
                                - parent_ctrl:
                                    checkpoint = "parent_ctrl"
                                    input_file = "${ova_dir}/OVA_FILE_BUG_1167302_V2V_EXAMPLE"
                                    new_name = "VM_NAME_BUG_1167302_V2V_EXAMPLE"
                                - win2008r2_ostk:
                                    checkpoint = "win2008r2_ostk"
                                    input_file = "${ova_dir}/OVA_FILE_BUG_1161333_V2V_EXAMPLE"
                                    new_name = "VM_NAME_BUG_1161333_V2V_EXAMPLE"
                                    image_to_match = "BSOD_IMAGE_V2V_EXAMPLE"
                                    v2v_timeout = 1800
    variants:
        - positive_test:
            status_error = 'no'
            variants:
                - linux:
                    only ova
                    no win2008r2_ostk
                - windows:
                    os_type = 'windows'
                    shutdown_command = 'shutdown /s /f /t 0'
                    reboot_command = 'shutdown /r /f /t 0'
                    status_test_command = 'echo %errorlevel%'
                    shell_prompt = '^\w:\\.*>\s*$'
                    shell_linesep = '\r\n'
                    shell_client = 'nc'
                    shell_port = 10022
                    file_transfer_client = 'rss'
                    file_transfer_port = 10023
                    redirs += ' file_transfer'
                    guest_port_remote_shell = 10022
                    guest_port_file_transfer = 10023
                    rtc_base = 'localtime'
                    network_query = 'ipconfig /all'
                    restart_network = 'ipconfig /renew'
                    vm_user = 'Administrator'
                    vm_pwd = '123qweP'
                    only win2008r2_ostk
