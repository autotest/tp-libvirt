- function_test_esx:
    type = 'function_test_esx'
    vm_type = 'libvirt'
    start_vm = 'no'
    take_regular_screendumps = no
    v2v_timeout = '7200'
    default_output_format = 'qcow2'
    vpx_passwd_file = "/tmp/v2v_vpx_passwd"
    v2v_debug = on

    # Guest info
    main_vm = VM_NAME_ESX_DEFAULT_V2V_EXAMPLE
    os_type = 'linux'
    username = 'root'
    password = GENERAL_GUEST_PASSWORD

    # Standard shell parameters
    remote_shell_client = 'ssh'
    remote_shell_port = 22
    remote_shell_prompt = '^\w:\\.*>\s*$|^\[.*\][\#\$]\s*$'
    status_test_command = 'echo $?'

    # All guests are in esx server, variant 'vms' is useless.
    vms = ''

    variants:
        - it_vddk:
            only source_esx
            input_transport = 'vddk'
            # Set the real vddk_libdir/thumbprint or keep it commented
            #vddk_libdir = VDDK_LIB_DIR_EXAMPLE
            #vddk_thumbprint = VDDK_THUMBPRINT_EXAMPLE
            variants:
                - vpx_uri:
                - esx_uri:
                    src_uri_type = 'esx'
        - it_default:
    variants:
        - json:
            only dest_json
            only uefi.win2019,device_map,without_ip_option,env_leak,block_dev
            variants:
                - default:
                  no block_dev
                - pattern:
                    json_disk_pattern = '%%{GuestName}-%{GuestName}-%{DiskDeviceName}-%{DiskNo}'
        - local:
            only dest_local
            only uefi.win2019,device_map,without_ip_option,env_leak,block_dev,cve_2022_2211
        - qemu:
            only dest_qemu
            only uefi.win2019
        - libvirt:
            only dest_libvirt
            only uefi,GPO_AV,special_name,suse,local_storage,unset,lvm_multiple_disks,genid_xml
        - rhev:
            only dest_rhev.NFS
            variants:
                - rhv_upload:
                    output_method = "rhv_upload"
                    rhv_upload_passwd = ${ovirt_engine_password}
                    rhv_upload_passwd_file = "/tmp/rhv_upload_passwd_file"
                    rhv_upload_opts = "-oc ${ovirt_engine_url} -op ${rhv_upload_passwd_file} -oo rhv-cafile=${local_ca_file_path} -oo rhv-cluster=${cluster_name}"
                - rhv:
                    output_method = "rhev"
    variants:
        - esx_60:
            only source_esx.esx_60
        - esx_65:
            only source_esx.esx_65
        - esx_67:
            only source_esx.esx_67
        - esx_70:
            only source_esx.esx_70
        - esx_80:
            only source_esx.esx_80
    variants:
        - windows:
            os_type = 'windows'
            shutdown_command = 'shutdown /s /f /t 0'
            reboot_command = 'shutdown /r /f /t 0'
            status_test_command = 'echo %errorlevel%'
            shell_prompt = '^\w:\\.*>\s*$'
            shell_linesep = '\r\n'
            shell_client = 'nc'
            shell_port = 10022
            file_transfer_client = 'rss'
            file_transfer_port = 10023
            redirs += ' file_transfer'
            guest_port_remote_shell = 10022
            guest_port_file_transfer = 10023
            rtc_base = 'localtime'
            network_query = 'ipconfig /all'
            restart_network = 'ipconfig /renew'
            vm_user = 'Administrator'
            vm_pwd = DEFAULT_WIN_VM_PASSWORD
            variants:
                - program_files_2:
                    only esx_67
                    os_version = 'PROGRAM_FILES_2_OS_VERSION_V2V_EXAMPLE'
                    main_vm = 'PROGRAM_FILES_2_VM_NAME_V2V_EXAMPLE'
                    expect_msg = 'no'
                    msg_content = '.*case_sensitive_path: v2v: no file or directory.*'
                - rhev_file:
                    only esx_67
                    no libvirt
                    checkpoint = 'rhev_file'
                    os_version = OS_VERSION_RHEV_FILE_V2V_EXAMPLE
                    main_vm = RHEV_FILE_VM_NAME_V2V_EXAMPLE
                    expect_msg = 'no'
                    msg_content = 'virt-v2v: warning: /usr/share/virt-tools/pnp_wait.exe is missing.*?Firstboot scripts may conflict with PnP'
                - uefi:
                    boottype = 3
                    variants:
                        - win2019:
                            only esx_67
                            main_vm = VM_NAME_ESX_UEFI_WINDOWS_V2V_EXAMPLE
                            os_version = "win2019"
                            checkpoint = 'fstrim_warning'
                            msg_content = 'virt-v2v: warning: fstrim on guest filesystem /dev/.*? failed.  Usually'
                            expect_msg = yes
                - schtask:
                    only esx_70
                    checkpoint = "ogac"
                    virtio_win_path = "/usr/share/virtio-win/"
                    os_version = VM_VERSION_WIN_SCHTASKS_V2V_EXAMPLE
                    main_vm = VM_NAME_WIN_SCHTASKS_V2V_EXAMPLE
                - OGAC:
                    only esx_67
                    checkpoint = "ogac"
                    virtio_win_path = EXPORT_VIRTIO_WIN_PATH_V2V_EXAMPLE
                    variants:
                        - win2008r2:
                            os_version = "win2008r2"
                            main_vm = VM_NAME_WIN2008R2_V2V_EXAMPLE
                        - win8:
                            os_version = "win8"
                            main_vm = VM_NAME_WIN8_V2V_EXAMPLE
                        - win8_1:
                            os_version = "win8.1"
                            main_vm = VM_NAME_WIN81_V2V_EXAMPLE
                        - win2012:
                            os_version = "win2012"
                            main_vm = VM_NAME_WIN2012_V2V_EXAMPLE
                        - win2012r2:
                            os_version = "win2012r2"
                            main_vm = VM_NAME_WIN2012R2_V2V_EXAMPLE
                        - win10:
                            os_version = "win10"
                            main_vm = VM_NAME_WIN10_V2V_EXAMPLE
                        - win2016:
                            main_vm = VM_NAME_WIN2016_V2V_EXAMPLE
                            os_version = "win2016"
                        - win2019:
                            main_vm = VM_NAME_WIN2019_V2V_EXAMPLE
                            os_version = "win2019"
                - virtio_win:
                    only esx_67
                    main_vm = 'ESX_VM_NAME_VIRTIO_WIN_V2V_EXAMPLE'
                    os_version = 'OS_VERSION_VIRTIO_WIN_V2V_EXAMPLE'
                    virtio_win_dir = '/usr/share/virtio-win/'
                    virtio_win_env = 'VIRTIO_WIN'
                    checkpoint = 'virtio_win_'
                    variants:
                        - unset:
                            checkpoint += 'unset'
                            missing = 'Red Hat VirtIO SCSI,Red Hat VirtIO Ethernet Adapte'
                            only dest_libvirt
                        - custom:
                            checkpoint += 'custom'
                        - iso_mount:
                            checkpoint += 'iso_mount'
                        - iso_file:
                            checkpoint += 'iso_file'
                - virtio_iso_blk:
                    only esx_67
                    checkpoint = "virtio_iso_blk"
                    virtio_win_path = '/usr/share/virtio-win/virtio-win.iso'
                    main_vm = VM_NAME_WIN2019_V2V_EXAMPLE
                    os_version = "win2019"
                - mac_ip:
                    checkpoint = 'mac_ip'
                    variants:
                        - 1_dhcp:
                            only esx_67
                            main_vm = VM_NAME_WIN_1_DHCP_IP_V2V_EXAMPLE
                            v2v_opts = VM_NAME_WIN_1_DHCP_IP_MAC_CONF_V2V_EXAMPLE
                        - 1_static:
                            only esx_65
                            main_vm = VM_NAME_WIN_1_STATIC_IP_V2V_EXAMPLE
                            v2v_opts = VM_NAME_WIN_1_STATIC_IP_MAC_CONF_V2V_EXAMPLE
                        - 3_dhcp:
                            only esx_70
                            main_vm = VM_NAME_WIN_3_DHCP_IP_V2V_EXAMPLE
                            v2v_opts = VM_NAME_WIN_3_DHCP_IP_MAC_CONF_V2V_EXAMPLE
                - vmware_tools:
                    only esx_70
                    checkpoint = 'vmware_tools'
                    main_vm = VM_NAME_WIN_VMWARE_TOOLS_V2V_EXAMPLE
                - rhsrvany_md5:
                    only esx_67
                    checkpoint = 'rhsrvany_checksum'
                    main_vm = VM_NAME_WIN2019_V2V_EXAMPLE
                    os_version = 'win2019'
                - external_poweroff:
                    only esx_67
                    only negative_test
                    main_vm = VM_NAME_WIN_EXTERNAL_POWEROFF_V2V_EXAMPLE
                    msg_content = "virt-v2v: error: filesystem was mounted read-only, even though we asked for it to be mounted read-write."
                    expect_msg = yes
                - genid_xml:
                    only dest_libvirt
                    only esx_70
                    version_requried = "[libvirt-7.6.0-2,)"
                    checkpoint = 'genid_xml'
                    main_vm = VM_NAME_ESX70_GENID_WIN2019_V2V_EXAMPLE
                    os_version = "win2019"
        - with_cdrom:
            only esx_70
            main_vm = 'VM_NAME_ESX_CDROM_V2V_EXAMPLE'
            checkpoint = 'cdrom'
        - vddk_errors:
            only esx_70
            main_vm = 'VM_NAME_ESX70_RHEL8_V2V_EXAMPLE'
            fqdn_record = 'VCENTER_HOST_IP_RECORD'
            checkpoint = 'vddk_error'
            msg_content = "VDDK_PhoneHome"
            expect_msg = no
        - vddk_errors_41_disks:
            only negative_test
            only esx_70
            main_vm = 'VM_NAME_ESX70_41DISKS_V2V_EXAMPLE'
            fqdn_record = 'VCENTER_HOST_IP_RECORD'
            checkpoint = 'vddk_error'
            msg_content_no = "VDDK_PhoneHome"
            msg_content_yes = "virt-v2v: error: this output module doesn't support copying more than 23 disks"
        - migrated_vm:
            only esx_67
            main_vm = 'VM_NAME_ESX_MIGRATED_V2V_EXAMPLE'
            libguestfs_backend = 'direct'
        - local_storage:
            only esx_70
            main_vm = "VM_NAME_ESX_LOCALSTORAGE_V2V_EXAMPLE"
        - multiple_disks:
            only esx_70
            main_vm = 'VM_NAME_ESX_MULDISKS_V2V_EXAMPLE'
        - multiple_cpus:
            only esx_70
            main_vm = 'VM_NAME_ESX_MULCPUS_V2V_EXAMPLE'
        - special_name:
            only esx_70
            #rhv env does not allowed guest to have special characters
            only libvirt
            main_vm = "VM_NAME_ESX_SPECIALNAME_V2V_EXAMPLE"
        - cloned_vm:
            only esx_70
            boottype = 3
            main_vm = 'VM_NAME_ESX_CLONED_V2V_EXAMPLE'
        - esx_template:
            only esx_70
            boottype = 3
            main_vm = 'VM_NAME_ESX_TEMPLATE_V2V_EXAMPLE'
        - esx_snapshot:
            only esx_65
            checkpoint = snapshot
            main_vm = VM_NAME_ESX_SNAPSHOT_V2V_EXAMPLE
            removed_file = ESX_REMOVED_FILE_V2V_EXAMPLE
        - uefi:
            boottype = 3
            version_required = "[libguestfs-1.40,)"
            variants:
                - ovmf:
                    variants:
                        - rhel7:
                            only esx_67
                            main_vm = VM_NAME_ESX_UEFI_RHEL7_V2V_EXAMPLE
        - raid:
            variants:
                -  bios:
                    only esx_60
                    main_vm = VM_NAME_ESX_RAID_V2V_EXAMPLE
                -  uefi:
                    boottype = 3
                    version_required = "[libguestfs-1.40,)"
                    only source_esx.esx_67
                    main_vm = VM_NAME_ESX_UEFI_RAID_V2V_EXAMPLE
        - iscsi_storage:
            only esx_70
            main_vm = "VM_NAME_ISCSI_STORAGE_V2V_EXAMPLE"
        - GPO_AV:
            only esx_60
            main_vm = 'VM_NAME_GPO_AV_V2V_EXAMPLE'
            checkpoint = 'GPO_AV'
            msg_content = 'virt-v2v: warning: this guest has Windows Group Policy Objects%virt-v2v: warning: this guest has Anti-Virus \(AV\) software'
            expect_msg = yes
            skip_vm_check = yes
            skip_reason = 'guest version is too old'
        - AV_WIN7:
            only esx_67
            main_vm = 'VM_NAME_AV_WIN7_V2V_EXAMPLE'
            msg_content = 'virt-v2v: warning: this guest has Anti-Virus \(AV\) software'
            expect_msg = yes
            skip_vm_check = yes
            skip_reason = 'guest version is too old'
        - vmtools:
            variants:
                - pkgs:
                    only esx_70
                    main_vm = VM_NAME_VMTOOLS_V2V_EXAMPLE
                    checkpoint = vmtools
                    removed_pkgs = vmware-tools-libraries-nox,vmware-tools-foundation,vmware-tools-libraries-x
                - service:
                    only esx_60
                    main_vm = VM_NAME_VMTOOLS_SERVICE_V2V_EXAMPLE
                    checkpoint = "vmtools,service
                    service_name = vmware-tools
        - modprobe:
            only esx_60
            main_vm = VM_NAME_RHEL5_V2V_EXAMPLE
            enable_legacy_policy = yes
            checkpoint = modprobe
            cfg_content = 'alias eth0 virtio_net'
        - passthru:
            only esx_70
            main_vm = VM_NAME_DEVICE_PASSTHRU_V2V_EXAMPLE
        - empty_cdrom:
            only esx_60
            main_vm = VM_NAME_EMPTY_CDROM_V2V_EXAMPLE
            checkpoint = empty_cdrom
            skip_vm_check = yes
            skip_reason = "No vm is created in this case"
        - option_root:
            main_vm = VM_NAME_MULTIPLE_LINUX_V2V_EXAMPLE
            checkpoint = root
            v2v_timeout = '7200'
            interaction_run = 'yes'
            variants:
                - ask:
                    only esx_70
                    main_vm = VM_NAME_ESX70_MULTIPLE_LINUX_V2V_EXAMPLE
                    root_option = ask
                    choice = 2
                    msg_content = 'virt-v2v: warning: fstrim on guest filesystem'
                    expect_msg = no
                - first:
                    only esx_67
                    root_option = first
                    skip_vm_check = yes
                    skip_reason = "Can't boot into first os  without selecting by user during booting after v2v conversion"
                - single:
                    only esx_67
                    root_option = single
                    only negative_test
                - dev_sdx:
                    only esx_67
                    root_option = '/dev/sda1'
                    skip_vm_check = yes
                    skip_reason = "/dev/sda1 belongs to the first OS which can't boot into without selecting by user during booting after v2v conversion"
                - dev_vglv:
                    only esx_67
                    root_option = '/dev/rhel/root'
            checkpoint += ,${root_option}
        - device_map:
            only esx_67
            checkpoint = device_map
            main_vm = VM_NAME_ESX_RHEL7_V2V_EXAMPLE
            device_map_path = /boot/grub2/device.map
        - fstab_comma:
            only esx_65
            checkpoint = fstab_comma
            main_vm = VM_NAME_ESX_FSTAB_SEPBY_COMMA
            msg_content = 'virt-v2v: warning: mount: mount exited with status 32: mount:.*? already mounted .*?\(ignored\)'
            expect_msg = yes
        - with_proxy:
            only esx_60
            no libvirt
            main_vm = VM_NAME_ESX_WITH_PROXY
            checkpoint = with_proxy
            esx_http_proxy = HTTP_PROXY_V2V_EXAMPLE
            esx_https_proxy = HTTPS_PROXY_V2V_EXAMPLE
        - usr_partition:
            only esx_70
            main_vm = VM_NAME_USR_PARTITION_V2V_EXAMPLE
        - dir_permission:
            only esx_70
            main_vm = VM_NAME_ESX70_RHEL9_V2V_EXAMPLE
            version_required = "[virt-v2v-1.45.99-2,)"
            msg_content = 'setting owner of .*? to 107:root'
            expect_msg = yes
            v2v_debug = force_on
        - lvm_multiple_disks:
            only esx_65
            only libvirt
            main_vm = VM_NAME_LVM_MULTIPLE_DISKS_V2V_EXAMPLE
        - resume_rhel7:
            only esx_65
            os_version = OS_VERSION_RESUME_RHEL7_V2V_EXAMPLE
            checkpoint = resume_swap
            main_vm = VM_NAME_RESUME_RHEL7_V2V_EXAMPLE
        - resume_rhel6:
            only esx_67
            enable_legacy_policy = yes
            os_version = OS_VERSION_RESUME_RHEL6_V2V_EXAMPLE
            checkpoint = resume_swap
            main_vm = VM_NAME_RESUME_RHEL6_V2V_EXAMPLE
        - resume_mapper:
            only esx_67
            msg_content = 'unknown device "mapper"'
            expect_msg = no
            main_vm = VM_NAME_RESUME_MAPPER_V2V_EXAMPLE
        - epoch:
            only esx_67
            main_vm = 'VM_NAME_ESX_EPOCH_V2V_EXAMPLE'
            version_required = "[libguestfs-1.40.2-1,)"
            enable_legacy_policy = yes
        - without_file_architecture:
            only esx_67
            main_vm = 'VM_NAME_NO_FILE_ARCHITECTURE_V2V_EXAMPLE'
            checkpoint = file_architecture
            version_required = "[libguestfs-1.40.2-4,)"
        - invalid_rhv_pem:
            only esx_67
            only negative_test..rhev.rhv_upload
            main_vm = VM_NAME_RHEL7_V2V_EXAMPLE
            checkpoint = 'invalid_pem'
            rhv_upload_opts = "${rhv_upload_opts} -oo rhv-verifypeer=true"
            msg_content = 'virt-v2v: error: failed server prechecks, see earlier errors'
            expect_msg = yes
        - no-copy-illegal:
            only esx_67
            main_vm = VM_NAME_RHEL7_V2V_EXAMPLE
            only negative_test..rhev.rhv_upload
            expect_msg = yes
            v2v_opts = "--no-copy"
            # Means version >= libguestfs-1.40.2-15
            version_required = "[libguestfs-1.40.2-15,)"
            has_rhv_disk_uuid = 'yes'
            variants:
                - no_rhv-disk-uuid:
                    # Means version between virt-v2v-1.45.1-1 and  virt-v2v-1.45.3-1.el9
                    version_required = "[virt-v2v-1.45.1-1,virt-v2v-1.45.3-1.el9)"
                    msg_content = "virt-v2v: error: there must be .-oo rhv-disk-uuid. parameters passed on"
                    checkpoint = "no_uuid"
                - mismatched_rhv-disk-uuid:
                    checkpoint = "mismatched_uuid"
                    msg_content = "virt-v2v: error: the number of .-oo rhv-disk-uuid. parameters .*? has to match the number of guest disk images"
                - invalid_rhv-disk-uuid:
                    msg_content = "-o rhv-upload: invalid UUID for -oo rhv-disk-uuid"
                    version_required = "[virt-v2v-1.45.1-1,)"
                    variants:
                        - null:
                            v2v_opts = "--no-copy -oo rhv-disk-uuid 00000000-0000-0000-0000-000000000000"
                        - illegal:
                            v2v_opts = "--no-copy -oo rhv-disk-uuid abc-de"
                        - illegal_format:
                            v2v_opts = "--no-copy -oo rhv-disk-uuid fc236597-1041-4885-bec9-1d71257c256u"
                - exist_rhv-disk-uuid:
                    version_required = "[virt-v2v-1.45.1-1,)"
                    checkpoint = "exist_uuid"
                    v2v_opts = ""
                    msg_content = "Disk with the UUID .*? already exists"
        - no-copy:
            only esx_67
            only rhev.rhv_upload
            # Means version >= libguestfs-1.40.2-15
            version_required = "[libguestfs-1.40.2-15,)"
            main_vm = VM_NAME_RHEL7_V2V_EXAMPLE
            has_rhv_disk_uuid = 'yes'
            v2v_opts = "--no-copy"
            skip_vm_check = yes
            skip_reason = '--no-copy is specified, no images will be copied'
            variants:
                - normal:
                - without_rhv-disk-uuid:
                  # Means version >= virt-v2v-1.45.3-1.el9
                  version_required = "[virt-v2v-1.45.3-1.el9,)"
                  checkpoint = "no_uuid"
        # ovirt-guest-agent-common
        - OGAC:
            checkpoint = "ogac"
            virtio_win_path = EXPORT_VIRTIO_WIN_PATH_V2V_EXAMPLE
            implementation_change_ver = "[virt-v2v-2.0.6-3,)"
            variants:
                - rhel6:
                  only esx_67
                  enable_legacy_policy = yes
                  qa_path = 'linux/el6'
                  qa_url = QEMU_GUEST_AGENT_EL6_DOWNLOAD_URL_V2V_EXAMPLE
                  main_vm = VM_NAME_RHEL6_V2V_EXAMPLE
                - rhel7:
                  only esx_67
                  qa_path = 'linux/el7'
                  qa_url = QEMU_GUEST_AGENT_EL7_DOWNLOAD_URL_V2V_EXAMPLE
                  main_vm = VM_NAME_RHEL7_V2V_EXAMPLE
                - rhel8:
                  only esx_67
                  qa_path = 'linux/el8'
                  qa_url = QEMU_GUEST_AGENT_EL8_DOWNLOAD_URL_V2V_EXAMPLE
                  main_vm = VM_NAME_RHEL8_V2V_EXAMPLE
                - rhel9:
                  only esx_70
                  version_required = "[libguestfs-1.45.6-2,)"
                  qa_path = 'linux/el9'
                  qa_url = QEMU_GUEST_AGENT_EL9_DOWNLOAD_URL_V2V_EXAMPLE
                  main_vm = VM_NAME_ESX70_RHEL9_V2V_EXAMPLE
                - ubuntu:
                  only esx_67
                  version_required = "[virt-v2v-2.0.6-3,)"
                  qa_path = 'linux/debian'
                  qa_url = QEMU_GUEST_AGENT_DEBIAN_DOWNLOAD_URL_V2V_EXAMPLE
                  main_vm = VM_NAME_UBUNTU_V2V_EXAMPLE
                - debian:
                  only esx_67
                  version_required = "[virt-v2v-2.0.6-3,)"
                  qa_path = 'linux/debian'
                  qa_url = QEMU_GUEST_AGENT_DEBIAN_DOWNLOAD_URL_V2V_EXAMPLE
                  main_vm = VM_NAME_DEBIAN_V2V_EXAMPLE
                - sles:
                  only esx_67
                  qa_path = 'linux/lp151'
                  qa_url = QEMU_GUEST_AGENT_SUSE_DOWNLOAD_URL_V2V_EXAMPLE
                  main_vm = VM_NAME_SLES_V2V_EXAMPLE
                - opensuse:
                  only esx_67
                  boottype = 2
                  qa_path = 'linux/lp151'
                  qa_url = QEMU_GUEST_AGENT_SUSE_DOWNLOAD_URL_V2V_EXAMPLE
                  main_vm = VM_NAME_OPENSUSE_V2V_EXAMPLE
        - ubuntu-openvm-tools:
            only esx_67
            main_vm = VM_NAME_UBUNTUTOOS_V2V_EXAMPLE
            checkpoint = "ubuntu_tools"
        - system_rhv_pem:
            only esx_67
            only rhev.rhv_upload
            # Means version >= libguestfs-1.40.2-21
            version_required = "[libguestfs-1.40.2-21,)"
            rhv_upload_opts = "${rhv_upload_opts} -oo rhv-verifypeer=true"
            variants:
                - set:
                    checkpoint = "system_rhv_pem,set"
                - unset:
                    only negative_test
                    checkpoint = "system_rhv_pem,unset"
                    msg_content = "virt-v2v: error: -o rhv-upload: must use .-oo rhv-cafile. .*? oVirt or RHV"
                    expect_msg = no
        - without_default_net:
            only esx_70
            main_vm = VM_NAME_ESX70_RHEL7_V2V_EXAMPLE
            checkpoint = "without_default_net"
            v2v_debug = force_on
            expect_msg = 'no'
            msg_content = 'Cannot remove Virtual Disk. Related operation is currently in progress'
        - log_size_decrease:
            only esx_67
            version_requried = "[virt-v2v-1.42.0-3,);[nbdkit-server-1.17.4,)"
            v2v_debug = force_on
            checkpoint = 'log decrease'
            main_vm = VM_NAME_RHEL7_V2V_EXAMPLE
            expect_msg = 'yes'
            msg_content = 'libvirt version:%virt-v2v: virt-v2v'
        - copy_on_read:
            only esx_70
            v2v_debug = force_on
            expect_msg = 'yes'
            msg_content = 'v2v: add_drive.*?copyonread:true'
            main_vm = VM_NAME_ESX70_RHEL7_V2V_EXAMPLE
        - env_leak:
            only esx_67
            only dest_json,local
            main_vm = VM_NAME_WIN2019_V2V_EXAMPLE
            env_settings = 'HOME=/root LIBGUESTFS_BACKEND=direct'
            unprivileged_user = 'USER_UNPRIVILEGED_V2V_EXAMPLE'
            os_directory = '/home/${unprivileged_user}'
            expect_msg = 'yes'
            msg_content = 'Can\'t read path'
        - block_dev:
            only esx_70
            only dest_json,local
            main_vm = VM_NAME_ESX70_RHEL8_V2V_EXAMPLE
            checkpoint = "block_dev"
            os_directory = '/var/lib/libvirt/images/'
            json_disk_pattern = 'mydisk%{DiskNo}'
            variants:
                - small:
                    only negative_test
                    block_count = 103
                - large:
                    block_count = 1800
        - without_ip_option:
            only esx_67
            main_vm = VM_NAME_RHEL7_V2V_EXAMPLE
            cmd_has_ip = 'no'
            interaction_run = 'yes'
        - vmx_filename:
            only esx_67
            main_vm = VM_NAME_VMX_FILENAME_OPTIONAL_V2V_EXAMPLE
        - luks:
            interaction_run = 'yes'
            skip_vm_check = yes
            skip_reason = 'luks encryped, cannot boots up without password'
            variants:
                - only_root_luks:
                    version_required = "[virt-v2v-2.0.4-1,)"
                    only esx_70
                    main_vm = VM_NAME_ONLY_ROOT_LUKS_V2V_EXAMPLE
                    luks_password = LUKS_PASSWORD1
                - swap_3luks:
                    only esx_67
                    main_vm = VM_NAME_SWAP_3LUKS_V2V_EXAMPLE
                    luks_password = LUKS_PASSWORD1
                - swap_luks:
                    only esx_67
                    main_vm = VM_NAME_SWAP_LUKS_V2V_EXAMPLE
                    luks_password = LUKS_PASSWORD1
                - root_swap_2luks:
                    only esx_67
                    main_vm = VM_NAME_ROOT_SWAP_2LUKS_V2V_EXAMPLE
                    luks_password = LUKS_PASSWORD1
                # set interaction to 'no' will fail because it requires to run in shell env.
                - keys_from_stdin:
                    only esx_67
                    main_vm = VM_NAME_SWAP_3LUKS_V2V_EXAMPLE
                    luks_password = LUKS_PASSWORD1
                    v2v_opts = ' --keys-from-stdin'
                    env_settings = "echo -e '${luks_password}\n${luks_password}\n${luks_password}\n${luks_password}\n' |"
                    expect_msg = 'no'
                    msg_content = 'Enter key or passphrase'
        - logs:
            only esx_67
            main_vm = VM_NAME_ESX_DEFAULT_V2V_EXAMPLE
            variants:
                 - open_source:
                    checkpoint = 'invalid_source'
                    only negative_test
                    expect_msg = 'yes'
                    msg_content = 'Opening the source|Setting up the source'
                    variants:
                        - vcenter_ip:
                            invalid_vpx_hostname = '1.2.3.4'
                        - esxi_ip:
                            invalid_esx_hostname = '1.2.3.4'
        - bandwidth:
            only esx_70
            v2v_debug = force_on
            checkpoint = "bandwidth"
            dynamic_speeds = "209715200"
            bandwidth_file = "/var/tmp/v2v_bandwidth_file"
            v2v_opts = "--bandwidth=100M --bandwidth-file ${bandwidth_file}"
            expect_msg = 'yes'
            msg_content = 'rate=100M%rate-file=${bandwidth_file}%rate adjusted from 104857600 to 209715200'
            main_vm = VM_NAME_ESX70_RHEL8_V2V_EXAMPLE
        - bandwidth_file_not_exist:
            only esx_70
            bandwidth_file = "/var/tmp/v2v_bandwidth_file_not_exist"
            v2v_opts = "--bandwidth-file ${bandwidth_file}"
            main_vm = VM_NAME_ESX70_RHEL8_V2V_EXAMPLE
        - buggy_selinux_context:
            only esx_67
            enable_legacy_policy = yes
            main_vm = VM_NAME_ESX_BUGGY_SELINUX_CONTEXT_V2V_EXAMPLE
        - admin_account:
            only esx_70
            vpx_username = 'vsphere.local%5cAdministrator'
            main_vm = VM_NAME_ESX70_RHEL9_V2V_EXAMPLE
            expect_msg = 'no'
            msg_content = 'nbdkit:.*?error'
        - keys:
            only esx_67
            main_vm = VM_NAME_SWAP_3LUKS_V2V_EXAMPLE
            checkpoint = 'luks_dev_keys'
            variants:
                - valid:
                    luks_keys = LUkS_DEV_KEYS
                    luks_password = LUKS_PASSWORD1
                    skip_vm_check = yes
                    skip_reason = 'luks encryped, cannot boots up without password'
                - invalid:
                    only negative_test
                    variants:
                        - pwd:
                            luks_keys = LUkS_DEV_INVALID_KEYS_PWD
                            expect_msg = 'yes'
                            msg_content = 'virt-v2v: could not find key to open LUKS encrypted'
                        - pwd_file:
                            checkpoint = 'luks_dev_keys,invalid_pwd_file'
                            luks_keys = LUkS_DEV_INVALID_KEYS_FILE
                            expect_msg = 'yes'
                            msg_content = 'virt-v2v: fopen: \S+: No such file or directory'
        - win_bitlocker:
            only esx_70
            version_required = "[virt-v2v-1.42.0-15,)"
            checkpoint = 'luks_dev_keys'
            main_vm = VM_NAME_WIN_BITLOCKER_V2V_EXAMPLE
            luks_keys = LUKS_WIN_BIT_LOCKER_DEV_KEYS
            skip_vm_check = yes
            skip_reason = 'luks encryped, cannot boots up without password'
        - cve_2022_2211:
            only esx_70
            only dest_local
            shell = yes
            checkpoint = 'cve_2022_2211'
            main_vm = VM_NAME_WIN_BITLOCKER_V2V_EXAMPLE
            luks_keys = LUKS_WIN_BIT_LOCKER_DEV_KEYS
        - invalid_mac_ip:
            only esx_67
            only negative_test
            version_required = "[virt-v2v-1.42.0-6,)"
            main_vm = VM_NAME_RHEL8_V2V_EXAMPLE
            variants:
                - addr:
                    v2v_opts = '--mac 00:50:56:ac:cd:56:ip:invalid_ip_addr'
                    expect_msg = 'yes'
                    msg_content = 'cannot parse --mac ip .*?: doesn’t look like .*? is an IP address'
                - prefix:
                    v2v_opts = '--mac 00:50:56:ac:cd:56:ip:00:50:56:ac:cd:56:ip:192.168.1.1,192.168.1.2,129,10.1.1.1'
                    expect_msg = 'yes'
                    msg_content = 'virt-v2v: error: --mac ip prefix length field is out of range'
        - no_space:
            only esx_70
            only negative_test
            main_vm = VM_NAME_NO_SPACE_V2V_EXAMPLE
            msg_content = "virt-v2v: error: not enough free space for conversion on filesystem"
            expect_msg = yes
        - inodes:
            only esx_70
            version_required = "[virt-v2v-1.45.1-1,)"
            variants:
                - more_inodes:
                    main_vm = VM_NAME_MORE_INODES_V2V_EXAMPLE
                - less_inodes:
                    only negative_test
                    expect_msg = 'yes'
                    msg_content = 'virt-v2v: error: not enough available inodes for conversion on filesystem'
                    main_vm = VM_NAME_LESS_INODES_V2V_EXAMPLE
        - gt_16_disks:
            only esx_70
            main_vm = 'VM_NAME_ESX_GT_16_DISKS_V2V_EXAMPLE'
        - must_ip:
            only esx_67
            only it_default
            only negative_test
            version_required = "[virt-v2v-1.45.98-1,)"
            main_vm = VM_NAME_ESX_UEFI_WINDOWS_V2V_EXAMPLE
            msg_content = 'virt-v2v: error: -i libvirt: expecting -ip passwordfile parameter'
            expect_msg = yes
            cmd_has_ip = 'no'
        - nonexist_iso:
            only esx_70
            version_requried = "[libvirt-7.0.0-1,)"
            main_vm = VM_NAME_ESX70_NONEXIST_ISO_V2V_EXAMPLE
        - no_useless_info:
            only esx_67
            version_required = '[nbdkit-server-1.12.5-1,)'
            main_vm = VM_NAME_RESUME_MAPPER_V2V_EXAMPLE
            expect_msg = 'no'
            msg_content = 'Exception AttributeError'
        - partionless_dev:
            only esx_67
            main_vm = VM_NAME_ESX67_PARTIONLESS_DEV_V2V_EXAMPLE
            msg_content = "virt-v2v: error: .*? inspect_os:"
            expect_msg = no
            skip_vm_check = yes
            skip_reason = 'special guest pariton and cannot get IP automatically'
        - no_ovirtsdk4_pkg:
            only esx_67
            only negative_test
            only rhev.rhv_upload
            checkpoint = 'ovirtsdk4_pkg'
            main_vm = VM_NAME_RHEL8_V2V_EXAMPLE
            msg_content = "virt-v2v: error: the Python module ‘ovirtsdk4’ could not be loaded"
            expect_msg = yes
        - rpmsave:
            only esx_67
            main_vm = VM_NAME_ESX67_RPMSAVE_V2V_EXAMPLE
        - invalid_vddk_thumbprint:
            only esx_70
            only negative_test
            only it_vddk
            version_required = "[nbdkit-1.30.8-1,)"
            main_vm = VM_NAME_ESX70_RHEL8_V2V_EXAMPLE
            vddk_thumbprint = 'AA:2B:AD'
            msg_content_yes = "nbdkit: vddk[1]: error: Please verify whether the "thumbprint" parameter"
        - non_admin_user:
            only esx_80
            main_vm = VM_NAME_NON_ADMIN_V2V_EXAMPLE
            vpx_username = VMWARE_NON_ADMIN_USER_EXAMPLE
    variants:
        - positive_test:
            status_error = 'no'
        - negative_test:
            status_error = 'yes'
            only option_root.single,invalid_rhv_pem,no-copy-illegal,system_rhv_pem.unset,logs.open_source,keys.invalid,invalid_mac_ip,block_dev.small,no_space,inodes.less_inodes,windows.external_poweroff,must_ip,no_ovirtsdk4_pkg,vddk_errors_41_disks,invalid_vddk_thumbprint
