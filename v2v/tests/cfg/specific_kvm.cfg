- specific_kvm:
    type = 'specific_kvm'
    vm_type = 'libvirt'
    start_vm = 'no'
    take_regular_screendumps = no
    v2v_timeout = '1200'
    image_format = 'qcow2'

    # Regular kvm guest parameters
    only source_kvm
    os_type = 'linux'
    input_mode = 'libvirt'
    hypervisor = 'kvm'
    username = 'root'
    password = 'redhat'

    # Shell paramters
    remote_shell_client = 'ssh'
    remote_shell_port = 22
    remote_shell_prompt = '^\w:\\.*>\s*$|^\[.*\][\#\$]\s*$'
    status_test_command = 'echo $?'

    variants:
        - output_mode:
            variants:
                - local:
                    only dest_none
                    output_mode = 'local'
                    target = ${output_mode}
                - rhev:
                    only dest_rhev.NFS
                - libvirt:
                    only dest_libvirt
    variants:
        - default:
        - virtioscis_disk:
            checkpoint = 'virtioscis_disk'
            main_vm = 'VM_VIRTIOSCIC_DISK_V2V_EXAMPLE'
        - sata_disk:
            checkpoint = 'sata_disk'
        - multi_disks:
            variants:
                - linux:
                    os_type = 'linux'
                    checkpoint = 'multi_disks'
                    added_disks_count = 5
                    vm_user = 'root'
                    vm_pwd = 'redhat'
                - windows:
                    os_type = 'windows'
                    checkpoint = 'multi_disks'
                    added_disks_count = 4
                    added_disk_target = 'ide'
                    os_version = 'OS_VERSION_WIN_V2V_EXAMPLE'
                    main_vm = 'VM_WIN_V2V_EXAMPLE'
                    vms = ${main_vm}
        - multi_kernel:
            checkpoint = 'multi_kernel'
            main_vm = 'VM_MULTI_KERNEL_V2V_EXAMPLE'
        - virtio:
            variants:
                - windows:
                    variants:
                        - enable:
                            checkpoint = 'ctemp'
                            os_version = 'win2008'
                            main_vm = 'VM_WIN_VIRTIO_ON_V2V_EXAMPLE'
                            expect_msg = 'no'
                            msg_content = '.*case_sensitive_path: v2v: no file or directory.*'
                        - disable:
                            checkpoint = 'virtio_off_win'
                            os_version = 'OS_VERSION_WIN_V2V_EXAMPLE'
                            main_vm = 'VM_WIN_V2V_EXAMPLE'
                - linux:
                    os_type = 'linux'
                    variants:
                        - enable:
                            checkpoint = 'virtio_on'
                        - disable:
                            checkpoint = 'virtio_off'
        - noyumrepo-rhn:
            checkpoint = 'noyumrepo-rhn'
            main_vm = 'VM_NOYUMREPO_V2V_EXAMPLE'
        - kdump:
            checkpoint = 'kdump'
            main_vm = 'VM_KDUMP_V2V_EXAMPLE'
            expect_msg = 'no'
            msg_content = '.*multiple files in /boot could be the initramfs.*'
        - floppy:
            checkpoint = 'floppy'
        - floppy_devmap:
            checkpoint = 'floppy_devmap'
            expect_msg = 'no'
            msg_content = 'unknown filesystem /dev/fd'
        - fstab:
            variants:
                - cdrom:
                    checkpoint = 'fstab_cdrom'
                    msg_content = 'warning: /files/etc/fstab.*? references unknown device "cdrom"'
                    expect_msg = 'no'
                - label:
                    checkpoint = 'fstab_label'
                    msg_content = 'unknown filesystem label.*'
                    expect_msg = 'no'
                - uuid:
                    checkpoint = 'fstab_uuid'
                    msg_content = 'unknown filesystem UUID.*'
                    expect_msg = 'no'
                - virtio:
                    checkpoint = 'fstab_virtio'
                    msg_content = 'unknown filesystem /dev/vd.*'
                    expect_msg = 'no'
                - sr0:
                    checkpoint = fstab_sr0
                    fstab_content = '/dev/sr0   /dev/sr0    ext4    defaults    0 0'
                    msg_content = 'virt-v2v: warning: /files/etc/fstab/.*? references unknown device "sr"'
                    expect_msg = no
                    output_mode = local
                    target = ${output_mode}
                    skip_check = yes
                - invalid:
                    checkpoint = 'fstab_invalid'
                    msg_content = 'libguestfs error: /etc/fstab:.*?: augeas parse failure:'
                    expect_msg = 'yes'
        - corrupt_rpmdb:
            checkpoint = 'corrupt_rpmdb'
            expect_msg = 'no'
            msg_content = '.*error: rpmdb:.*'
        - bogus_kernel:
            main_vm = 'VM_BOGUS_KERNEL_V2V_EXAMPLE'
            msg_content = 'kernel [\s\S]* in bootloader, as it does not exist'
            expect_msg = 'yes'
        - unclean_fs:
            checkpoint = 'unclean_fs'
            main_vm = 'VM_WIN_8_V2V_EXAMPLE'
            msg_content = '.*Windows Hibernation or Fast Restart.*'
            expect_msg = 'yes'
        - network:
            variants:
                - multi_netcards:
                    checkpoint = 'multi_netcards'
                - virtio:
                    checkpoint = 'network_virtio'
                - rtl8139:
                    checkpoint = 'network_rtl8139'
                - e1000:
                    checkpoint = 'network_e1000'
                - only_net:
                    checkpoint = only_net
                - only_br:
                    checkpoint = only_br
        - display:
            variants:
                - spice:
                    checkpoint = 'spice'
                - spice_encrypt:
                    checkpoint = 'spice_encrypt'
                    spice_passwd = 'redhat'
                - mix:
                    only libvirt
                    skip_check = yes
                    variants:
                        - spice:
                            checkpoint = spice
                        - vnc:
                            checkpoint = vnc
                    variants:
                        - qxl:
                            checkpoint += _qxl
                        - cirrus:
                            checkpoint += _cirrus
                - listen:
                    only libvirt
                    variants:
                        - type_none:
                            checkpoint = listen_none
                        - type_socket:
                            checkpoint = listen_socket
        - selinux:
            variants:
                - host_enable:
                    checkpoint = 'host_selinux_on'
                - vm_enable:
                    checkpoint = 'selinux_enforcing'
                - vm_disable:
                    checkpoint = 'selinux_disabled'
        - firewalld:
            variants:
                - host_start:
                    checkpoint = 'host_firewalld_start'
                - host_stop:
                    checkpoint = 'host_firewalld_stop'
                - guest_status:
                    checkpoint = 'guest_firewalld_status'
        - remove_securetty:
            checkpoint = 'remove_securetty'
        - blank_2nd_disk:
            checkpoint = 'blank_2nd_disk'
        - time:
            ntp_server = 'NTP_SERVER_V2V_EXAMPLE'
            variants:
                - ntpd_on:
                    checkpoint = 'ntpd_on'
                - sync_ntp:
                    checkpoint = 'sync_ntp'
        - no_space:
            checkpoint = 'host_no_space_setcache'
        - mem_alloc:
            only libvirt
            main_vm = VM_MEM_ACCLOC_V2V_EXAMPLE
        - no_libguestfs_backend:
            checkpoint = no_libguestfs_backend
        - file_image:
            checkpoint = file_image
        - lvm_multidisk:
            main_vm = VM_LVM_MULTIDISK_V2V_EXAMPLE
    variants:
        - positive_test:
            status_error = 'no'
            # Convert specific VM to rhev
            variants:
                - linux:
                    no default
                    no unclean_fs
                    no virtio.windows
                    no multi_disks.windows
                    no fstab.invalid
                    no display.mix
                    only output_mode.rhev
                - windows:
                    os_type = 'windows'
                    shutdown_command = 'shutdown /s /f /t 0'
                    reboot_command = 'shutdown /r /f /t 0'
                    status_test_command = 'echo %errorlevel%'
                    shell_prompt = '^\w:\\.*>\s*$'
                    shell_linesep = '\r\n'
                    shell_client = 'nc'
                    shell_port = 10022
                    file_transfer_client = 'rss'
                    file_transfer_port = 10023
                    redirs += ' file_transfer'
                    guest_port_remote_shell = 10022
                    guest_port_file_transfer = 10023
                    rtc_base = 'localtime'
                    network_query = 'ipconfig /all'
                    restart_network = 'ipconfig /renew'
                    vm_user = 'Administrator'
                    vm_pwd = '123qweP'
                    variants:
                        - virtio:
                            only virtio.windows
                            only output_mode.rhev
                        - multi_disks:
                            only multi_disks.windows
                            only output_mode.rhev
                - to_libvirt:
                    only display.mix,display.listen,mem_alloc
                    only output_mode.libvirt
        - negative_test:
            status_error = 'yes'
            variants:
                - not_shutdown:
                    only default
                    only output_mode.local
                    msg_content = '.*is running or paused.*%virt-v2v: error: internal error: invalid argument:.*'
                    expect_msg = 'yes'
                    variants:
                        - running:
                            vm_state = 'running'
                            checkpoint = ${vm_state}
                        - paused:
                            vm_state = 'paused'
                            checkpoint = ${vm_state}
                - serial_terminal:
                    only default
                    only output_mode.rhev
                    checkpoint = 'serial_terminal'
                    msg_content = 'virt-v2v: error: no kernels were found in the grub configuration'
                    expect_msg = 'yes'
                - no_space:
                    only default
                    only output_mode.rhev
                    expect_msg = 'yes'
                    variants:
                        - guest:
                            checkpoint = 'no_space'
                            msg_content = "virt-v2v: error: not enough free space for conversion on filesystem '/'"
                        - host:
                            checkpoint = 'host_no_space'
                            msg_content = 'virt-v2v: error: insufficient free space in the conversion server'
                - unclean_file_system:
                    only unclean_fs
                    only output_mode.rhev
                - fstab_invalid:
                    only fstab.invalid
                    only output_mode.rhev
