- specific_kvm:
    # The cases from KVM to RHV are not valid scenarios for v2v.
    # No real customers will use v2v like that. so we drop most
    # kvm to rhv scenarios and migrate the guests to xen or esx
    # server, and only few kvm cases are kept for history reason.
    # Please use esx or xen guests to do testing.
    type = 'specific_kvm'
    start_vm = 'no'
    take_regular_screendumps = no
    v2v_timeout = '7200'
    os_type = 'linux'
    username = 'root'
    password = GENERAL_GUEST_PASSWORD
    # 'on', 'force_on' to enable '-v -x', others values to disable it
    v2v_debug = on

    # Shell parameters
    remote_shell_client = 'ssh'
    remote_shell_port = 22
    remote_shell_prompt = '^\w:\\.*>\s*$|^\[.*\][\#\$]\s*$'
    status_test_command = 'echo $?'

    variants:
        - it_vddk:
            only source_esx
            input_transport = 'vddk'
            # Set the real vddk_libdir/thumbprint or keep it commented
            #vddk_libdir = VDDK_LIB_DIR_EXAMPLE
            #vddk_thumbprint = VDDK_THUMBPRINT_EXAMPLE
        - it_default:
    variants:
        - output_mode:
            variants:
                - local:
                    only dest_local
                - rhev:
                    only dest_rhev.NFS
                    variants:
                        - rhv_upload:
                            output_method = "rhv_upload"
                            rhv_upload_passwd = ${ovirt_engine_password}
                            rhv_upload_passwd_file = "/tmp/rhv_upload_passwd_file"
                            rhv_upload_opts = "-oc ${ovirt_engine_url} -op ${rhv_upload_passwd_file} -oo rhv-cafile=${local_ca_file_path} -oo rhv-cluster=${cluster_name}"
                        - rhv:
                            output_method = "rhev"
                - libvirt:
                    only dest_libvirt
    variants:
        - esx:
            vms = ""
            vpx_passwd_file = "/tmp/v2v_vpx_passwd"
            v2v_opts = " -ip ${vpx_passwd_file}"
            variants:
                - esx_80:
                    only source_esx.esx_80
                - esx_70:
                    only source_esx.esx_70
                - esx_67:
                    only source_esx.esx_67
                - esx_65:
                    only source_esx.esx_65
        - kvm:
            vm_type = 'libvirt'
            image_format = 'qcow2'
            only source_kvm
        - xen:
            vms = ""
            only source_xen
            enable_legacy_policy = yes
            xen_host_user = 'root'
            xen_host_passwd = 'XEN_PASSWORD'
            remote_host = ${xen_hostname}
    variants:
        - default:
        - sata_disk:
            only source_esx.esx_70
            version_required = "[libvirt-7.8.0-1,)"
            main_vm = 'VM_SATA_DISK_V2V_EXAMPLE'
            libguestfs_backend = 'direct'
        - multi_disks:
            variants:
                - linux:
                    only source_esx.esx_70
                    os_type = 'linux'
                    checkpoint = 'multi_disks'
                    vm_user = 'root'
                    vm_pwd = GENERAL_GUEST_PASSWORD
                    main_vm = "VM_MULTI_DISKS_V2V_EXAMPLE"
        - multi_kernel:
            only source_esx.esx_70
            # this case requires '-v -x'
            v2v_debug = force_on
            expect_msg = 'yes'
            msg_content = 'best kernel for this guest'
            checkpoint = 'multi_kernel'
            main_vm = 'VM_MULTI_KERNEL_V2V_EXAMPLE'
        - noyumrepo-rhn:
            only esx_70
            main_vm = 'VM_NOYUMREPO_V2V_EXAMPLE'
        - kdump:
            only esx_70
            checkpoint = 'kdump'
            main_vm = 'VM_KDUMP_V2V_EXAMPLE'
            expect_msg = 'no'
            msg_content = '.*multiple files in /boot could be the initramfs.*'
        - fstab:
            variants:
                - cdrom:
                    only source_esx.esx_70
                    msg_content = 'warning: /files/etc/fstab.*? references unknown device "cdrom"'
                    expect_msg = 'no'
                    main_vm = 'VM_FSTAB_WITH_CDROM_V2V_EXAMPLE'
                - label:
                    only source_esx.esx_70
                    msg_content = 'unknown filesystem label.*'
                    expect_msg = 'no'
                    main_vm = 'VM_FSTAB_WITH_LABEL_V2V_EXAMPLE'
                - uuid:
                    only source_esx.esx_70
                    msg_content = 'unknown filesystem UUID.*'
                    expect_msg = 'no'
                    main_vm = 'VM_FSTAB_WITH_UUID_V2V_EXAMPLE'
                - sr0:
                    only source_esx.esx_70
                    main_vm = 'VM_FSTAB_WITH_SR0_V2V_EXAMPLE'
                    msg_content = 'virt-v2v: warning: /files/etc/fstab/.*? references unknown device "sr"'
                    expect_msg = no
                    skip_vm_check = yes
                - invalid:
                    only source_esx.esx_70
                    msg_content = 'virt-v2v: error: libguestfs error: inspect_os: .*?: augeas parse failure:'
                    expect_msg = 'yes'
                    main_vm = 'VM_INVALID_FSTAB_V2V_EXAMPLE'
        - corrupt_rpmdb:
            only source_esx.esx_70
            main_vm = 'VM_CORRUPT_RPMDB_V2V_EXAMPLE'
            expect_msg = 'no'
            msg_content = 'error: rpmdb'
        - bogus_kernel:
            only esx_70
            main_vm = 'VM_BOGUS_KERNEL_V2V_EXAMPLE'
            msg_content = 'kernel [\s\S]* in bootloader, as it does not exist'
            expect_msg = 'yes'
            enable_legacy_policy = yes
        - network:
            variants:
                - multi_netcards:
                    only source_esx.esx_70
                    main_vm = 'VM_NAME_ESX_MULTI_NETCARDS_V2V_EXAMPLE'
                    checkpoint = 'multi_netcards'
                - rtl8139:
                    only source_xen
                    main_vm = 'VM_NET_RTL8139_V2V_EXAMPLE'
                - e1000:
                    only source_esx.esx_70
                    os_version = 'OS_VERSION_NET_E1000_V2V_EXAMPLE'
                    main_vm = 'VM_NET_E1000_V2V_EXAMPLE'
                - only_net:
                    only source_kvm
                    checkpoint = only_net
                - only_br:
                    only source_kvm
                    checkpoint = only_br
        - display:
            # Those cases only supports kvm guests
            only source_kvm
            variants:
                - spice:
                    checkpoint = 'spice'
                - spice_encrypt:
                    checkpoint = 'spice_encrypt'
                    spice_passwd = GENERAL_GUEST_PASSWORD
                - mix:
                    only libvirt
                    skip_vm_check = yes
                    variants:
                        - spice:
                            checkpoint = spice
                        - vnc:
                            checkpoint = vnc
                    variants:
                        - qxl:
                            checkpoint += _qxl
                        - cirrus:
                            checkpoint += _cirrus
                - listen:
                    only libvirt
                    variants:
                        - type_none:
                            checkpoint = listen_none
                        - type_socket:
                            checkpoint = listen_socket
        - selinux:
            only source_kvm
            variants:
                - host_enable:
                    checkpoint = 'host_selinux_on'
                - vm_enable:
                    checkpoint = 'selinux_enforcing'
                - vm_disable:
                    checkpoint = 'selinux_disabled'
        - selinuxtype:
            only esx.esx_70
            variants:
                - min:
                    checkpoint = 'check_selinuxtype'
                    main_vm = 'VM_SELINUXTYPE_MIN_V2V_EXAMPLE'
                - missing:
                    main_vm = 'VM_SELINUXTYPE_NONE_V2V_EXAMPLE'
                - mls:
                    checkpoint = 'check_selinuxtype'
                    main_vm = 'VM_SELINUXTYPE_MLS_V2V_EXAMPLE'
        - firewalld:
            only source_kvm
            variants:
                - host_start:
                    checkpoint = 'host_firewalld_start'
                - host_stop:
                    checkpoint = 'host_firewalld_stop'
                - guest_status:
                    checkpoint = 'guest_firewalld_status'
        - remove_securetty:
            only source_kvm
            checkpoint = 'remove_securetty'
        - blank_2nd_disk:
            only source_kvm
            checkpoint = 'blank_2nd_disk'
        - time:
            only source_kvm
            ntp_server = 'NTP_SERVER_V2V_EXAMPLE'
            variants:
                - ntpd_on:
                    checkpoint = 'ntpd_on'
                - sync_ntp:
                    checkpoint = 'sync_ntp'
        - no_space:
            only esx.esx_70
            only rhev
            checkpoint = 'host_no_space_setcache'
            main_vm = 'VM_ESX_DEFAULT_NAME_V2V_EXAMPLE'
        - no_libguestfs_backend:
            only esx.esx_70
            main_vm = 'VM_ESX_DEFAULT_NAME_V2V_EXAMPLE'
            checkpoint = no_libguestfs_backend
        - file_image:
            only source_kvm
            checkpoint = file_image
        - win_rootonlinux:
            only source_xen
            os_version = 'WINDOWS_ROOT_OS_VERSION_V2V_EXAMPLE'
            main_vm = 'WINDOWS_ROOT_VM_NAME_V2V_EXAMPLE'
        - vmware_os_firmware:
            only esx.esx_70
            boottype = 2
            checkpoint = vmware_os_firmware
            main_vm = 'VM_UEFI_GUEST_V2V_EXAMPLE'
        - cbt_snapshot:
            only source_esx.esx_80
            boottype = 2
            main_vm = 'VM_CBT_SNAPSHOT_V2V_EXAMPLE'
        - cpu_mem_hotplug:
            only source_esx.esx_80
            boottype = 2
            main_vm = 'VM_CPU_MEM_HOTPLUG_V2V_EXAMPLE'
        - 80_chars:
            only source_esx.esx_80
            only libvirt
            only it_vddk
            boottype = 2
            main_vm = 'VM_NAME_80_CHARS_V2V_EXAMPLE'
        - non_exist_network:
            only source_esx.esx_80
            only rhev
            boottype = 2
            main_vm = 'VM_NON_EXIST_NETWORK_V2V_EXAMPLE'
            skip_vm_check = yes
            skip_reason = "bz#RHEL-1718 on win11 guest"
        - partial_efi:
            only source_esx.esx_80
            version_required = "[virt-v2v-2.5.5-1.el9,)"
            boottype = 2
            main_vm = 'VM_NAME_80_UBUNTU_PARTIAL_EFI_V2V_EXAMPLE'
            skip_vm_check = yes
            skip_reason = "Special configuration. No console available"
        - serial_port:
            only esx_80
            version_required = "[libvirt-10.5.0-4.el9,)"
            variants:
                - chars_telnet:
                    only libvirt
                    boottype = 2
                    main_vm = VM_NAME_SERVIAL_PORT_CHARACTERS_TELNET_URL_V2V_EXAMPLE
                - empty_info:
                    boottype = 2
                    main_vm = VM_NAME_SERVIAL_PORT_EMPTY_V2V_EXAMPLE
        - vmx_char:
            only esx_80
            only libvirt
            boottype = 2
            main_vm = VM_NAME_VMX_CONTAINS_CHAR_V2V_EXAMPLE
        - efi_devicemap:
            only esx_80
            boottype = 2
            main_vm = VM_NAME_EFI_GUEST_DEVICE_MAP_FILE_V2V_EXAMPLE
        - cmd_output_4M:
            only esx_80
            only libvirt
            boottype = 2
            main_vm = VM_NAME_SLES_INSTALL_KERNEL_SOURCE_PKG_V2V_EXAMPLE
        - vmtools_spausedd:
            only esx_70
            main_vm = VM_NAME_OPEM_VM_TOOLS_DEPEND_SPAUSEDD_V2V_EXAMPLE
    variants:
        - positive_test:
            status_error = 'no'
            # Convert specific VM to rhev
            variants:
                - linux:
                    no default
                    no multi_disks.windows
                    no network.e1000
                    no fstab.invalid
                    no display.mix
                    no win_rootonlinux
                    no non_exist_network
                - windows:
                    os_type = 'windows'
                    shutdown_command = 'shutdown /s /f /t 0'
                    reboot_command = 'shutdown /r /f /t 0'
                    status_test_command = 'echo %errorlevel%'
                    shell_prompt = '^\w:\\.*>\s*$'
                    shell_linesep = '\r\n'
                    shell_client = 'nc'
                    shell_port = 10022
                    file_transfer_client = 'rss'
                    file_transfer_port = 10023
                    redirs += ' file_transfer'
                    guest_port_remote_shell = 10022
                    guest_port_file_transfer = 10023
                    rtc_base = 'localtime'
                    network_query = 'ipconfig /all'
                    restart_network = 'ipconfig /renew'
                    vm_user = 'Administrator'
                    vm_pwd = DEFAULT_WIN_VM_PASSWORD
                    variants:
                        - multi_disks:
                            only multi_disks.windows
                        - network:
                            only network.e1000,non_exist_network
                - to_libvirt:
                    only display.mix,display.listen,80_chars
                    only output_mode.libvirt
                - to_local:
                    only win_rootonlinux
                    only output_mode.local
        - negative_test:
            status_error = 'yes'
            variants:
                - not_shutdown:
                    only default.kvm
                    only output_mode.local
                    msg_content = 'virt-v2v: error:.*is running or paused.*must be shut down'
                    expect_msg = 'yes'
                    variants:
                        - running:
                            vm_state = 'running'
                            checkpoint = ${vm_state}
                        - paused:
                            vm_state = 'paused'
                            checkpoint = ${vm_state}
                - serial_terminal:
                    only default.esx.esx_70
                    msg_content = 'virt-v2v: error: no kernels were found in the bootloader configuration'
                    expect_msg = 'yes'
                    main_vm = "VM_GUEST_SERIAL_TERMINAL_V2V_EXAMPLE"
                - no_space:
                    expect_msg = 'yes'
                    variants:
                        - host:
                            only default.esx.esx_70
                            main_vm = "VM_GUEST_NO_SPACE_V2V_EXAMPLE"
                            checkpoint = 'host_no_space'
                            msg_content = 'virt-v2v: error: insufficient free space in the conversion server'
                - fstab_invalid:
                    only fstab.invalid
