- specific_kvm:
    type = 'specific_kvm'
    vm_type = 'libvirt'
    start_vm = 'no'
    take_regular_screendumps = no
    v2v_timeout = '1200'

    # Regular kvm guest parameters
    os_type = 'linux'
    input_mode = 'libvirt'
    hypervisor = 'kvm'
    username = 'root'
    password = 'redhat'

    # RHEVM parameters
    ovirt_engine_url = 'OVIRT_ENGINE_URL_V2V_EXAMPLE'
    ovirt_engine_user = 'OVIRT_ENGINE_USER_V2V_EXAMPLE'
    ovirt_engine_password = 'OVIRT_ENGINE_PASSWORD_V2V_EXAMPLE'

    # Using NFS storage here
    export_name = 'NFS_EXPORT_NAME_V2V_EXAMPLE'
    storage_name = 'NFS_STORAGE_NAME_V2V_EXAMPLE'
    cluster_name = 'NFS_CLUSTER_NAME_V2V_EXAMPLE'
    nfs_storage = 'NFS_EXPORT_STORAGE_V2V_EXAMPLE'

    # Shell paramters
    remote_shell_client = 'ssh'
    remote_shell_port = 22
    remote_shell_prompt = '^\w:\\.*>\s*$|^\[.*\][\#\$]\s*$'
    status_test_command = 'echo $?'

    variants:
        - output_mode:
            variants:
                - local:
                    output_mode = 'local'
                    target = ${output_mode}
                - rhev:
                    output_mode = 'rhev'
                    network = 'OVIRT_NODE_NETWORK_V2V_EXAMPLE'
                    bridge = 'OVIRT_NODE_BRIDGE_V2V_EXAMPLE'
                    target = 'ovirt'
                    output_storage = ${nfs_storage}
                    # Libvirt SASL authencation(under VDSM control)
                    sasl_user = 'v2v_tester@ovirt'
                    sasl_pwd = 'v2v_tester_pwd'
                    remote_ip = 'NFS_OVIRT_NODE_ADDRESS_V2V_EXAMPLE'
                    remote_preprocess = 'yes'
                    remote_node_address = ${remote_ip}
                    remote_node_user = 'root'
                    remote_node_password = 'redhat'
                    remote_user = ${remote_node_user}
                    remote_pwd = ${remote_node_password}
    variants:
        - default:
            main_vm = 'VM_NAME_KVM_DEFAULT_V2V_EXAMPLE'
        - virtioscis_disk:
            checkpoint = 'virtioscis_disk'
            main_vm = 'VM_VIRTIOSCIC_DISK_V2V_EXAMPLE'
        - sata_disk:
            checkpoint = 'sata_disk'
        - multi_disks:
            variants:
                - linux:
                    os_type = 'linux'
                    checkpoint = 'multi_disks'
                    added_disks_count = 5
                    vm_user = 'root'
                    vm_pwd = 'redhat'
                - windows:
                    os_type = 'windows'
                    checkpoint = 'multi_disks'
                    added_disks_count = 4
                    added_disk_target = 'ide'
                    os_version = 'OS_VERSION_WIN_V2V_EXAMPLE'
                    main_vm = 'VM_WIN_V2V_EXAMPLE'
                    vms = ${main_vm}
        - multi_kernel:
            kernel_fm_url = 'KERNEL_FIRMWARE_URL_V2V_EXAMPLE'
            kernel_url = 'KERNEL_URL_V2V_EXAMPLE'
            variants:
                - default_kernel:
                    checkpoint = 'multi_kernel'
                - debug_kernel:
                    checkpoint = 'debug_kernel'
        - virtio:
            variants:
                - windows:
                    variants:
                        - enable:
                            checkpoint = 'ctemp'
                            os_version = 'win2008'
                            main_vm = 'VM_WIN_VIRTIO_ON_V2V_EXAMPLE'
                            screenshots_for_match = 'WIN_VIRTIO_IMAGES_FOR_MATCH_V2V_EXAMPLE'
                        - disable:
                            checkpoint = 'virtio_off_win'
                            os_version = 'OS_VERSION_WIN_V2V_EXAMPLE'
                            main_vm = 'VM_WIN_V2V_EXAMPLE'
                - linux:
                    os_type = 'linux'
                    variants:
                        - enable:
                            checkpoint = 'virtio_on'
                        - disable:
                            checkpoint = 'virtio_off'
        - noyumrepo-rhn:
            checkpoint = 'noyumrepo-rhn'
            main_vm = 'VM_NOYUMREPO_V2V_EXAMPLE'
        - kdump:
            checkpoint = 'kdump'
            main_vm = 'VM_KDUMP_V2V_EXAMPLE'
        - floppy:
            checkpoint = 'floppy'
        - floppy_devmap:
            checkpoint = 'floppy_devmap'
        - fstab:
            variants:
                - cdrom:
                    checkpoint = 'fstab_cdrom'
                - label:
                    checkpoint = 'fstab_label'
                - uuid:
                    checkpoint = 'fstab_uuid'
                - virtio:
                    checkpoint = 'fstab_virtio'
        - corrupt_rpmdb:
            checkpoint = 'corrupt_rpmdb'
        - bogus_kernel:
            checkpoint = 'bogus_kernel'
        - unclean_fs:
            checkpoint = 'unclean_fs'
            main_vm = 'VM_WIN_8_V2V_EXAMPLE'
        - network:
            variants:
                - multi_netcards:
                    checkpoint = 'multi_netcards'
                - virtio:
                    checkpoint = 'network_virtio'
                - rtl8139:
                    checkpoint = 'network_rtl8139'
                - e1000:
                    checkpoint = 'network_e1000'

    variants:
        - positive_test:
            status_error = 'no'
            # Convert specific VM to rhev
            variants:
                - linux:
                    no default
                    no unclean_fs
                    no virtio.windows
                    no multi_disks.windows
                    only output_mode.rhev
                - windows:
                    os_type = 'windows'
                    shutdown_command = 'shutdown /s /f /t 0'
                    reboot_command = 'shutdown /r /f /t 0'
                    status_test_command = 'echo %errorlevel%'
                    shell_prompt = '^\w:\\.*>\s*$'
                    shell_linesep = '\r\n'
                    shell_client = 'nc'
                    shell_port = 10022
                    file_transfer_client = 'rss'
                    file_transfer_port = 10023
                    redirs += ' file_transfer'
                    guest_port_remote_shell = 10022
                    guest_port_file_transfer = 10023
                    rtc_base = 'localtime'
                    network_query = 'ipconfig /all'
                    restart_network = 'ipconfig /renew'
                    vm_user = 'Administrator'
                    vm_pwd = '123qweP'
                    variants:
                        - virtio:
                            only virtio.windows
                            only output_mode.rhev
                        - multi_disks:
                            only multi_disks.windows
                            only output_mode.rhev
        - negative_test:
            status_error = 'yes'
            variants:
                - not_shutdown:
                    only default
                    only output_mode.local
                    variants:
                        - running:
                            vm_state = 'running'
                            checkpoint = ${vm_state}
                        - paused:
                            vm_state = 'paused'
                            checkpoint = ${vm_state}
                - serial_terminal:
                    only default
                    only output_mode.rhev
                    checkpoint = 'serial_terminal'
                - no_space:
                    only default
                    only output_mode.rhev
                    checkpoint = 'no_space'
                - unclean_file_system:
                    only unclean_fs
                    only output_mode.rhev
